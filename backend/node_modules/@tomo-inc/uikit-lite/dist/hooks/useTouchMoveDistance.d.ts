export interface TouchMoveDistance {
    x: number;
    y: number;
}
/**
 * Custom hook to track touch movement distances on a given HTML element.
 *
 * @param ref - A React ref object pointing to the HTML element to monitor for touch events.
 * @param options - Configuration options for the hook.
 * @param options.enable - A boolean flag to enable or disable the touch tracking.
 * @param options.enableMouse - A boolean flag to enable or disable the mouse tracking.
 * @param options.handleTouchEnd - An optional callback function invoked on touch end,
 *                                 receiving the touch move distance and a setter function.
 *
 * @returns An object containing the x and y distances of the touch movement,
 *          and a setter function to manually update the touch move distance.
 */
export declare function useTouchMoveDistance(ref: React.RefObject<HTMLElement>, { enable, enableMouse, handleTouchEnd, }: {
    enable?: boolean;
    enableMouse?: boolean;
    handleTouchEnd?: (touchMoveDistance: TouchMoveDistance, setTouchMoveDistance: (touchMoveDistance: TouchMoveDistance) => void) => void;
}): TouchMoveDistance & {
    set: (touchMoveDistance: TouchMoveDistance) => void;
};
