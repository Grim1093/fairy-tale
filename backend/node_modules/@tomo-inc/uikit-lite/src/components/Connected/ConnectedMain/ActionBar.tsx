import React from "react";
import clsx from "clsx";
import { TIcon } from "@/components/Icon";
import useHover from "@/hooks/useHover";
import "./index.css";

export interface Action {
  key: string;
  label: string;
  onClick?: () => void;
  icon: string;
  disabled?: boolean;
  activeColor?: string;
  activeIconColor?: string;
}

interface ActionBarProps {
  actions: Action[];
}
export const ActionItem = ({ action }: { action: Action }) => {
  const [hoverRef, isHover] = useHover();
  return (
    <div key={action.key} className="uikit-flex uikit-flex-col uikit-items-center uikit-justify-center">
      <div
        ref={hoverRef}
        key={action.key}
        onClick={action.onClick}
        className={clsx(
          "uikit-flex uikit-border uikit-border-solid uikit-border-l1 uikit-items-center uikit-justify-center uikit-size-12 uikit-rounded-full",
          action.disabled ? "uikit-opacity-50 uikit-bg-bg4 uikit-cursor-not-allowed" : "uikit-cursor-pointer",
          `hover:${action.activeColor ? `hover:uikit-bg-[var(--hover-color)]` : "uikit-opacity-50"}`,
          "action-bar-item",
        )}
        style={{
          ...(action.activeColor &&
            ({
              "--hover-color": action.activeColor,
            } as React.CSSProperties)),
          ...(action.activeIconColor &&
            ({
              "--hover-icon-color": action.activeIconColor,
            } as React.CSSProperties)),
        }}
      >
        <TIcon
          name={action.icon}
          fontSize="24"
          className={clsx(action.disabled ? "uikit-text-t4" : "uikit-text-t1", {
            "uikit-text-[var(--hover-icon-color)]": isHover,
          })}
        />
      </div>
      <div className={clsx("uikit-mt-2 uikit-text-xs", action.disabled ? "uikit-text-t4 uikit-opacity-50" : "")}>
        {action.label}
      </div>
    </div>
  );
};

export const ActionBar: React.FC<ActionBarProps> = ({ actions }) => {
  return (
    <div
      className={clsx(
        "uikit-flex uikit-justify-between uikit-items-center uikit-px-[10px] uikit-pt-4 uikit-rounded-xl",
        "action-bar-wrapper",
      )}
    >
      {actions.map((action) => (
        <ActionItem key={action.key} action={action} />
      ))}
    </div>
  );
};
