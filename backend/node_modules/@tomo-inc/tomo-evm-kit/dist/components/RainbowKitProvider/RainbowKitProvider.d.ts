import React, { PropsWithChildren, type ReactNode } from "react";
import type { Chain } from "wagmi/chains";
import type { ThemeVars } from "../../css/sprinkles.css";
import type { Locale } from "../../locales";
import { type DisclaimerComponent } from "./AppContext";
import { type AvatarComponent } from "./AvatarContext";
import { type ModalSizes } from "./ModalSizeContext";
export declare const useThemeRootProps: () => {
    "data-rk": string;
};
export type Theme = ThemeVars | {
    lightMode: ThemeVars;
    darkMode: ThemeVars;
};
export interface RainbowKitProviderProps {
    initialChain?: Chain | number;
    id?: string;
    children: ReactNode;
    theme?: Theme;
    showRecentTransactions?: boolean;
    appInfo?: {
        appName?: string;
        learnMoreUrl?: string;
        disclaimer?: DisclaimerComponent;
    };
    coolMode?: boolean;
    avatar?: AvatarComponent;
    modalSize?: ModalSizes;
    locale?: Locale;
    _noOtherWallets?: boolean;
    socialsFirst?: boolean;
}
export declare const ThemeTypeContext: React.Context<ThemeVars>;
export declare const CustomConfigContext: React.Context<{
    _noOtherWallets?: boolean;
    socialsEnabled?: boolean;
    socialsFirst?: boolean;
}>;
export declare function EvmKitThemeProvider({ theme: themeType, children, id, }: {
    theme: Theme;
    id?: string;
} & PropsWithChildren): React.JSX.Element;
export declare function RainbowKitProvider({ appInfo, avatar, children, coolMode, id, initialChain, modalSize, showRecentTransactions, theme, _noOtherWallets, socialsFirst, }: RainbowKitProviderProps): React.JSX.Element;
//# sourceMappingURL=RainbowKitProvider.d.ts.map