import { WalletState } from "@web3-onboard/core";
import { Observable } from "rxjs";
/**
 * forked from @web3-onboard/core
 */
declare const APP_INITIAL_STATE: {
    wallets: WalletState[];
    walletModules: never[];
    chains: never[];
    accountCenter: {
        enabled: boolean;
        position: string;
        expanded: boolean;
        minimal: boolean;
    };
    notify: {
        enabled: boolean;
        position: string;
        replacement: {
            gasPriceProbability: {
                speedup: number;
                cancel: number;
            };
        };
    };
    notifications: never[];
    locale: string;
    connect: {
        showSidebar: boolean;
        disableClose: boolean;
    };
    appMetadata: null;
    wagmiConfig: null;
};
export type AppState = typeof APP_INITIAL_STATE;
export declare const notNullish: <T>(value: T | null | undefined) => value is T;
declare function select(): Observable<AppState>;
declare function select<T extends keyof AppState>(stateKey: T): Observable<AppState[T]>;
declare function get(): AppState;
export declare function updateStateWallets(wallets: WalletState[]): void;
export declare const pseudoState: {
    select: typeof select;
    get: typeof get;
};
export {};
//# sourceMappingURL=pseudoOnboardState.d.ts.map