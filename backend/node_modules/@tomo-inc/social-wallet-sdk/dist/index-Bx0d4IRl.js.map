{"version":3,"file":"index-Bx0d4IRl.js","sources":["../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/chain/defineChain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/version.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/base.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/encoding.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/isHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/size.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/trim.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/data.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/pad.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toBytes.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/fromHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/formatter.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/block.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/log.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transactionReceipt.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transactionRequest.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/number.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/constants/number.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/formatters.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/concat.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/cursor.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/cursor.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toRlp.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/unit.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatUnits.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatEther.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatGwei.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/blobsToCommitments.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/blobsToProofs.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/hash/sha256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/blob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/blob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/toBlobSidecars.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/toBlobs.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/address.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/chain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/node.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/lru.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/address/getAddress.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/hash/keccak256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/address/isAddress.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/slice.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/assertTransaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/serializeAccessList.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/serializeTransaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/getTransactionType.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/kzg.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/errors/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/isEip712Transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/assertEip712Transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/serializers.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/errors/bytecode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/getEip712Domain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/hashBytecode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/formatters.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/contracts.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/serializers.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/arbitrum.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/aurora.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/avalanche.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/base.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/baseSepolia.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/berachainTestnetbArtio.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bevmMainnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/blast.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bsc.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bscTestnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/chiliz.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/cronos.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/fantom.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/gnosis.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/accounts/utils/parseAccount.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/account.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/stateOverride.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/contract.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/errors/getCallError.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/errors/getNodeError.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/extract.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/linea/actions/estimateGas.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/assertRequest.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/linea/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/linea.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mainnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/manta.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mantaTestnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mantle.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/merlin.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/opBNB.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/optimism.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/palm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/polygon.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/polygonZkEvm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/satoshivm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/scroll.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/sei.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/sepolia.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/storyAeneid.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/taiko.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/xLayer.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zetachain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zkLinkNova.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zksync.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zora.js","../src/constant/index.ts","../src/utils/existedEvents.ts","../src/utils/log.ts","../src/utils/LocalstorageUtils.ts","../src/utils/utils.ts","../src/utils/windowUtils.ts","../src/utils/device.ts","../src/utils/communicator.ts","../src/utils/apiUtils.ts","../src/provider/bitcoin/type.ts","../src/provider/bitcoin/BitcoinProvider.ts","../src/provider/bitcoin/apiUtils.ts","../src/provider/ethereum/chains.ts","../src/provider/ethereum/EthereumProvider.ts","../src/provider/solana/SolanaProvider.ts","../../../node_modules/.pnpm/@mysten+utils@0.0.0/node_modules/@mysten/utils/dist/esm/b64.js","../src/utils/sui.ts","../src/provider/sui/SuiProvider.ts","../src/provider/tron/TronProvider.ts","../src/utils/movement.ts","../src/provider/movement/MovementProvider.ts","../src/types/types.ts","../src/utils/handlerMessage.ts","../src/utils/messageProcessor.ts","../src/utils/sol.ts","../src/index.ts","../src/utils/getFaviconUrl.ts"],"sourcesContent":["export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","export const version = '2.30.6';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nlet errorConfig = {\n    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath\n        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`\n        : undefined,\n    version: `viem@${version}`,\n};\nexport function setErrorConfig(config) {\n    errorConfig = config;\n}\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        const details = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.details;\n            if (args.cause?.message)\n                return args.cause.message;\n            return args.details;\n        })();\n        const docsPath = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.docsPath || args.docsPath;\n            return args.docsPath;\n        })();\n        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });\n        const message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n            ...(details ? [`Details: ${details}`] : []),\n            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n        ].join('\\n');\n        super(message, args.cause ? { cause: args.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.name = args.name ?? this.name;\n        this.shortMessage = shortMessage;\n        this.version = version;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err &&\n        typeof err === 'object' &&\n        'cause' in err &&\n        err.cause !== undefined)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {\n            name: 'InvalidBytesBooleanError',\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`, { name: 'InvalidHexBooleanError' });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n    '0x4': 'eip7702',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    if (transaction.authorizationList)\n        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        chainId: Number(authorization.chainId),\n        nonce: Number(authorization.nonce),\n        r: authorization.r,\n        s: authorization.s,\n        yParity: Number(authorization.yParity),\n    }));\n}\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = (block.transactions ?? []).map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n    eip7702: '0x4',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.authorizationList !== 'undefined')\n        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        r: authorization.r\n            ? numberToHex(BigInt(authorization.r))\n            : authorization.r,\n        s: authorization.s\n            ? numberToHex(BigInt(authorization.s))\n            : authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n            ? { yParity: numberToHex(authorization.yParity) }\n            : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n            typeof authorization.yParity === 'undefined'\n            ? { v: numberToHex(authorization.v) }\n            : {}),\n    }));\n}\n//# sourceMappingURL=transactionRequest.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","import { maxUint16 } from '../../constants/number.js';\nexport const gasPerPubdataDefault = 50000n;\nexport const maxBytecodeSize = maxUint16 * 32n;\nexport const requiredL1ToL2GasPerPubdataLimit = 800n;\n//# sourceMappingURL=number.js.map","import { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js';\nimport { hexToBytes } from '../utils/encoding/toBytes.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { formatLog } from '../utils/formatters/log.js';\nimport { defineTransaction } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatters.transaction?.format(transaction);\n                if (formatted.typeHex === '0x71')\n                    formatted.type = 'eip712';\n                else if (formatted.typeHex === '0xff')\n                    formatted.type = 'priority';\n                return formatted;\n            });\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTimestamp: args.l1BatchTimestamp\n                    ? hexToBigInt(args.l1BatchTimestamp)\n                    : null,\n                transactions,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x71')\n                transaction.type = 'eip712';\n            else if (args.type === '0xff')\n                transaction.type = 'priority';\n            return {\n                ...transaction,\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n            };\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n                logs: args.logs.map((log) => {\n                    return {\n                        ...formatLog(log),\n                        l1BatchNumber: log.l1BatchNumber\n                            ? hexToBigInt(log.l1BatchNumber)\n                            : null,\n                        transactionLogIndex: hexToNumber(log.transactionLogIndex),\n                        logType: log.logType,\n                    };\n                }),\n                l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n                    return {\n                        blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n                        blockHash: l2ToL1Log.blockHash,\n                        l1BatchNumber: l2ToL1Log.l1BatchNumber\n                            ? hexToBigInt(l2ToL1Log.l1BatchNumber)\n                            : null,\n                        transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n                        shardId: hexToBigInt(l2ToL1Log.shardId),\n                        isService: l2ToL1Log.isService,\n                        sender: l2ToL1Log.sender,\n                        key: l2ToL1Log.key,\n                        value: l2ToL1Log.value,\n                        transactionHash: l2ToL1Log.transactionHash,\n                        logIndex: hexToBigInt(l2ToL1Log.logIndex),\n                    };\n                }),\n            };\n        },\n    }),\n    transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n        exclude: [\n            'customSignature',\n            'factoryDeps',\n            'gasPerPubdata',\n            'paymaster',\n            'paymasterInput',\n        ],\n        format(args) {\n            if (args.gasPerPubdata ||\n                (args.paymaster && args.paymasterInput) ||\n                args.factoryDeps ||\n                args.customSignature)\n                return {\n                    eip712Meta: {\n                        ...(args.gasPerPubdata\n                            ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n                            : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n                        ...(args.paymaster && args.paymasterInput\n                            ? {\n                                paymasterParams: {\n                                    paymaster: args.paymaster,\n                                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                                },\n                            }\n                            : {}),\n                        ...(args.factoryDeps\n                            ? {\n                                factoryDeps: args.factoryDeps.map((dep) => Array.from(hexToBytes(dep))),\n                            }\n                            : {}),\n                        ...(args.customSignature\n                            ? {\n                                customSignature: Array.from(hexToBytes(args.customSignature)),\n                            }\n                            : {}),\n                    },\n                    type: '0x71',\n                };\n            return {};\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`, {\n            name: 'NegativeOffsetError',\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, { name: 'PositionOutOfBoundsError' });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, { name: 'RecursiveReadLimitExceededError' });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { etherUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei, unit = 'wei') {\n    return formatUnits(wei, etherUnits[unit]);\n}\n//# sourceMappingURL=formatEther.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'), { name: 'FeeConflictError' });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n            name: 'InvalidLegacyVError',\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- an EIP-7702 Transaction with `authorizationList`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n            name: 'InvalidSerializableTransactionError',\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n            name: 'InvalidSerializedTransactionType',\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n            name: 'InvalidSerializedTransactionError',\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'TransactionExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`, {\n            name: 'TransactionNotFoundError',\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`, {\n            name: 'TransactionReceiptNotFoundError',\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n            name: 'BlobSizeTooLargeError',\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.', { name: 'EmptyBlobError' });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n            name: 'InvalidVersionedHashSizeError',\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n            name: 'InvalidVersionedHashVersionError',\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n            name: 'InvalidAddressError',\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n            name: 'ChainDoesNotSupportContract',\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n            name: 'ChainMismatchError',\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'), {\n            name: 'ChainNotFoundError',\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.', {\n            name: 'ClientChainNotConfiguredError',\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n            name: 'FeeCapTooHighError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n            name: 'FeeCapTooLowError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause, name: 'NonceTooLowError' });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n            name: 'InsufficientFundsError',\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds|exceeds transaction sender account balance/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n            name: 'IntrinsicGasTooHighError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n            name: 'IntrinsicGasTooLowError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n            name: 'TransactionTypeNotSupportedError',\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n            name: 'TipAboveFeeCapError',\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownNodeError',\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey)\n                this.delete(firstKey);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nconst checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    const cacheKey = `${address}.${strict}`;\n    if (isAddressCache.has(cacheKey))\n        return isAddressCache.get(cacheKey);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(cacheKey, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP7702(transaction) {\n    const { authorizationList } = transaction;\n    if (authorizationList) {\n        for (const authorization of authorizationList) {\n            const { chainId } = authorization;\n            const address = authorization.address;\n            if (!isAddress(address))\n                throw new InvalidAddressError({ address });\n            if (chainId < 0)\n                throw new InvalidChainIdError({ chainId });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { serializeAuthorizationList, } from '../authorization/serializeAuthorizationList.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionEIP7702, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    if (type === 'eip7702')\n        return serializeTransactionEIP7702(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP7702(transaction, signature) {\n    const { authorizationList, chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP7702(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedAuthorizationList = serializeAuthorizationList(authorizationList);\n    return concatHex([\n        '0x04',\n        toRlp([\n            toHex(chainId),\n            nonce ? toHex(nonce) : '0x',\n            maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n            maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n            gas ? toHex(gas) : '0x',\n            to ?? '0x',\n            value ? toHex(value) : '0x',\n            data ?? '0x',\n            serializedAccessList,\n            serializedAuthorizationList,\n            ...toYParitySignatureArray(transaction, signature),\n        ]),\n    ]);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        const r = trim(signature.r);\n        const s = trim(signature.s);\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            r === '0x00' ? '0x' : r,\n            s === '0x00' ? '0x' : s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature_) {\n    const signature = signature_ ?? transaction;\n    const { v, yParity } = signature;\n    if (typeof signature.r === 'undefined')\n        return [];\n    if (typeof signature.s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const r = trim(signature.r);\n    const s = trim(signature.s);\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.authorizationList !== 'undefined')\n        return 'eip7702';\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { toHex } from '../encoding/toHex.js';\nimport { toYParitySignatureArray } from '../transaction/serializeTransaction.js';\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(authorizationList) {\n    if (!authorizationList || authorizationList.length === 0)\n        return [];\n    const serializedAuthorizationList = [];\n    for (const authorization of authorizationList) {\n        const { chainId, nonce, ...signature } = authorization;\n        const contractAddress = authorization.address;\n        serializedAuthorizationList.push([\n            chainId ? toHex(chainId) : '0x',\n            contractAddress,\n            nonce ? toHex(nonce) : '0x',\n            ...toYParitySignatureArray({}, signature),\n        ]);\n    }\n    return serializedAuthorizationList;\n}\n//# sourceMappingURL=serializeAuthorizationList.js.map","import { BaseError } from '../../errors/base.js';\nexport class InvalidEip712TransactionError extends BaseError {\n    constructor() {\n        super([\n            'Transaction is not an EIP712 transaction.',\n            '',\n            'Transaction must:',\n            '  - include `type: \"eip712\"`',\n            '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n        ].join('\\n'), { name: 'InvalidEip712TransactionError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","export function isEIP712Transaction(transaction) {\n    if (transaction.type === 'eip712')\n        return true;\n    if (('customSignature' in transaction && transaction.customSignature) ||\n        ('paymaster' in transaction && transaction.paymaster) ||\n        ('paymasterInput' in transaction && transaction.paymasterInput) ||\n        ('gasPerPubdata' in transaction &&\n            typeof transaction.gasPerPubdata === 'bigint') ||\n        ('factoryDeps' in transaction && transaction.factoryDeps))\n        return true;\n    return false;\n}\n//# sourceMappingURL=isEip712Transaction.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { InvalidChainIdError } from '../../errors/chain.js';\nimport { isAddress } from '../../utils/address/isAddress.js';\nimport { InvalidEip712TransactionError } from '../errors/transaction.js';\nimport { isEIP712Transaction } from './isEip712Transaction.js';\nexport function assertEip712Transaction(transaction) {\n    const { chainId, to, from, paymaster, paymasterInput } = transaction;\n    if (!isEIP712Transaction(transaction))\n        throw new InvalidEip712TransactionError();\n    if (!chainId || chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (paymaster && !isAddress(paymaster))\n        throw new InvalidAddressError({ address: paymaster });\n    if (paymaster && !paymasterInput) {\n        throw new BaseError('`paymasterInput` must be provided when `paymaster` is defined');\n    }\n    if (!paymaster && paymasterInput) {\n        throw new BaseError('`paymaster` must be provided when `paymasterInput` is defined');\n    }\n}\n//# sourceMappingURL=assertEip712Transaction.js.map","import { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js';\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isEIP712Transaction(transaction))\n        return serializeTransactionEIP712(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionEIP712(transaction) {\n    const { chainId, gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, customSignature, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    assertEip712Transaction(transaction);\n    const serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        toHex(chainId),\n        toHex(''),\n        toHex(''),\n        toHex(chainId),\n        from ?? '0x',\n        gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n        factoryDeps ?? [],\n        customSignature ?? '0x', // EIP712 signature\n        paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n    ];\n    return concatHex([\n        '0x71',\n        toRlp(serializedTransaction),\n    ]);\n}\n//# sourceMappingURL=serializers.js.map","import { BaseError } from '../../errors/base.js';\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n    constructor({ givenLength, maxBytecodeSize, }) {\n        super(`Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`, { name: 'BytecodeLengthExceedsMaxSizeError' });\n    }\n}\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n    constructor({ givenLengthInWords }) {\n        super(`Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`, { name: 'BytecodeLengthInWordsMustBeOddError' });\n    }\n}\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n    constructor({ givenLength }) {\n        super(`The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`, { name: 'BytecodeLengthMustBeDivisibleBy32Error' });\n    }\n}\n//# sourceMappingURL=bytecode.js.map","import { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nimport { getEip712Domain } from './utils/getEip712Domain.js';\nexport const chainConfig = {\n    formatters,\n    serializers,\n    custom: {\n        getEip712Domain,\n    },\n};\n//# sourceMappingURL=chainConfig.js.map","import { toHex } from '../../utils/encoding/toHex.js';\nimport { gasPerPubdataDefault } from '../constants/number.js';\nimport { assertEip712Transaction } from './assertEip712Transaction.js';\nimport { hashBytecode } from './hashBytecode.js';\nexport const getEip712Domain = (transaction) => {\n    assertEip712Transaction(transaction);\n    const message = transactionToMessage(transaction);\n    return {\n        domain: {\n            name: 'zkSync',\n            version: '2',\n            chainId: transaction.chainId,\n        },\n        types: {\n            Transaction: [\n                { name: 'txType', type: 'uint256' },\n                { name: 'from', type: 'uint256' },\n                { name: 'to', type: 'uint256' },\n                { name: 'gasLimit', type: 'uint256' },\n                { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n                { name: 'maxFeePerGas', type: 'uint256' },\n                { name: 'maxPriorityFeePerGas', type: 'uint256' },\n                { name: 'paymaster', type: 'uint256' },\n                { name: 'nonce', type: 'uint256' },\n                { name: 'value', type: 'uint256' },\n                { name: 'data', type: 'bytes' },\n                { name: 'factoryDeps', type: 'bytes32[]' },\n                { name: 'paymasterInput', type: 'bytes' },\n            ],\n        },\n        primaryType: 'Transaction',\n        message: message,\n    };\n};\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\nfunction transactionToMessage(transaction) {\n    const { gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    return {\n        txType: 113n,\n        from: BigInt(from),\n        to: to ? BigInt(to) : 0n,\n        gasLimit: gas ?? 0n,\n        gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n        maxFeePerGas: maxFeePerGas ?? 0n,\n        maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n        paymaster: paymaster ? BigInt(paymaster) : 0n,\n        nonce: nonce ? BigInt(nonce) : 0n,\n        value: value ?? 0n,\n        data: data ?? '0x',\n        factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n        paymasterInput: paymasterInput ? paymasterInput : '0x',\n    };\n}\n//# sourceMappingURL=getEip712Domain.js.map","import { pad } from '../../utils/data/pad.js';\nimport { toBytes } from '../../utils/encoding/toBytes.js';\nimport { sha256 } from '../../utils/hash/sha256.js';\nimport { maxBytecodeSize } from '../constants/number.js';\nimport { BytecodeLengthExceedsMaxSizeError, BytecodeLengthInWordsMustBeOddError, BytecodeLengthMustBeDivisibleBy32Error, } from '../errors/bytecode.js';\nexport function hashBytecode(bytecode) {\n    const bytecodeBytes = toBytes(bytecode);\n    if (bytecodeBytes.length % 32 !== 0)\n        throw new BytecodeLengthMustBeDivisibleBy32Error({\n            givenLength: bytecodeBytes.length,\n        });\n    if (bytecodeBytes.length > maxBytecodeSize)\n        throw new BytecodeLengthExceedsMaxSizeError({\n            givenLength: bytecodeBytes.length,\n            maxBytecodeSize,\n        });\n    const hashStr = sha256(bytecodeBytes);\n    const hash = toBytes(hashStr);\n    // Note that the length of the bytecode\n    // should be provided in 32-byte words.\n    const bytecodeLengthInWords = bytecodeBytes.length / 32;\n    if (bytecodeLengthInWords % 2 === 0) {\n        throw new BytecodeLengthInWordsMustBeOddError({\n            givenLengthInWords: bytecodeLengthInWords,\n        });\n    }\n    const bytecodeLength = toBytes(bytecodeLengthInWords);\n    // The bytecode should always take the first 2 bytes of the bytecode hash,\n    // so we pad it from the left in case the length is smaller than 2 bytes.\n    const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 });\n    const codeHashVersion = new Uint8Array([1, 0]);\n    hash.set(codeHashVersion, 0);\n    hash.set(bytecodeLengthPadded, 2);\n    return hash;\n}\n//# sourceMappingURL=hashBytecode.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map","/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n    gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n    l1Block: { address: '0x4200000000000000000000000000000000000015' },\n    l2CrossDomainMessenger: {\n        address: '0x4200000000000000000000000000000000000007',\n    },\n    l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n    l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n    l2ToL1MessagePasser: {\n        address: '0x4200000000000000000000000000000000000016',\n    },\n};\n//# sourceMappingURL=contracts.js.map","import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrum = /*#__PURE__*/ defineChain({\n    id: 42_161,\n    name: 'Arbitrum One',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://arb1.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://arbiscan.io',\n            apiUrl: 'https://api.arbiscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 7654707,\n        },\n    },\n});\n//# sourceMappingURL=arbitrum.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const aurora = /*#__PURE__*/ defineChain({\n    id: 1313161554,\n    name: 'Aurora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.aurora.dev'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aurorascan',\n            url: 'https://aurorascan.dev',\n            apiUrl: 'https://aurorascan.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 62907816,\n        },\n    },\n});\n//# sourceMappingURL=aurora.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const avalanche = /*#__PURE__*/ defineChain({\n    id: 43_114,\n    name: 'Avalanche',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Avalanche',\n        symbol: 'AVAX',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SnowTrace',\n            url: 'https://snowtrace.io',\n            apiUrl: 'https://api.snowtrace.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 11907934,\n        },\n    },\n});\n//# sourceMappingURL=avalanche.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const base = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 8453,\n    name: 'Base',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://basescan.org',\n            apiUrl: 'https://api.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x43edB88C4B80fDD2AdFF2412A7BebF9dF42cB40e',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x56315b90c40730925ec5485cf004d835058518A0',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 5022,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49048044D57e1C92A77f79988d21Fa8fAF74E97e',\n                blockCreated: 17482143,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3154Cf16ccdb4C6d922629664174b904d80F2C35',\n                blockCreated: 17482143,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=base.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 84532,\n    network: 'base-sepolia',\n    name: 'Base Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://sepolia.basescan.org',\n            apiUrl: 'https://api-sepolia.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n                blockCreated: 4446677,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n                blockCreated: 4446677,\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1059647,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=baseSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachainTestnetbArtio = /*#__PURE__*/ defineChain({\n    id: 80084,\n    name: 'Berachain bArtio',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 109269,\n        },\n        ensRegistry: {\n            address: '0xB0eef18971290b333450586D33dcA6cE122651D2',\n            blockCreated: 7736794,\n        },\n        ensUniversalResolver: {\n            address: '0x41692Ef1EA0C79E6b73077E4A67572D2BDbD7057',\n            blockCreated: 7736795,\n        },\n    },\n    ensTlds: ['.bera'],\n    rpcUrls: {\n        default: { http: ['https://bartio.rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berachain bArtio Beratrail',\n            url: 'https://bartio.beratrail.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=berachainTestnetbArtio.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bevmMainnet = /*#__PURE__*/ defineChain({\n    id: 11501,\n    name: 'BEVM Mainnet',\n    nativeCurrency: { name: 'Bitcoin', symbol: 'BTC', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-mainnet-1.bevm.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bevmscan',\n            url: 'https://scan-mainnet.bevm.io',\n            apiUrl: 'https://scan-mainnet-api.bevm.io/api',\n        },\n    },\n});\n//# sourceMappingURL=bevmMainnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const blast = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 81457,\n    name: 'Blast',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.blast.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blastscan',\n            url: 'https://blastscan.io',\n            apiUrl: 'https://api.blastscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 212929,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=blast.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const bob = defineChain({\n    ...chainConfig,\n    id: 60808,\n    name: 'BOB',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gobob.xyz'],\n            webSocket: ['wss://rpc.gobob.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOB Explorer',\n            url: 'https://explorer.gobob.xyz',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 23131,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdDa53E23f8a32640b04D7256e651C1db98dB11C1',\n                blockCreated: 4462615,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E',\n                blockCreated: 4462615,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=bob.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bsc = /*#__PURE__*/ defineChain({\n    id: 56,\n    name: 'BNB Smart Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'BNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://56.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://bscscan.com',\n            apiUrl: 'https://api.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15921452,\n        },\n    },\n});\n//# sourceMappingURL=bsc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n    id: 97,\n    name: 'Binance Smart Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'tBNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://data-seed-prebsc-1-s1.bnbchain.org:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://testnet.bscscan.com',\n            apiUrl: 'https://api-testnet.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 17422483,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bscTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const chiliz = /*#__PURE__*/ defineChain({\n    id: 88_888,\n    name: 'Chiliz Chain',\n    network: 'chiliz-chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CHZ',\n        symbol: 'CHZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.chiliz.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chiliz Explorer',\n            url: 'https://scan.chiliz.com',\n            apiUrl: 'https://scan.chiliz.com/api',\n        },\n    },\n});\n//# sourceMappingURL=chiliz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronos = /*#__PURE__*/ defineChain({\n    id: 25,\n    name: 'Cronos Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Cronos',\n        symbol: 'CRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos Explorer',\n            url: 'https://explorer.cronos.org',\n            apiUrl: 'https://explorer-api.cronos.org/mainnet/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1963112,\n        },\n    },\n});\n//# sourceMappingURL=cronos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fantom = /*#__PURE__*/ defineChain({\n    id: 250,\n    name: 'Fantom',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Fantom',\n        symbol: 'FTM',\n    },\n    rpcUrls: {\n        default: { http: ['https://250.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FTMScan',\n            url: 'https://ftmscan.com',\n            apiUrl: 'https://api.ftmscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 33001987,\n        },\n    },\n});\n//# sourceMappingURL=fantom.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gnosis = /*#__PURE__*/ defineChain({\n    id: 100,\n    name: 'Gnosis',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'xDAI',\n        symbol: 'XDAI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gnosischain.com'],\n            webSocket: ['wss://rpc.gnosischain.com/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gnosisscan',\n            url: 'https://gnosisscan.io',\n            apiUrl: 'https://api.gnosisscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 21022491,\n        },\n    },\n});\n//# sourceMappingURL=gnosis.js.map","export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n    constructor({ docsPath } = {}) {\n        super([\n            'Could not find an Account to execute with this Action.',\n            'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n        ].join('\\n'), {\n            docsPath,\n            docsSlug: 'account',\n            name: 'AccountNotFoundError',\n        });\n    }\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n    constructor({ docsPath, metaMessages, type, }) {\n        super(`Account type \"${type}\" is not supported.`, {\n            docsPath,\n            metaMessages,\n            name: 'AccountTypeNotSupportedError',\n        });\n    }\n}\n//# sourceMappingURL=account.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`, {\n            name: 'AccountStateConflictError',\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.', {\n            name: 'StateAssignmentConflictError',\n        });\n    }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'CallExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                prettyArgs && 'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'ContractFunctionExecutionError',\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n            name: 'ContractFunctionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"raw\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.raw = data;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n            name: 'ContractFunctionZeroDataError',\n        });\n    }\n}\nexport class CounterfactualDeploymentFailedError extends BaseError {\n    constructor({ factory }) {\n        super(`Deployment for counterfactual contract call failed${factory ? ` for factory \"${factory}\".` : ''}`, {\n            metaMessages: [\n                'Please ensure:',\n                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n            ],\n            name: 'CounterfactualDeploymentFailedError',\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '', { name: 'RawContractError' });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e?.code ===\n            ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError)\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../errors/account.js';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\nimport { getCallError } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest } from '../../utils/formatters/transactionRequest.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\n/**\n * Estimates the gas and fees per gas necessary to complete a transaction without submitting it to the network.\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns A gas estimate and fees per gas (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { linea } from 'viem/chains'\n * import { estimateGas } from 'viem/linea'\n *\n * const client = createPublicClient({\n *   chain: linea,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 0n,\n * })\n */\nexport async function estimateGas(client, args) {\n    const { account: account_ = client.account } = args;\n    if (!account_)\n        throw new AccountNotFoundError();\n    const account = parseAccount(account_);\n    try {\n        const { accessList, blockNumber, blockTag, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        assertRequest(args);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        const { baseFeePerGas, gasLimit, priorityFeePerGas } = await client.request({\n            method: 'linea_estimateGas',\n            params: block ? [request, block] : [request],\n        });\n        return {\n            baseFeePerGas: BigInt(baseFeePerGas),\n            gasLimit: BigInt(gasLimit),\n            priorityFeePerGas: BigInt(priorityFeePerGas),\n        };\n    }\n    catch (err) {\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map","import { estimateGas } from './actions/estimateGas.js';\nexport const chainConfig = {\n    fees: {\n        estimateFeesPerGas,\n        async maxPriorityFeePerGas({ block, client, request }) {\n            const response = await estimateFeesPerGas({\n                block,\n                client,\n                multiply: (x) => x,\n                request,\n                type: 'eip1559',\n            });\n            // Returning `null` will trigger the base `estimateMaxPriorityFeePerGas` to perform\n            // fallback mechanisms to estimate priority fee.\n            if (!response?.maxPriorityFeePerGas)\n                return null;\n            return response.maxPriorityFeePerGas;\n        },\n    },\n};\n///////////////////////////////////////////////////////////////////////////\n// Internal\n///////////////////////////////////////////////////////////////////////////\nasync function estimateFeesPerGas({ client, multiply, request, type, }) {\n    try {\n        const response = await estimateGas(client, {\n            ...request,\n            account: request?.account,\n        });\n        const { priorityFeePerGas: maxPriorityFeePerGas } = response;\n        const baseFeePerGas = multiply(BigInt(response.baseFeePerGas));\n        const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas;\n        if (type === 'legacy')\n            return { gasPrice: maxFeePerGas };\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    catch {\n        // Returning `null` will trigger the base `estimateFeesPerGas` to perform\n        // fallback mechanisms to estimate fees.\n        return null;\n    }\n}\n//# sourceMappingURL=chainConfig.js.map","import { chainConfig } from '../../linea/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const linea = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 59_144,\n    name: 'Linea Mainnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.linea.build'],\n            webSocket: ['wss://rpc.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://lineascan.build',\n            apiUrl: 'https://api.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 42,\n        },\n        ensRegistry: {\n            address: '0x50130b669B28C339991d8676FA73CF122a121267',\n            blockCreated: 6682888,\n        },\n        ensUniversalResolver: {\n            address: '0x3aA974fb3f8C1E02796048BDCdeD79e9D53a6965',\n            blockCreated: 6683000,\n        },\n    },\n    ensTlds: ['.linea.eth'],\n    testnet: false,\n});\n//# sourceMappingURL=linea.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mainnet = /*#__PURE__*/ defineChain({\n    id: 1,\n    name: 'Ethereum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://eth.merkle.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://etherscan.io',\n            apiUrl: 'https://api.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n            blockCreated: 19_258_213,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14_353_601,\n        },\n    },\n});\n//# sourceMappingURL=mainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const manta = /*#__PURE__*/ defineChain({\n    id: 169,\n    name: 'Manta Pacific Mainnet',\n    network: 'manta',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://pacific-rpc.manta.network/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Explorer',\n            url: 'https://pacific-explorer.manta.network',\n            apiUrl: 'https://pacific-explorer.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 332890,\n        },\n    },\n});\n//# sourceMappingURL=manta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantaTestnet = /*#__PURE__*/ defineChain({\n    id: 3_441_005,\n    name: 'Manta Pacific Testnet',\n    network: 'manta-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://manta-testnet.calderachain.xyz/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Testnet Explorer',\n            url: 'https://pacific-explorer.testnet.manta.network',\n            apiUrl: 'https://pacific-explorer.testnet.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C',\n            blockCreated: 419915,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantle = /*#__PURE__*/ defineChain({\n    id: 5000,\n    name: 'Mantle',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MNT',\n        symbol: 'MNT',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.mantle.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mantle Explorer',\n            url: 'https://mantlescan.xyz/',\n            apiUrl: 'https://api.mantlescan.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 304717,\n        },\n    },\n});\n//# sourceMappingURL=mantle.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const merlin = /*#__PURE__*/ defineChain({\n    id: 4200,\n    name: 'Merlin',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.merlinchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://scan.merlinchain.io',\n            apiUrl: 'https://scan.merlinchain.io/api',\n        },\n    },\n});\n//# sourceMappingURL=merlin.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const mode = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 34443,\n    name: 'Mode Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.mode.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Modescan',\n            url: 'https://modescan.io',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2465882,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x4317ba146D4933D889518a3e5E11Fe7a53199b04',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8B34b14c7c7123459Cf3076b8Cb929BE097d0C07',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x735aDBbE72226BD52e818E7181953f42E3b0FF21',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=mode.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 56; // bsc mainnet\nexport const opBNB = /*#__PURE__*/ defineChain({\n    id: 204,\n    name: 'opBNB',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'opBNB (BSCScan)',\n            url: 'https://opbnb.bscscan.com',\n            apiUrl: 'https://api-opbnb.bscscan.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 512881,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x153CAB79f4767E2ff862C94aa49573294B13D169',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1876EA7702C0ad0C6A2ae6036DE7733edfBca519',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xF05F0e4362859c3331Cb9395CBC201E3Fa6757Ea',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=opBNB.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xe5965Ab5962eDc7477C8520243A95517CD252fA9',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const palm = /*#__PURE__*/ defineChain({\n    id: 11_297_108_109,\n    name: 'Palm',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PALM',\n        symbol: 'PALM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://palm-mainnet.public.blastapi.io'],\n            webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chainlens',\n            url: 'https://palm.chainlens.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15429248,\n        },\n    },\n});\n//# sourceMappingURL=palm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygon = /*#__PURE__*/ defineChain({\n    id: 137,\n    name: 'Polygon',\n    nativeCurrency: { name: 'POL', symbol: 'POL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://polygon-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://polygonscan.com',\n            apiUrl: 'https://api.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 25770160,\n        },\n    },\n});\n//# sourceMappingURL=polygon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n    id: 1101,\n    name: 'Polygon zkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://zkevm-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://zkevm.polygonscan.com',\n            apiUrl: 'https://api-zkevm.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 57746,\n        },\n    },\n});\n//# sourceMappingURL=polygonZkEvm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const satoshiVM = /*#__PURE__*/ defineChain({\n    id: 3109,\n    name: 'SatoshiVM Alpha Mainnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://alpha-rpc-node-http.svmscan.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://svmscan.io',\n            apiUrl: 'https://svmscan.io/api',\n        },\n    },\n});\n//# sourceMappingURL=satoshivm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const scroll = /*#__PURE__*/ defineChain({\n    id: 534_352,\n    name: 'Scroll',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.scroll.io'],\n            webSocket: ['wss://wss-rpc.scroll.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Scrollscan',\n            url: 'https://scrollscan.com',\n            apiUrl: 'https://api.scrollscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=scroll.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sei = /*#__PURE__*/ defineChain({\n    id: 1329,\n    name: 'Sei Network',\n    nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm-rpc.sei-apis.com/'],\n            webSocket: ['wss://evm-ws.sei-apis.com/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seitrace',\n            url: 'https://seitrace.com',\n            apiUrl: 'https://seitrace.com/pacific-1/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n});\n//# sourceMappingURL=sei.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sepolia = /*#__PURE__*/ defineChain({\n    id: 11_155_111,\n    name: 'Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.drpc.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.etherscan.io',\n            apiUrl: 'https://api-sepolia.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 751532,\n        },\n        ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n        ensUniversalResolver: {\n            address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n            blockCreated: 5_317_080,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const storyAeneid = /*#__PURE__*/ defineChain({\n    id: 1315,\n    name: 'Story Aeneid',\n    network: 'story-aeneid',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP',\n        symbol: 'IP',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1792,\n        },\n        ensRegistry: {\n            address: '0x5dC881dDA4e4a8d312be3544AD13118D1a04Cb17',\n            blockCreated: 1322033,\n        },\n        ensUniversalResolver: {\n            address: '0x6D3B3F99177FB2A5de7F9E928a9BD807bF7b5BAD',\n            blockCreated: 1322097,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://aeneid.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story Aeneid Explorer',\n            url: 'https://aeneid.storyscan.xyz',\n            apiUrl: 'https://aeneid.storyscan.xyz/api/v2',\n        },\n    },\n    ensTlds: ['.ip'],\n    testnet: true,\n});\n//# sourceMappingURL=storyAeneid.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taiko = /*#__PURE__*/ defineChain({\n    id: 167000,\n    name: 'Taiko Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.taiko.xyz'],\n            webSocket: ['wss://ws.mainnet.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taikoscan',\n            url: 'https://taikoscan.io',\n            apiUrl: 'https://api.taikoscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcb2436774C3e191c85056d248EF4260ce5f27A9D',\n        },\n    },\n});\n//# sourceMappingURL=taiko.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xLayer = /*#__PURE__*/ defineChain({\n    id: 196,\n    name: 'X Layer Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OKB',\n        symbol: 'OKB',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.xlayer.tech'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OKLink',\n            url: 'https://www.oklink.com/xlayer',\n            apiUrl: 'https://www.oklink.com/api/v5/explorer/xlayer/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 47416,\n        },\n    },\n});\n//# sourceMappingURL=xLayer.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zetachain = /*#__PURE__*/ defineChain({\n    id: 7000,\n    name: 'ZetaChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zeta',\n        symbol: 'ZETA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://zetachain-evm.blockpi.network/v1/rpc/public'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1632781,\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZetaScan',\n            url: 'https://explorer.zetachain.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zetachain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkLinkNova = /*#__PURE__*/ defineChain({\n    id: 810180,\n    name: 'zkLink Nova',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.zklink.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkLink Nova Block Explorer',\n            url: 'https://explorer.zklink.io',\n        },\n    },\n});\n//# sourceMappingURL=zkLinkNova.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksync = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 324,\n    name: 'ZKsync Era',\n    network: 'zksync-era',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.era.zksync.io'],\n            webSocket: ['wss://mainnet.era.zksync.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://era.zksync.network/',\n            apiUrl: 'https://api-era.zksync.network/api',\n        },\n        native: {\n            name: 'ZKsync Explorer',\n            url: 'https://explorer.zksync.io/',\n            apiUrl: 'https://block-explorer-api.mainnet.zksync.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 45659388,\n        },\n    },\n});\n//# sourceMappingURL=zksync.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const zora = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 7777777,\n    name: 'Zora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zora.energy'],\n            webSocket: ['wss://rpc.zora.energy'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.zora.energy',\n            apiUrl: 'https://explorer.zora.energy/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 5882,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1a0ad011913A150f69f6A19DF447A0CfD9551054',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3e2Ea9B92B7E48A52296fD261dc26fd995284631',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=zora.js.map","// relay page msg\nexport const relayOrigin = \"https://social-relay.tomo.inc\";\n// export const relayOrigin = \"http://localhost:3001\"; //  local test\nexport const relayOriginDev = \"https://social-relay-dev.tomo.inc\";\nconsole.log(\"relayOrigin\", relayOrigin);\n// export const relayOriginDev = \"http:/localhost:3001\";\nexport const googleId = \"479465761311-5da6b2ic7io7odr9jnrldai20046vk4t.apps.googleusercontent.com\";\n// export const redirectUri = `${relayOrigin}/google`; // google login use relayOrigin as redirect uri for both dev and prod\n// Note its value when debugging '/x' or '/'\nexport const redirectUriForX = `${relayOrigin}/x`; // twitter login use relayOrigin as redirect uri for both dev and prod\nexport const xLoaderUrl = `${relayOrigin}/x/loader`; // twitter login load use relayOrigin as redirect uri for both dev and prod\nexport const kakaoJsKey = \"06226ae2a1e8d0727c60dd2e6c874a63\";\nexport const kakaoRedirectUri = `${relayOrigin}/kakao`;\n// not used\n// export const mfaUrl = `${relayOrigin}/mfa`\n// export const relaySignRequestUrl = `${relayOrigin}/request`\n// export const requestUrl = 'http://localhost:8080/request'\n// export const relayOrigin = 'http://localhost:8080'\nexport const redirectUri = `${relayOrigin}/google`;\n// export const redirectUriForX = 'http://localhost:8080'\n// export const xLoaderUrl = 'http://localhost:8080/x/loader'\nexport const relaySetPinUrl = `${relayOrigin}/setPin`;\nexport const relayMessageTypes = {\n    googleAuth: \"tomo-google-authorized\",\n    xAuth: \"tomo-twitter-authorized\",\n    signReq: \"tomo-response\",\n    normalReq: \"normal-response\",\n    mfaCreate: \"tomo-mfa-authorized\",\n    kakaoAuth: \"tomo-kakao-authorized\",\n    telegramAuth: \"tomo-telegram-authorized\",\n};\nexport const EventNames = {\n    googleAuth: \"googleAuth\",\n    xAuth: \"xAuth\",\n    signReq: \"signReq\",\n    sendReq: \"sendReq\",\n    normalReq: \"normalReq\",\n    mfaReq: \"mfaReq\",\n    kakaoAuth: \"kakaoAuth\",\n    telegramAuth: \"telegramAuth\",\n};\nexport const RequestTypes = {\n    signMessage: \"signMessage\",\n    signTypedMessage: \"signTypedMessage\",\n    sendTx: \"sendTx\",\n    signTx: \"signTx\",\n    swapTx: \"swapTx\",\n    approveTx: \"approveTx\",\n    signTxs: \"signTxs\",\n};\n","export let xEvents = [];\nexport const setXEvents = (events) => {\n    xEvents = events;\n};\n","import log from \"loglevel\";\nexport const tomoLog = log.getLogger(\"TomoSDK\");\nexport const setLogLevel = (level) => {\n    tomoLog.setLevel(level);\n};\n","import { tomoLog } from \"./log\";\nexport const LOCAL_USER_TOKEN = \"local-user-token\";\nexport const LOCAL_USER_INFO = \"local-user-info\";\nexport const LOCAL_EMAIL_LOGIN_REQ = \"local-email-login-req\";\nexport const TOMO_CACHE = \"tomo-cache\";\nexport const getTomoCache = () => {\n    try {\n        const cache = localStorage.getItem(TOMO_CACHE);\n        return JSON.parse(cache ?? \"\");\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setTomoCache = (cache) => {\n    try {\n        localStorage.setItem(TOMO_CACHE, JSON.stringify(cache));\n    }\n    catch (e) {\n        tomoLog.error(\"save cache failed\");\n    }\n};\nexport const setCacheField = (clientId, key, value) => {\n    let cache = getTomoCache();\n    if (cache) {\n        if (cache[clientId]) {\n            cache[clientId][key] = value;\n        }\n        else {\n            cache[clientId] = {\n                [key]: value,\n            };\n        }\n    }\n    else {\n        cache = {\n            [clientId]: {\n                [key]: value,\n            },\n        };\n    }\n    setTomoCache(cache);\n};\n// 添加一个全局变量来存储 token\nconst globalTokenStore = {};\nexport const getLocalToken = (clientId) => {\n    try {\n        return globalTokenStore[clientId] || null;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalToken = (clientId, token) => {\n    globalTokenStore[clientId] = token;\n};\nexport const removeLocalToken = (clientId) => {\n    setCacheField(clientId, \"token\", null);\n};\nexport const getLocalUserId = (clientId) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[clientId]?.userId;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalUserId = (clientId, userId) => {\n    setCacheField(clientId, \"userId\", userId);\n};\nexport const removeLocalUserId = (clientId) => {\n    setCacheField(clientId, \"userId\", null);\n};\nexport const getLocalLoginType = (clientId) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[clientId]?.loginType;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalLoginType = (clientId, loginType) => {\n    setCacheField(clientId, \"loginType\", loginType);\n};\nexport const removeLocalLoginType = (clientId) => {\n    setCacheField(clientId, \"loginType\", null);\n};\nexport const getLocalPasskey = (evmAddress) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[evmAddress]?.localPasskey;\n    }\n    catch (e) {\n        return undefined;\n    }\n};\nexport const setLocalPasskey = (evmAddress, localPasskey) => {\n    setCacheField(evmAddress, \"localPasskey\", localPasskey);\n};\nexport const getEmailReq = () => {\n    try {\n        const req = localStorage.getItem(LOCAL_EMAIL_LOGIN_REQ);\n        return JSON.parse(req ?? \"\");\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setEmailReq = (req) => {\n    try {\n        localStorage.setItem(LOCAL_EMAIL_LOGIN_REQ, req);\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const removeEmailReq = () => {\n    try {\n        localStorage.removeItem(LOCAL_EMAIL_LOGIN_REQ);\n    }\n    catch (e) {\n        // do something\n    }\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { getLocalToken } from \"./LocalstorageUtils\";\nimport { getUserInfo as getUserInfoFromRemote } from \"./apiUtils\";\nimport { tomoLog } from \"./log\";\nlet userInfo = null;\nexport const getUserInfoFromLocalFirst = async (clientId) => {\n    if (userInfo) {\n        tomoLog.debug(\"cache data:\", userInfo);\n        return userInfo;\n    }\n    userInfo = await getUserInfoFromRemote(clientId);\n    return userInfo;\n};\nexport const clearUserInfo = () => {\n    userInfo = null;\n};\nexport const isHexStrict = (hex) => typeof hex === \"string\" && /^((-)?0x[0-9a-f]+|(0x))$/i.test(hex);\nexport const strToBase64 = (str) => {\n    const bytes = new TextEncoder().encode(str);\n    const binString = Array.from(bytes, (byte) => String.fromCodePoint(byte)).join(\"\");\n    return btoa(binString);\n};\nexport const base64ToStr = (base64) => {\n    const binString = atob(base64);\n    const data = Uint8Array.from(binString, (m) => m.codePointAt(0));\n    return new TextDecoder().decode(data);\n};\nexport const constructSignReq = (clientId, params) => {\n    const { reqType, chainType, address, addressType, network, message, signMessageType } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: chainType,\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        signInfo: {\n            message,\n            address,\n            addressType,\n            network,\n            signMessageType,\n        },\n    };\n};\nexport const constructTxReq = (clientId, params) => {\n    const { reqType, chainId, rpcUrl } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"evm\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        txMeta: {\n            txParams: params.params,\n            chainId,\n            rpcUrl,\n        },\n    };\n};\nexport const constructBtcTxReq = (clientId, params) => {\n    const { reqType, address, network, addressType } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"bitcoin\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        txMeta: {\n            txParams: params.params,\n            address,\n            addressType,\n            network,\n        },\n    };\n};\nexport const constructSolTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"solana\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructTonTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"ton\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructTronTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"tron\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructMovementTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"movement\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructSuiTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"sui\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\n","import { relayMessageTypes } from \"../constant\";\nimport { isMobile } from \"./device\";\nexport const relayWindowList = [];\nexport const openWindow = ({ url, name, width, height }) => {\n    const top = (window.innerHeight - (height || 400)) / 2 + window.screenY;\n    const left = (window.innerWidth - (width || 400)) / 2 + window.screenX;\n    if (relayWindowList.length) {\n        const currentWindow = relayWindowList[relayWindowList.length - 1];\n        currentWindow.location.href = url;\n        return currentWindow;\n    }\n    try {\n        const relyWindow = window.open(url, name, `dialog=yes,top=${top}px,left=${left},width=${width !== undefined ? width : 400}px,height=${height !== undefined ? height : 600}px`);\n        // Fallback to iframe modal if:\n        // 1. window.open is blocked by browser\n        // 2. iOS Safari requires user interaction for window.open\n        if (!relyWindow) {\n            return createModalIframe({ url, width });\n        }\n        relayWindowList.push(relyWindow);\n        return relyWindow;\n    }\n    catch (error) {\n        console.error(\"Failed to open window:\", error);\n        return createModalIframe({ url, width });\n    }\n};\nexport const injectIframe = ({ url }) => {\n    const id = \"tomo-social-relay\";\n    const existed = document.getElementById(id);\n    if (existed) {\n        existed.remove();\n    }\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = url;\n    iframe.id = id;\n    iframe.allow = \"publickey-credentials-create *\";\n    document.body.appendChild(iframe);\n    return iframe;\n};\nconst modalIframe = {\n    closed: false,\n};\n/**\n * Opens a modal iframe to display a web page.\n * @param {object} props\n * @param {string} props.url The URL to open in the iframe.\n * @param {number} [props.width=400] The width of the iframe.\n * @returns {HTMLIFrameElement} The iframe element.\n */\nconst createModalIframe = ({ url, width = 400 }) => {\n    const id = \"tomo-social-iframe-modal\";\n    const existed = document.getElementById(id);\n    if (existed) {\n        existed.remove();\n    }\n    // Save original states\n    const originalMeta = document.querySelector('meta[name=\"viewport\"]');\n    const originalMetaContent = originalMeta?.getAttribute(\"content\");\n    const originalBodyStyle = {\n        overflow: document.body.style.overflow,\n        position: document.body.style.position,\n        width: document.body.style.width,\n        height: document.body.style.height,\n    };\n    const isMobileDevice = isMobile();\n    const overlay = document.createElement(\"div\");\n    overlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    z-index: 999999;\n    -webkit-overflow-scrolling: touch;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n    const container = document.createElement(\"div\");\n    const containerWidth = width || 400;\n    const containerHeight = isMobileDevice ? \"100%\" : \"600px\";\n    const containerStyle = isMobileDevice\n        ? `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n  `\n        : `\n    width: ${containerWidth}px;\n    height: ${containerHeight};\n    border-radius: 16px;\n  `;\n    container.style.cssText = `\n    ${containerStyle}\n    background: white;\n    overflow: hidden;\n    z-index: 1000000;\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n    border: none;\n    box-shadow: ${isMobileDevice ? \"none\" : \"0 4px 24px rgba(0, 0, 0, 0.1)\"};\n    opacity: 0;\n    transition: opacity 0.3s;\n  `;\n    // Create iframe with enhanced security\n    const iframe = document.createElement(\"iframe\");\n    iframe.id = id;\n    iframe.setAttribute(\"loading\", \"eager\");\n    iframe.setAttribute(\"importance\", \"high\");\n    // Security attributes\n    iframe.setAttribute(\"sandbox\", \"allow-scripts allow-forms allow-same-origin allow-popups allow-modals allow-storage-access-by-user-activation\");\n    iframe.setAttribute(\"referrerpolicy\", \"strict-origin\");\n    iframe.allow = \"publickey-credentials-create; clipboard-write\";\n    iframe.src = url;\n    iframe.style.cssText = `\n    width: 100%;\n    height: 100%;\n    border: none;\n    margin: 0;\n    padding: 0;\n    flex: 1;\n    display: block;\n    background: white;\n    -webkit-overflow-scrolling: touch;\n  `;\n    // Show content when loaded\n    iframe.onload = () => {\n        container.style.opacity = \"1\";\n    };\n    if (isMobileDevice) {\n        const meta = document.createElement(\"meta\");\n        meta.name = \"viewport\";\n        meta.content = \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover\";\n        document.head.appendChild(meta);\n        document.body.style.overflow = \"hidden\";\n        document.body.style.position = \"fixed\";\n        document.body.style.width = \"100%\";\n        document.body.style.height = \"100%\";\n    }\n    container.appendChild(iframe);\n    overlay.appendChild(container);\n    document.body.appendChild(overlay);\n    const cleanup = () => {\n        overlay.remove();\n        if (isMobileDevice) {\n            const currentMeta = document.querySelector('meta[name=\"viewport\"]');\n            if (currentMeta) {\n                if (originalMeta && originalMetaContent) {\n                    originalMeta.setAttribute(\"content\", originalMetaContent);\n                }\n                else {\n                    currentMeta.remove();\n                }\n            }\n            document.body.style.overflow = originalBodyStyle.overflow;\n            document.body.style.position = originalBodyStyle.position;\n            document.body.style.width = originalBodyStyle.width;\n            document.body.style.height = originalBodyStyle.height;\n        }\n    };\n    // Handle messages\n    const messageHandler = (event) => {\n        if (Object.values(relayMessageTypes).includes(event.data.type)) {\n            cleanup();\n            window.removeEventListener(\"message\", messageHandler);\n        }\n    };\n    window.addEventListener(\"message\", messageHandler);\n    // Handle overlay click\n    overlay.addEventListener(\"click\", (e) => {\n        if (e.target === overlay) {\n            modalIframe.closed = true;\n            cleanup();\n            window.removeEventListener(\"message\", messageHandler);\n        }\n    });\n    modalIframe.closed = false;\n    return modalIframe;\n};\n","export function isMobile() {\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator?.userAgent || \"\");\n}\nexport const isIOS = () => {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n};\n","import { EventNames } from \"../constant\";\nimport { setTemporaryData } from \"./apiUtils\";\nimport { xEvents } from \"./existedEvents\";\nimport { getLocalLoginType, getLocalToken, getLocalUserId, setLocalPasskey, setLocalToken } from \"./LocalstorageUtils\";\nimport { tomoLog } from \"./log\";\nimport { strToBase64 } from \"./utils\";\nimport { openWindow, relayWindowList } from \"./windowUtils\";\nimport JSONBig from \"json-bigint\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport async function checkPopupClosed(popupPromise_ish, events, eventName, eventId) {\n    /** promise-ish to handle possible use in Electron */\n    const popup = await popupPromise_ish;\n    const checkPopup = () => {\n        if (popup && popup.closed) {\n            const currentClosedWindowIndex = relayWindowList.findIndex((win) => win == popup);\n            if (currentClosedWindowIndex !== -1) {\n                relayWindowList.splice(currentClosedWindowIndex, 1);\n            }\n            tomoLog.debug(\"Popup window closed\");\n            if (!xEvents.find((id) => id === eventId)) {\n                // avoid emit repeated events\n                events.emit(`${eventName}#${eventId}`, false);\n                tomoLog.debug(\"events:\", events.eventNames(), `${eventName}#${eventId}`);\n            }\n            clearInterval(checkInterval);\n        }\n        else {\n            tomoLog.debug(\"Popup window is still open\");\n        }\n    };\n    const checkInterval = setInterval(checkPopup, 1000);\n    return checkInterval;\n}\nexport const signRequest = async (req, core) => {\n    if (!req) {\n        throw new Error(\"Invalid request\");\n    }\n    if (!core) {\n        throw new Error(\"Invalid sdk status\");\n    }\n    // save req\n    const reqString = strToBase64(JSONBig.stringify({\n        ...req,\n        userId: getLocalUserId(core.clientId),\n        loginType: getLocalLoginType(core.clientId),\n    }));\n    await setTemporaryData({ eventId: req.eventId, value: reqString });\n    return new Promise((resolve, reject) => {\n        const popup = openWindow({\n            url: `${core.relayBase}/request?eventId=${req.eventId}`,\n            name: \"Sign Request\",\n        });\n        const listener = (data) => {\n            tomoLog.debug(\"result:\", data);\n            if (data.error) {\n                reject(data.error);\n            }\n            else {\n                resolve(data.result || data.response || data);\n            }\n        };\n        checkPopupClosed(popup, core.events, EventNames.signReq, req.eventId);\n        core.events.once(`${EventNames.signReq}#${req.eventId}`, listener);\n    });\n};\nexport const mfaRequest = async (req, core) => {\n    const loginType = getLocalLoginType(core.clientId);\n    req.loginType = loginType;\n    const reqString = strToBase64(JSONBig.stringify(req));\n    const popup = openWindow({\n        url: `${core.relayBase}/mfa?req=${reqString}`,\n        name: \"mfa Request\",\n    });\n    return new Promise((resolve, reject) => {\n        const listener = (data) => {\n            tomoLog.debug(\"result:\", data);\n            core\n                .getEthAddress()\n                .then((evmAddress) => {\n                if (data.error) {\n                    setLocalPasskey(evmAddress, false);\n                    reject(data.error);\n                }\n                else {\n                    setLocalPasskey(evmAddress, true);\n                    resolve(data.result);\n                }\n            })\n                .catch((e) => {\n                reject(e);\n            });\n        };\n        checkPopupClosed(popup, core.events, EventNames.mfaReq, req.eventId);\n        core.events.once(`${EventNames.mfaReq}#${req.eventId}`, listener);\n    });\n};\nfunction handleMessage(event) {\n    if (event.data.status === \"READY\") {\n        const msg = {\n            type: this.reqType,\n            auth: {\n                jwt: getLocalToken(this.clientId),\n                userId: getLocalUserId(this.clientId),\n                clientId: this.clientId,\n            },\n            ...(this.params || {}),\n            reqString: this.reqString,\n        };\n        console.log(\"msg\", msg);\n        this.postMessage?.(msg, \"*\");\n        return;\n    }\n    if (event.data.isSuccess && event.data.result) {\n        this.onSuccess(event.data);\n    }\n    else if (event.data.isError) {\n        this.onError(event.data);\n    }\n    else if (event.data.isReject) {\n        this.onReject(event.data);\n    }\n    else if (event.data.setAuth) {\n        setLocalToken(this.clientId, event.data.jwt);\n    }\n}\nexport async function setIframeToken(core) {\n    // Create a hidden iframe to get jwt from relay page\n    const { clientId } = core;\n    const jwt = getLocalToken(clientId);\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = `${core.relayBase}/normal`;\n    console.warn(clientId, jwt, iframe);\n    document.body.appendChild(iframe);\n    try {\n        // Wait for jwt from relay page\n        return await new Promise((resolve) => {\n            const messageHandler = (event) => {\n                if (event.data.status === \"READY\") {\n                    // Send auth request after receiving READY message\n                    const msg = {\n                        auth: {\n                            userId: getLocalUserId(clientId),\n                            clientId: clientId,\n                            jwt,\n                            setIframeToken: true,\n                        },\n                    };\n                    iframe.contentWindow?.postMessage(msg, \"*\");\n                    console.warn(\"setIframeToken: msg\", msg);\n                }\n                else if (event.data.setTokenSuccess) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(\"\");\n                }\n            };\n            window.addEventListener(\"message\", messageHandler);\n        });\n    }\n    catch (e) {\n        console.error(\"setIframeToken:\", e);\n    }\n    finally {\n        // Clean up iframe and event listener\n        document.body.removeChild(iframe);\n    }\n}\nexport async function getAuth(core) {\n    const jwt = getLocalToken(core.clientId);\n    if (jwt) {\n        return jwt;\n    }\n    // Create a hidden iframe to get jwt from relay page\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = `${core.relayBase}/normal`;\n    document.body.appendChild(iframe);\n    try {\n        // Wait for jwt from relay page\n        return await new Promise((resolve) => {\n            const messageHandler = (event) => {\n                if (event.data.status === \"READY\") {\n                    // Send auth request after receiving READY message\n                    const msg = {\n                        auth: {\n                            clientId: core.clientId,\n                        },\n                    };\n                    iframe.contentWindow?.postMessage(msg, \"*\");\n                }\n                else if (event.data.setAuth && event.data.jwt) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(event.data.jwt);\n                    setLocalToken(core.clientId, event.data.jwt);\n                }\n                else if (event.data.isFail) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(\"\");\n                }\n            };\n            window.addEventListener(\"message\", messageHandler);\n        });\n    }\n    catch (e) {\n        console.error(\"getAuth:\", e);\n    }\n    finally {\n        // Clean up iframe and event listener\n        document.body.removeChild(iframe);\n    }\n}\nexport const normalRequest = async (req, core) => {\n    const loginType = getLocalLoginType(core.clientId);\n    req.loginType = loginType;\n    const reqString = strToBase64(JSONBig.stringify(req));\n    const popup = openWindow({\n        url: `${core.relayBase}/normal`,\n        name: \"normal Request\",\n    });\n    return new Promise((resolve, reject) => {\n        /**\n         * listen to the message from the popup wallet\n         */\n        const msgHandler = handleMessage.bind({\n            clientId: core.clientId,\n            core: core,\n            reqString: reqString,\n            postMessage: (data, ...args) => popup.postMessage?.(data, ...args),\n            onSuccess: (data) => {\n                console.log(\"event.data.isSuccess>>>\", data.isSuccess, data.result);\n                resolve(data.result);\n            },\n            onError: (data) => {\n                console.log(\"event.data.isError>>>\", data.isError, data.result);\n                reject(data.error);\n            },\n            onReject: (data) => {\n                console.log(\"event.data.isReject>>>\", data.isReject, data.result);\n                reject(data.result);\n            },\n        });\n        window.addEventListener(\"message\", msgHandler);\n        const listener = (data) => {\n            if (data.result) {\n                resolve(data.result);\n            }\n            else {\n                reject(data.error);\n            }\n            /**\n             * remove the listener after the promise is resolved\n             */\n            window.removeEventListener(\"message\", msgHandler);\n        };\n        checkPopupClosed(popup, core.events, EventNames.normalReq, req.eventId);\n        core.events.once(`${EventNames.normalReq}#${req.eventId}`, listener);\n    });\n};\nexport const walletRequest = async (reqType, core, params) => {\n    const walletDomain = core.walletDomain;\n    const eventId = uuidv4();\n    const popup = openWindow({\n        url: `${walletDomain}`,\n        name: \"wallet Request\",\n        height: 740,\n        width: 400,\n    });\n    return new Promise((resolve, reject) => {\n        /**\n         * listen to the message from the popup wallet\n         */\n        const msgHandler = handleMessage.bind({\n            clientId: core.clientId,\n            core: core,\n            reqType,\n            params,\n            postMessage: (data, ...args) => popup.postMessage?.(data, ...args),\n            onSuccess: (data) => {\n                console.log(\"event.data.isSuccess>>>\", data.isSuccess, data.result, reqType);\n                resolve(data.result);\n            },\n            onError: (data) => {\n                console.log(\"event.data.isError>>>\", data.isError, data.result, reqType);\n                reject(data.error);\n            },\n            onReject: (data) => {\n                console.log(\"event.data.isReject>>>\", data.isReject, data.result, reqType);\n                reject(data.result);\n            },\n        });\n        window.addEventListener(\"message\", msgHandler);\n        const listener = (data) => {\n            if (data.result) {\n                resolve(data.result);\n            }\n            else {\n                reject(data.error);\n            }\n            /**\n             * remove the listener after the promise is resolved\n             */\n            window.removeEventListener(\"message\", msgHandler);\n        };\n        checkPopupClosed(popup, core.events, EventNames.normalReq, eventId);\n        core.events.once(`${EventNames.normalReq}#${eventId}`, listener);\n    });\n};\n","import axios from \"axios\";\nimport { version } from \"../../package.json\";\nimport { redirectUriForX } from \"../constant\";\nimport { getAuth } from \"./communicator\";\n// export const BASE_TEST_URL = \"https://app.unyx.tech/api/\";\nexport const BASE_TEST_URL = \"https://fans-tech-backend.tomo.services/api/\";\nexport const BASE_PROD_URL = \"https://apps-prod.tomo.inc/api/\";\nlet baseUrl = BASE_PROD_URL;\nlet api;\nexport const setApi = (core) => {\n    const { connectUrl: baseURL } = core;\n    baseUrl = baseURL;\n    api = axios.create({ baseURL });\n    api.interceptors.request.use(async (config) => {\n        const token = await getAuth(core);\n        if (token) {\n            config.headers = config.headers || {};\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        config.headers[\"Tomo-Sdk-Version\"] = version;\n        return config;\n    }, (error) => {\n        if (error?.response?.status === 401) {\n            return Promise.reject(error);\n        }\n    });\n};\nexport function setHeaders(headers) {\n    if (!api)\n        throw \"api not initialized yet\";\n    api.interceptors.request.use((config) => {\n        Object.entries(headers).forEach(([key, value]) => {\n            config.headers[key] = value;\n        });\n        return config;\n    });\n}\nexport const linkSocialAccount = async (params) => {\n    const { data } = await api.post(\"socialLogin/projectUser/bound\", {\n        ...params,\n    });\n    return data;\n};\nexport const getLinkSocialInfo = async () => {\n    const { data } = await api.get(\"socialLogin/projectUser/bound/status\");\n    return data;\n};\nexport const loginByGmail = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByGoogle\", {\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByKakao = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByKakao\", {\n            accessToken: code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByTelegram = async (authData, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByTelegram\", {\n            telegramAuthData: authData,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByX = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByTwitter\", {\n            code,\n            redirectUri: redirectUriForX,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const sendRegister = async (email, clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/email/sendRegister?email=${email}&clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const verifyRegister = async (email, code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/email/verifyRegister\", {\n            email,\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginCode = async (email, clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/email/loginCode?email=${email}&clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginVerify = async (email, code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/email/loginVerify\", {\n            email,\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const emailCheck = async (email) => {\n    try {\n        const { data } = await axios.get(`${baseUrl}login/emailCheck?email=${email}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const getUserInfo = async (clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/info?clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const mfaPKExisted = async () => {\n    const { data } = await api.get(`socialLogin/mfa/passkey/existence`);\n    return data;\n};\nexport const getPrice = async (tokenSymbols) => {\n    try {\n        const { data } = await axios.get(`${baseUrl}extension/price?symbol=${tokenSymbols}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const tradePaswordStatus = async () => {\n    const { data } = await api.get(`/socialLogin/teleGram/user/tradePaswordStatus`);\n    return data;\n};\nexport const hasEmail = async () => {\n    const { data } = await api.get(`socialLogin/projectUser/email`);\n    return data;\n};\nexport const bindEmailCode = async (email) => {\n    const { data } = await api.get(`socialLogin/projectUser/bindEmailCode?email=${email}`);\n    return data;\n};\nexport const bindEmailCodeVerify = async (email, code) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindEmailCodeVerify`, {\n        email,\n        code,\n    });\n    return data;\n};\nexport const getSocialInfo = async () => {\n    const { data } = await api.get(`socialLogin/projectUser/socialInfo`);\n    return data;\n};\nexport const bindX = async (code) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindX`, {\n        code,\n        redirectUri: redirectUriForX,\n    });\n    return data;\n};\nexport const defaultTokens = async () => {\n    const { data } = await axios.get(`${baseUrl}wallet/defaultTokens`);\n    return data;\n};\nexport const dashboardTokens = async (clientId, chainId) => {\n    const { data } = await api.get(`${baseUrl}socialLogin/projectUser/getTokensOnClientId?clientId=${clientId}&chainId=${chainId}`);\n    return data;\n};\n// address, token symbol\nexport const tokenSearch = async (content) => {\n    const { data } = await axios.get(`${baseUrl}wallet/tokens/search?content=${content}`);\n    return data;\n};\nexport const holdEvmTokens = async (address) => {\n    const { data } = await axios.get(`${baseUrl}wallet/holdingTokensOnEthereum?address=${address}`);\n    return data;\n};\nexport const holdSolTokens = async (address) => {\n    const { data } = await axios.get(`${baseUrl}wallet/holdingTokensOnSolana?address=${address}`);\n    return data;\n};\nexport const userWalletTokens = async (address) => {\n    const { data } = await api.get(`socialLogin/projectWallet/userWalletTokens?address=${address}`);\n    return data;\n};\nexport const updateUserWalletTokens = async (tokens) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens`, { tokens });\n    return data;\n};\nexport const addUserWalletToken = async (token, walletAddress) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens/add`, {\n        token,\n        walletAddress,\n    });\n    return data;\n};\nexport const removeUserWalletToken = async (token, walletAddress) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens/remove`, {\n        token,\n        walletAddress,\n    });\n    return data;\n};\nexport const getSwapTokenList = async (chain) => {\n    const { data } = await api.get(`socialLogin/projectWallet/token/swapList?chain=${chain}`);\n    return data;\n};\n//networkType: 'MAINNET' | 'TESTNET' | 'SIGNET'\nexport const getBtcFeeRate = async (networkType) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getFeeRate?networkType=${networkType}`);\n    return data;\n};\nexport const pushBtcTx = async (txHex, network) => {\n    const { data } = await api.post(`socialLogin/projectWallet/bitcoin/pushTx`, {\n        rawTransaction: txHex,\n        networkType: network,\n    });\n    return data;\n};\nexport const getBtcInscriptionData = async (address, network) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getInscriptionData?address=${address}&networkType=${network}`);\n    return data;\n};\nexport const getBtcInscriptionInfo = async (insId, network) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getInscriptionInfo?insId=${insId}&networkType=${network}`);\n    return data;\n};\nexport const getCustomization = async (clientId) => {\n    const { data } = await api.get(`socialLogin/projectUser/customization`, {\n        params: { clientId },\n    });\n    return data;\n};\n// movement sign tx\nexport const signMovementTx = async (params) => {\n    const { data } = await api.post(`socialLogin/projectWallet/movement/signTransaction`, {\n        rawTransaction: params.rawTransaction,\n    }, {\n        headers: {\n            mfa: params.mfa,\n        },\n    });\n    return data;\n};\n// movement sign message\nexport const movementSignMessage = async (params) => {\n    const { data } = await api.post(`socialLogin/projectWallet/movement/signMessage`, {\n        message: params.message,\n    }, {\n        headers: {\n            mfa: params.mfa,\n        },\n    });\n    return data;\n};\nexport const suiSignTransaction = async (params) => {\n    const { data } = await api\n        .post(`socialLogin/projectWallet/sui/signTransaction`, params, {\n        headers: {\n            mfa: params.mfa,\n        },\n    })\n        .catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign transaction\");\n    });\n    return data;\n};\nexport const suiSignPersonalMessage = async (params) => {\n    const { data } = await api\n        .post(`socialLogin/projectWallet/sui/signPersonalMessage`, params, {\n        headers: {\n            mfa: params.mfa,\n        },\n    })\n        .catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign message\");\n    });\n    return data;\n};\nexport const getTomoChains = async (url) => {\n    const ret = await axios.get(`${url || baseUrl}chain/chain_info?platform=SDK`);\n    return ret.data;\n};\nexport const getUserIdWithClientId = async (clientId) => {\n    const { data } = await api.get(`socialLogin/projectUser/ownerUid?clientId=${clientId}`);\n    return data;\n};\nexport const bindInviter = async (inviter) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindInviter`, {\n        inviter,\n    });\n    return data;\n};\nexport const setTemporaryData = async (params) => {\n    const { data } = await api.post(`socialLogin/projectUser/setTemporaryData`, params).catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign message\");\n    });\n    return data;\n};\n","export const btcChains = {\n    mainnet: {\n        ticker: \"BTC\",\n        apiBlockstream: \"https://btc-rpc.lorenzo-protocol.xyz\",\n    },\n    testnet: {\n        ticker: \"BTC\",\n        apiBlockstream: \"https://btc-rpc-testnet.lorenzo-protocol.xyz/testnet\",\n    },\n    signet: {\n        ticker: \"sBTC\",\n        apiBlockstream: \"https://btc-rpc-signet.lorenzo-protocol.xyz/signet\",\n    },\n};\nexport var AddressType;\n(function (AddressType) {\n    AddressType[AddressType[\"P2PKH\"] = 0] = \"P2PKH\";\n    AddressType[AddressType[\"P2WPKH\"] = 1] = \"P2WPKH\";\n    AddressType[AddressType[\"P2TR\"] = 2] = \"P2TR\";\n    AddressType[AddressType[\"P2SH_P2WPKH\"] = 3] = \"P2SH_P2WPKH\";\n    AddressType[AddressType[\"M44_P2WPKH\"] = 4] = \"M44_P2WPKH\";\n    AddressType[AddressType[\"M44_P2TR\"] = 5] = \"M44_P2TR\";\n})(AddressType || (AddressType = {}));\nexport const AddressTypeMap = {\n    P2PKH: \"P2PKH\",\n    P2WPKH: \"P2WPKH\",\n    P2TR: \"P2TR\",\n    P2SH: \"P2SH\",\n};\nexport const networkMap = {\n    mainnet: \"mainnet\",\n    testnet: \"testnet\",\n    signet: \"signet\",\n};\nexport const addressInfos = [\n    {\n        value: AddressType.P2PKH,\n        label: \"P2PKH\",\n        name: \"Legacy (P2PKH)\",\n        displayName: \"Legacy\",\n        hdPath: \"m/44'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2WPKH,\n        label: \"P2WPKH\",\n        name: \"Native Segwit (P2WPKH)\",\n        displayName: \"Native Segwit\",\n        hdPath: \"m/84'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2TR,\n        label: \"P2TR\",\n        name: \"Taproot (P2TR)\",\n        displayName: \"Taproot\",\n        hdPath: \"m/86'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2SH_P2WPKH,\n        label: \"P2SH\",\n        name: \"Nested Segwit (P2SH-P2WPKH)\",\n        displayName: \"Nested Segwit\",\n        hdPath: \"m/49'/0'/0'/0\",\n    },\n    // {\n    //   value: AddressType.M44_P2WPKH,\n    //   label: \"P2WPKH\",\n    //   name: \"Native SegWit (P2WPKH)\",\n    //   displayName: \"Native SegWit\",\n    //   hdPath: \"m/44'/0'/0'/0\",\n    // },\n    // {\n    //   value: AddressType.M44_P2TR,\n    //   label: \"P2TR\",\n    //   name: \"Taproot (P2TR)\",\n    //   displayName: \"Taproot\",\n    //   hdPath: \"m/44'/0'/0'/0\",\n    // },\n];\n","import EventEmitter from \"eventemitter3\";\nimport { RequestTypes } from \"../../constant\";\nimport { getBtcFeeRate, getBtcInscriptionData, getBtcInscriptionInfo, pushBtcTx } from \"../../utils/apiUtils\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { tomoLog } from \"../../utils/log\";\nimport { constructBtcTxReq, constructSignReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { getBalanceFromNode } from \"./apiUtils\";\nimport { AddressTypeMap, addressInfos, btcChains, networkMap } from \"./type\";\nexport class BitcoinProvider {\n    network = networkMap.mainnet;\n    event = new EventEmitter();\n    addressType = AddressTypeMap.P2TR;\n    address = \"\";\n    pubKey = \"\";\n    core;\n    // connectWallet() {\n    //   return this;\n    // }\n    setCore(core) {\n        this.core = core;\n    }\n    // getWalletProviderName() {\n    //   return \"TOMO Social Wallet\";\n    // }\n    async getAccounts() {\n        return [await this.getAddress()];\n    }\n    async getAddress() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get address failed.\");\n        }\n        if (this.network === networkMap.mainnet) {\n            this.address = data.result.btcMainnetAddressInfo[this.addressType.toLowerCase()];\n            return this.address;\n        }\n        else {\n            this.address = data.result.btcTestnetAddressInfo[this.addressType.toLowerCase()];\n            return this.address;\n        }\n    }\n    async getPublicKey() {\n        return this.getPublicKeyHex();\n    }\n    async getPublicKeyHex() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get public key failed.\");\n        }\n        const key = this.addressType.toLowerCase() + \"PubKey\";\n        if (this.network === networkMap.mainnet) {\n            return data.result.btcMainnetAddressInfo[key];\n        }\n        else {\n            return data.result.btcTestnetAddressInfo[key];\n        }\n    }\n    async getAllAddresses() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get address failed.\");\n        }\n        let info;\n        if (this.network === networkMap.mainnet) {\n            info = data.result.btcMainnetAddressInfo;\n        }\n        else {\n            info = data.result.btcTestnetAddressInfo;\n        }\n        const ret = Object.entries(info)\n            .map(([key, value]) => {\n            const addressInfo = addressInfos.find((x) => x.label === key.toUpperCase());\n            if (!addressInfo) {\n                return null;\n            }\n            return {\n                ...addressInfo,\n                address: value,\n            };\n        })\n            .filter((x) => x !== null);\n        return ret;\n    }\n    async sendBitcoin(to, satAmount, feeRate) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                to,\n                amount: satAmount,\n                feeRate,\n                fromAddress: await this.getAddress(),\n                pubKey: await this.getPublicKeyHex(),\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signPsbt(psbtHex) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.signTx,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                psbtHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signPsbts(psbtHexs) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.signTxs,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                psbtHexs,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data ? data.split(\",\") : \"\";\n    }\n    async signMessageBIP322(message) {\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"bitcoin\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            addressType: this.addressType,\n            network: this.network,\n            message,\n            signMessageType: \"bip322-simple\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessageEcdsa(message) {\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"bitcoin\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            addressType: this.addressType,\n            network: this.network,\n            message,\n            signMessageType: \"ecdsa\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessage(message, _type = \"ecdsa\") {\n        return _type === \"ecdsa\" ? this.signMessageEcdsa(message) : this.signMessageBIP322(message);\n    }\n    getNetwork() {\n        return this.network;\n    }\n    getAddressType() {\n        return this.addressType;\n    }\n    async switchNetwork(network) {\n        if (network !== \"mainnet\" && network !== \"testnet\" && network !== \"signet\") {\n            throw new Error(\"Invalid network, only support mainnet, testnet, signet\");\n        }\n        this.network = network;\n        await this.getAddress();\n        this.event.emit(\"networkChanged\", network);\n    }\n    async changeAddressType(addressType) {\n        if (!AddressTypeMap[addressType]) {\n            throw new Error(\"Invalid address type, only support P2PKH, P2WPKH, P2TR, P2SH\");\n        }\n        this.addressType = AddressTypeMap[addressType];\n        await this.getAddress();\n        this.event.emit(\"addressTypeChanged\", addressType);\n    }\n    on(eventName, callBack) {\n        this.event.on(eventName, callBack);\n    }\n    off(eventName, callBack) {\n        this.event.off(eventName, callBack);\n    }\n    // Mempool calls\n    async getBalance(address) {\n        try {\n            const btcAddress = address || (await this.getAddress());\n            const btcRes = await getBalanceFromNode(btcChains[this.network].apiBlockstream, btcAddress);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const chain_stats = btcRes?.chain_stats;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const mempool_stats = btcRes?.mempool_stats;\n            const btcBalance = chain_stats.funded_txo_sum -\n                chain_stats.spent_txo_sum +\n                (mempool_stats.funded_txo_sum - mempool_stats.spent_txo_sum);\n            return btcBalance;\n        }\n        catch (e) {\n            return 0;\n        }\n    }\n    async getFeeRate() {\n        try {\n            const data = await getBtcFeeRate(this.network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"Get fee rate failed:\", e);\n            throw new Error(\"Get fee rate failed.\");\n        }\n    }\n    async pushTx(txHex) {\n        try {\n            const data = await pushBtcTx(txHex, this.network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"Get fee rate failed:\", e);\n            throw new Error(\"Get fee rate failed.\");\n        }\n    }\n    async getInscriptionData(address, network = this.network) {\n        try {\n            const data = await getBtcInscriptionData(address, network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"GetInscriptionData failed:\", e);\n            throw new Error(\"GetInscriptionData failed.\");\n        }\n    }\n    async getInscriptionInfo(insId, network = this.network) {\n        try {\n            const data = await getBtcInscriptionInfo(insId, network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"GetInscriptionInfo failed:\", e);\n            throw new Error(\"GetInscriptionInfo failed.\");\n        }\n    }\n}\n","import axios from \"axios\";\nexport const getBalanceFromNode = async (baseUrl, address) => {\n    const res = await axios.get(`${baseUrl}/api/address/${address}`, {\n        maxRedirects: 1,\n    });\n    return res.data;\n};\n","import { arbitrum, aurora, avalanche, base, baseSepolia, berachainTestnetbArtio, bevmMainnet, blast, bob, bsc, bscTestnet, chiliz, cronos, fantom, gnosis, linea, mainnet, manta, mantaTestnet, mantle, merlin, mode, opBNB, optimism, palm, polygon, polygonZkEvm, satoshiVM, scroll, sei, sepolia, taiko, xLayer, zetachain, zkLinkNova, zkSync, zora, storyAeneid, } from \"viem/chains\";\nexport const berachainMainnet = {\n    // relay chain info\n    id: 80094,\n    name: \"Berachain Mainnet\",\n    nativeCurrency: {\n        name: \"BERA Token\",\n        symbol: \"BERA\",\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: [\"https://rpc.berachain.com\"],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: \"Berachain Scan\",\n            url: \"https://berascan.com\",\n        },\n    },\n    logo: \"/images/chain/Berachain bArtio.png\",\n    // tomo tg wallet chain info\n    chainName: \"Berachain Mainnet\",\n    nativeCurrencyName: \"BERA Token\",\n    nativeCurrencySymbol: \"BERA\",\n    nativeCurrencyDecimals: 18,\n    // rpcUrls: [\"https://rpc.berachain.com\"],\n    blockExplorerUrl: \"https://berascan.com\",\n    platformType: \"EVM\",\n    icon: \"https://static.tomo.inc/token/berachain.svg\",\n    supportSwap: false,\n    supportGift: false,\n    supportHistory: false,\n};\nexport const allChains = [\n    arbitrum,\n    avalanche,\n    base,\n    baseSepolia,\n    berachainTestnetbArtio,\n    bevmMainnet,\n    blast,\n    bob,\n    bsc,\n    bscTestnet,\n    cronos,\n    fantom,\n    gnosis,\n    linea,\n    mainnet,\n    manta,\n    mantle,\n    merlin,\n    mode,\n    opBNB,\n    optimism,\n    polygon,\n    polygonZkEvm,\n    satoshiVM,\n    scroll,\n    sei,\n    taiko,\n    xLayer,\n    zetachain,\n    zkLinkNova,\n    zkSync,\n    zora,\n    sepolia,\n    mantaTestnet,\n    chiliz,\n    palm,\n    aurora,\n    berachainMainnet,\n    storyAeneid,\n];\nexport const chainId2ChainMap = allChains.reduce((acc, chain) => {\n    acc[chain.id] = chain;\n    return acc;\n}, {});\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport EventEmitter from \"eventemitter3\";\nimport { recoverMessageAddress } from \"viem\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { tomoLog } from \"../../utils/log\";\nimport { constructSignReq, constructTxReq } from \"../../utils/utils\";\nimport { allChains } from \"./chains\";\nimport { getTomoChains } from \"../../utils/apiUtils\";\nconst walletActions = {\n    eth_requestAccounts: \"eth_requestAccounts\",\n    eth_accounts: \"eth_accounts\",\n    wallet_watchAsset: \"wallet_watchAsset\",\n    eth_addEthereumChain: \"eth_addEthereumChain\",\n    eth_switchEthereumChain: \"eth_switchEthereumChain\",\n    wallet_switchEthereumChain: \"wallet_switchEthereumChain\",\n    personal_sign: \"personal_sign\",\n    eth_signTypedData_v4: \"eth_signTypedData_v4\",\n    wallet_getPermissions: \"wallet_getPermissions\",\n    wallet_requestPermissions: \"wallet_requestPermissions\",\n    eth_sendTransaction: \"eth_sendTransaction\",\n    eth_sendRawTransaction: \"eth_sendRawTransaction\",\n    personal_ecRecover: \"personal_ecRecover\",\n    eth_swapTransaction: \"eth_swapTransaction\",\n    eth_approveTransaction: \"eth_approveTransaction\",\n    eth_chainId: \"eth_chainId\",\n};\nconst LsChainIdKey = \"TOMO_WALLET_EVM_CHAIN_ID\";\nexport class EthereumProvider extends EventEmitter {\n    jsonRpcProvider;\n    chainConfig;\n    core;\n    chainList;\n    chainListFromCDN;\n    instanceId;\n    initialPromise;\n    connectUrl;\n    constructor(params) {\n        super();\n        this.connectUrl = params?.connectUrl || \"\";\n        this.instanceId = Date.now().toString().slice(0, -2);\n        this.chainList = allChains;\n        this.chainListFromCDN = [];\n        const chainId = this.chainIdDecimal;\n        this.initialPromise = this.initial(chainId);\n    }\n    async initial(chainId) {\n        const chainConfig = await this.getChainConfig(chainId).catch((e) => {\n            throw e;\n        });\n        this.chainConfig = chainConfig;\n        this.jsonRpcProvider = new JsonRpcProvider(new HttpConnection(chainConfig.rpcUrl));\n        this.connect();\n    }\n    async getChainConfig(chainId) {\n        const chain = this.getChain(chainId);\n        const chainConfig = { chainId: chainId, rpcUrl: \"\" };\n        if (!chain) {\n            let chainList = this.chainListFromCDN;\n            // no chainList or don't find chain, get chainlist from cdn\n            if (chainList.length === 0 || !chainList.find((chain) => chain.id === chainId)) {\n                chainList = await this.getChainListFromCDN();\n            }\n            const chainObj = chainList.find((chain) => chain.id === chainId);\n            if (chainObj) {\n                chainConfig.rpcUrl = chainObj.rpcUrl;\n            }\n            else {\n                throw new Error(\"Unsupported chain\");\n            }\n        }\n        else {\n            chainConfig.rpcUrl = chain.rpcUrls.default.http[0];\n        }\n        return chainConfig;\n    }\n    async getChainListFromCDN() {\n        const res = await getTomoChains(this.connectUrl).catch(() => {\n            return [];\n        });\n        const chainListFromCDN = res\n            .filter((chain) => chain.platformType === \"EVM\")\n            .map((chain) => ({\n            ...chain,\n            rpcUrl: chain.rpcUrls[0],\n            id: chain.chainId,\n        }));\n        this.chainListFromCDN = chainListFromCDN;\n        return chainListFromCDN;\n    }\n    getChain(id) {\n        return this.chainList.find((item) => item.id === id);\n    }\n    async connect() {\n        await this.jsonRpcProvider.connect();\n        this.jsonRpcProvider.connection.on(\"error\", (error) => tomoLog.error(error));\n    }\n    async request(request, context) {\n        tomoLog.debug(request, this.instanceId);\n        await this.initialPromise;\n        if (walletActions[request.method]) {\n            return await this.processWalletAction(request);\n        }\n        return await this.jsonRpcProvider.request(request, context);\n    }\n    get chainIdDecimal() {\n        let chainId = localStorage.getItem(LsChainIdKey) ?? 1;\n        chainId = isNaN(Number(chainId)) ? 1 : Number(chainId);\n        console.log(\"get chain id decimal\", chainId);\n        return chainId;\n    }\n    get chainIdHex() {\n        const idHex = \"0x\" + this.chainIdDecimal.toString(16);\n        return idHex;\n    }\n    async processWalletAction(request) {\n        switch (request.method) {\n            case walletActions.eth_requestAccounts:\n                return await this.requestAddresses();\n            case walletActions.eth_accounts:\n                return await this.getAddresses();\n            case walletActions.personal_sign:\n                return await this.signMessage(request.params[0], request.params[1]);\n            case walletActions.eth_signTypedData_v4:\n                return await this.signTypedData(request.params[0], request.params[1]);\n            case walletActions.eth_sendTransaction:\n                return await this.sendTransaction(request.params[0]);\n            case walletActions.eth_sendRawTransaction:\n                return await this.sendRawTransaction( /* request.params[0] */);\n            case walletActions.wallet_switchEthereumChain:\n                return await this.switchChain(request.params[0].chainId);\n            case walletActions.eth_chainId:\n                return this.chainIdHex;\n            case walletActions.personal_ecRecover:\n                return await this.recoverMessageAddress(request.params[0], request.params[1]);\n            case walletActions.eth_swapTransaction:\n                return await this.swapTransaction(request.params[0]);\n            case walletActions.eth_approveTransaction:\n                return await this.approveTransaction(request.params[0]);\n            default:\n                throw new Error(\"Unsupported wallet action\");\n        }\n    }\n    sendAsync(payload, \n    // eslint-disable-next-line no-unused-vars\n    callback) {\n        this.request(payload)\n            .then((data) => callback(null, data))\n            .catch((e) => callback(e, null));\n    }\n    async getChainId() {\n        return this.chainIdDecimal;\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    async switchChain(chainId) {\n        const chainIdNum = Number(chainId);\n        if (chainIdNum === this.chainIdDecimal) {\n            return;\n        }\n        const chainConfig = await this.getChainConfig(chainIdNum).catch(() => {\n            throw new Error(\"Unsupported chain\");\n        });\n        await this.setChainConfig(chainConfig);\n        console.log(\"switched chain\", chainConfig);\n        this.emit(\"networkChanged\", chainId);\n    }\n    async setChainConfig(chainConfig) {\n        localStorage.setItem(LsChainIdKey, String(chainConfig.chainId));\n        this.chainConfig = chainConfig;\n        this.jsonRpcProvider = new JsonRpcProvider(new HttpConnection(chainConfig.rpcUrl));\n        await this.connect();\n    }\n    async getAddresses() {\n        return await this.requestAddresses();\n    }\n    async requestAddresses() {\n        if (this.core) {\n            const address = await this.core.getEthAddress();\n            return [address];\n        }\n        return [];\n    }\n    async signMessage(msg, address) {\n        const request = constructSignReq(this.core.clientId, {\n            reqType: RequestTypes.signMessage,\n            address,\n            message: msg,\n            chainType: \"evm\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signTypedData(address, msg) {\n        const request = constructSignReq(this.core.clientId, {\n            reqType: RequestTypes.signTypedMessage,\n            address,\n            message: msg,\n            chainType: \"evm\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async sendTransaction(params) {\n        console.log(\"chain config\", this.chainConfig);\n        const address = await this.core.getEthAddress();\n        const chainId = this.chainIdDecimal;\n        const request = constructTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            chainId,\n            rpcUrl: this.chainConfig.rpcUrl,\n            address,\n            params,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async recoverMessageAddress(message, signature) {\n        const address = await recoverMessageAddress({\n            message,\n            signature: signature,\n        });\n        return address;\n    }\n    async sendRawTransaction( /* signedTx: string */) {\n        throw new Error(\"Not supported yet\");\n    }\n}\n","import { Connection, PublicKey } from \"@solana/web3.js\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { constructSignReq, constructSolTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nexport class SolanaProvider {\n    publicKey = null;\n    connected = false;\n    isConnected = false;\n    connection;\n    endpoint = \"https://rpc.ankr.com/solana/c2d7e8a3db5dce62e202db3d28cca25e74da5028abbf20764e2961918ba34dfc\";\n    core = null;\n    constructor(endpoint) {\n        if (endpoint) {\n            this.endpoint = endpoint;\n        }\n    }\n    async getPublicKey() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result || !data.result.solAddress) {\n            throw new Error(\"Get public key failed.\");\n        }\n        this.publicKey = new PublicKey(data.result.solAddress);\n        return this.publicKey.toBase58();\n    }\n    async getAddress() {\n        return await this.getPublicKey();\n    }\n    async getBalance() {\n        await this.connect();\n        const address = await this.getPublicKey();\n        return await this.connection?.getBalance?.(new PublicKey(address));\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    // async sendSol(\n    //   to: string,\n    //   amount: string,\n    //   mintAddress?: string,\n    // ): Promise<string> {\n    //   await this.getPublicKey();\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.sendTx,\n    //     address: this.publicKey.toBase58(),\n    //     params: {\n    //       to,\n    //       value: amount,\n    //       mintAddress,\n    //     },\n    //   });\n    //   const data: any = await signRequest(request, this.core);\n    //   return data;\n    // }\n    // async swapSol(params: SwapTxParams) {\n    //   await this.getPublicKey();\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.swapTx,\n    //     address: this.publicKey.toBase58(),\n    //     params,\n    //   });\n    //   const data = await signRequest(request, this.core);\n    //   return data;\n    // }\n    async signTransaction(transaction) {\n        await this.getPublicKey();\n        const txHex = await this.getTransactionHex(transaction);\n        const request = constructSolTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.publicKey.toBase58(),\n            params: {\n                type: \"sign\",\n                transaction: txHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    // async signAllTransactions<T extends Transaction | VersionedTransaction>(\n    //   transactions: T[],\n    // ): Promise<T[]> {\n    //   await this.getPublicKey();\n    //   const txs = [];\n    //   for (const tx of transactions) {\n    //     const txHex = await this.getTransactionHex(tx);\n    //     txs.push(txHex);\n    //   }\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.sendTx,\n    //     address: this.publicKey.toBase58(),\n    //     params: {\n    //       transactions: txs,\n    //     },\n    //   });\n    //   const data: any = await signRequest(request, this.core);\n    //   return data;\n    // }\n    async sendTransaction(transaction, connection) {\n        await this.getPublicKey();\n        const txHex = await this.getTransactionHex(transaction, connection);\n        const request = constructSolTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.publicKey.toBase58(),\n            params: {\n                type: \"send\",\n                transaction: txHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessage(message) {\n        await this.getPublicKey();\n        const messageStr = new TextDecoder().decode(message);\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"solana\",\n            reqType: RequestTypes.signMessage,\n            address: this.publicKey.toBase58(),\n            message: messageStr,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async connect() {\n        this.connection = new Connection(this.endpoint, \"confirmed\");\n        this.connected = true;\n        this.connected = true;\n    }\n    async disconnect() {\n        this.connection = null;\n        this.isConnected = false;\n        this.isConnected = false;\n    }\n    async getTransactionHex(transaction, connection) {\n        let txHex;\n        if (transaction.serializeMessage) {\n            const tx = transaction;\n            if (!tx.feePayer) {\n                if (this.publicKey) {\n                    tx.feePayer = this.publicKey;\n                }\n                else {\n                    this.publicKey = new PublicKey(await this.getPublicKey());\n                    tx.feePayer = this.publicKey;\n                }\n            }\n            if (!this.isConnected) {\n                await this.connect();\n            }\n            const conn = connection || this.connection;\n            if (conn.getLatestBlockhash) {\n                tx.recentBlockhash = (await conn.getLatestBlockhash())?.blockhash;\n            }\n            else {\n                tx.recentBlockhash = (await conn.getRecentBlockhash(\"max\"))?.blockhash;\n            }\n            txHex = tx.serialize({ requireAllSignatures: false, verifySignatures: false }).toString(\"hex\");\n        }\n        else {\n            // txHex = Buffer.from(transaction.serialize()).toString('hex')\n            throw new Error(\"Unsupported transaction type, only support Transaction\");\n        }\n        return txHex;\n    }\n}\n","function fromBase64(base64String) {\n  return Uint8Array.from(atob(base64String), (char) => char.charCodeAt(0));\n}\nconst CHUNK_SIZE = 8192;\nfunction toBase64(bytes) {\n  if (bytes.length < CHUNK_SIZE) {\n    return btoa(String.fromCharCode(...bytes));\n  }\n  let output = \"\";\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    const chunk = bytes.slice(i, i + CHUNK_SIZE);\n    output += String.fromCharCode(...chunk);\n  }\n  return btoa(output);\n}\nexport {\n  fromBase64,\n  toBase64\n};\n//# sourceMappingURL=b64.js.map\n","import { Transaction } from \"@mysten/sui/transactions\";\nimport { SUI_TYPE_ARG } from \"@mysten/sui/utils\";\nconst suiEndPoint = \"https://fullnode.mainnet.sui.io:443\";\nexport const SUI_TOKEN_ADDRESS = SUI_TYPE_ARG;\nlet suiClient;\nconst getSuiClient = async () => {\n    if (suiClient) {\n        return suiClient;\n    }\n    const client = await import(\"@mysten/sui/client\");\n    suiClient = new client.SuiClient({ url: suiEndPoint });\n    return suiClient;\n};\nexport const sendSuiTx = async ({ bytes, signature, }) => {\n    const suiClient = await getSuiClient();\n    const res = await suiClient.executeTransactionBlock({\n        transactionBlock: bytes,\n        signature: signature,\n    });\n    return res;\n};\nexport const getTransactionBlockBytes = async ({ transaction, txRaw, address, }) => {\n    let tx;\n    let transactionBlockBytes;\n    const suiClient = await getSuiClient();\n    try {\n        tx = Transaction.from(transaction);\n        if (!JSON.parse(transaction).sender) {\n            tx.setSender(address);\n        }\n        transactionBlockBytes = await tx.build({ client: suiClient });\n    }\n    catch (error) {\n        txRaw.setSenderIfNotSet(address);\n        transactionBlockBytes = await txRaw.build({ client: suiClient });\n    }\n    return transactionBlockBytes;\n};\n","import { constructSignReq, constructSuiTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { suiSignPersonalMessage, suiSignTransaction } from \"../../utils/apiUtils\";\nimport { toBase64 } from \"@mysten/sui/utils\";\nimport { getTransactionBlockBytes, sendSuiTx } from \"../../utils/sui\";\nimport { Transaction } from \"@mysten/sui/transactions\";\nexport class SuiProvider {\n    address;\n    core = null;\n    constructor() { }\n    async getAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.suiAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.suiAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    signTransaction = async (input) => {\n        try {\n            if (!this.address) {\n                await this.getAddress();\n            }\n            let transaction = await input.transaction.toJSON();\n            try {\n                if (!JSON.parse(transaction).sender) {\n                    const txb = Transaction.from(transaction);\n                    txb.setSender(this.address);\n                    transaction = await txb.toJSON();\n                }\n            }\n            catch (error) {\n                console.error(\"Error setting sender:\", error);\n            }\n            const request = constructSuiTxReq(this.core.clientId, {\n                reqType: RequestTypes.signTx,\n                address: this.address,\n                params: {\n                    type: \"sign\",\n                    transaction,\n                },\n            });\n            const data = await signRequest(request, this.core);\n            if (!data || data.toLowerCase() === \"cancel\")\n                throw \"user cancel\";\n            const signRes = await suiSignTransaction({\n                tx: transaction,\n                url: \"https://fullnode.mainnet.sui.io:443\",\n                mfa: data,\n            });\n            const { result: signature } = signRes;\n            const transactionBlockBytes = await getTransactionBlockBytes({\n                transaction,\n                address: this.address,\n                // @ts-expect-error input.transaction\n                txRaw: input.transaction,\n            });\n            return { bytes: toBase64(transactionBlockBytes), signature };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    };\n    signAndExecuteTransaction = async (input) => {\n        try {\n            const signRes = await this.signTransaction(input);\n            const transaction = await input.transaction.toJSON();\n            const transactionBlockBytes = await getTransactionBlockBytes({\n                transaction,\n                address: this.address,\n                // @ts-expect-error input.transaction\n                txRaw: input.transaction,\n            });\n            const sendParam = {\n                bytes: transactionBlockBytes,\n                signature: signRes.signature,\n            };\n            const sendRes = await sendSuiTx(sendParam);\n            const json = JSON.stringify(sendRes.effects);\n            const effectsBytes = new TextEncoder().encode(json);\n            return {\n                digest: sendRes.digest,\n                effects: btoa(String.fromCharCode(...effectsBytes)),\n                ...signRes,\n            };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    };\n    async signMessage(_input) {\n        return await this.signPersonalMessage(_input);\n    }\n    async signPersonalMessage(_input) {\n        try {\n            const message = new TextDecoder().decode(_input.message);\n            const request = constructSignReq(this.core.clientId, {\n                chainType: \"sui\",\n                reqType: RequestTypes.signMessage,\n                address: this.address,\n                message,\n            });\n            const data = await signRequest(request, this.core);\n            if (!data || data.toLowerCase() === \"cancel\") {\n                return \"user cancel\";\n            }\n            const signMsgRes = await suiSignPersonalMessage({ message, mfa: data });\n            /** bytes: Base64 encoded message bytes */\n            return { bytes: toBase64(_input.message), signature: signMsgRes.result };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    }\n}\n","import { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { constructSignReq, constructTronTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nexport class TronProvider {\n    address = null;\n    tronWeb;\n    tronWebPromise;\n    core = null;\n    constructor() { }\n    setCore(sdk) {\n        this.core = sdk;\n    }\n    async getAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.tronAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.tronAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    }\n    async signMessage(message, privateKey) {\n        // const messageStr = new TextDecoder().decode(message);\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"tron\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            message,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signTransaction(transaction) {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const request = constructTronTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.address,\n            params: {\n                type: \"sign\",\n                transaction,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n}\n","// import { singMovementTx } from \"./apiUtils\";\nexport const movementScanUrl = \"https://explorer.movementnetwork.xyz/txn/\";\nexport const movementScanAddressUrl = \"https://explorer.movementnetwork.xyz/account/\";\nexport const mockMovementChainId = 126;\nconst rpcUrl = \"https://mainnet.movementnetwork.xyz/v1\";\nconst testnetRpcUrl = \"https://testnet.bardock.movementnetwork.xyz/v1\";\n// const rpcUrl: string = 'https://rpc.sentio.xyz/movement/v1'\n// const APTOS_COIN = '0x1::aptos_coin::AptosCoin'\n// const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n// const DEFAULT_GAS_USED = 1200;\n// const GAS_PRICE = 100;\nexport async function getAptos() {\n    const { AccountAddress, Aptos, APTOS_COIN, AptosConfig, Serializer, SimpleTransaction, Ed25519Signature, Ed25519PublicKey, AccountAuthenticatorEd25519, Network, AccountAuthenticator, } = await import(\"@aptos-labs/ts-sdk\");\n    return {\n        AccountAddress,\n        Aptos,\n        APTOS_COIN,\n        AptosConfig,\n        Serializer,\n        SimpleTransaction,\n        Ed25519Signature,\n        Ed25519PublicKey,\n        AccountAuthenticatorEd25519,\n        Network,\n        AccountAuthenticator,\n    };\n}\nexport const getAptosClient = (() => {\n    let client = null;\n    return async (isTestnet = false) => {\n        if (!client) {\n            // Setup the client\n            const { AptosConfig, Aptos, Network } = await getAptos();\n            const config = new AptosConfig(isTestnet\n                ? {\n                    fullnode: testnetRpcUrl,\n                    faucet: \"https://faucet.testnet.bardock.movementnetwork.xyz/\",\n                }\n                : {\n                    fullnode: rpcUrl,\n                    network: Network.CUSTOM,\n                });\n            client = new Aptos(config);\n        }\n        return client;\n    };\n})();\nexport const getRawTransactionFromTxn = async (txn) => {\n    const { Serializer } = await getAptos();\n    const serializer = new Serializer();\n    txn.serialize(serializer);\n    const serializedData = serializer.toUint8Array();\n    const data = Buffer.from(serializedData).toString(\"hex\");\n    return data;\n};\n/** send tx */\nexport const sendMovementTx = async ({ txn, senderAuthenticator, isTestnet = false, }) => {\n    const client = await getAptosClient(isTestnet);\n    const committedTxn = await client.transaction.submit.simple({\n        transaction: txn,\n        senderAuthenticator,\n    });\n    return committedTxn;\n};\nexport const buildAptosSignTransactionOutput = async (signRes) => {\n    try {\n        const { Ed25519Signature, Ed25519PublicKey, AccountAuthenticatorEd25519 } = await getAptos();\n        const signResObj = JSON.parse(signRes);\n        const { publicKey: publicKeyStr, sig } = signResObj;\n        const signature = new Ed25519Signature(sig);\n        const publicKey = new Ed25519PublicKey(publicKeyStr);\n        const senderAuthenticator = new AccountAuthenticatorEd25519(publicKey, signature);\n        return senderAuthenticator;\n    }\n    catch (error) {\n        throw Error(\"sign error\");\n    }\n};\n/** get tx status */\nexport const getMovementTransactionStatus = async (hash, isTestnet = false) => {\n    const client = await getAptosClient(isTestnet);\n    const executedTransaction = await client.waitForTransaction({\n        transactionHash: hash,\n    });\n    return executedTransaction;\n};\n","import { constructMovementTxReq, constructSignReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { movementSignMessage, signMovementTx } from \"../../utils/apiUtils\";\nimport { buildAptosSignTransactionOutput, getAptos, getAptosClient, getMovementTransactionStatus, getRawTransactionFromTxn, sendMovementTx, } from \"../../utils/movement\";\nvar UserResponseStatus;\n(function (UserResponseStatus) {\n    UserResponseStatus[\"APPROVED\"] = \"Approved\";\n    UserResponseStatus[\"REJECTED\"] = \"Rejected\";\n})(UserResponseStatus || (UserResponseStatus = {}));\nexport class MovementProvider {\n    address = null;\n    publicKey = null;\n    connected = false;\n    isConnected = false;\n    connection;\n    core = null;\n    chainId = 126;\n    constructor() { }\n    setCore(core) {\n        this.core = core;\n    }\n    signTransaction = async (transaction, asFeePayer) => {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const rawTransaction = await getRawTransactionFromTxn(transaction);\n        const request = constructMovementTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.address,\n            params: {\n                type: \"sign\",\n                transaction,\n                rawTransaction,\n            },\n        });\n        const data = (await signRequest(request, this.core));\n        if (!data || data.toLowerCase() === \"cancel\") {\n            throw new Error(\"Sign transaction failed.\");\n        }\n        const signRes = await signMovementTx({ rawTransaction, mfa: data });\n        console.log(\"signRes>>>\", signRes);\n        const signedTransaction = await buildAptosSignTransactionOutput(signRes.result);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: signedTransaction,\n        };\n    };\n    signMessage = async (input) => {\n        const { message, nonce } = input;\n        const fullMessage = `${message}${nonce}`;\n        // const signature = await this.signTransaction(fullMessage);\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"movement\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            message,\n        });\n        const data = await signRequest(request, this.core);\n        if (!data || data.toLowerCase() === \"cancel\") {\n            return {\n                status: UserResponseStatus.REJECTED,\n            };\n        }\n        const signMsgRes = await movementSignMessage({ message: fullMessage, mfa: data });\n        console.log(\"signature\", signMsgRes);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: {\n                address: this.address,\n                fullMessage: fullMessage,\n                message,\n                nonce,\n                prefix: \"APTOS\",\n                signature: signMsgRes.result,\n            },\n        };\n    };\n    signAndSubmitTransaction = async (transaction) => {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const data = transaction.payload;\n        const isTestnet = this.chainId === 250;\n        const client = await getAptosClient(isTestnet);\n        const { AccountAddress } = await getAptos();\n        const txn = await client.transaction.build.simple({\n            sender: AccountAddress.fromString(this.address),\n            data,\n        });\n        const senderAuthenticator = await this.signTransaction(txn);\n        const sendTx = await sendMovementTx({\n            txn,\n            senderAuthenticator: senderAuthenticator.args,\n            isTestnet: isTestnet,\n        });\n        await getMovementTransactionStatus(sendTx.hash, isTestnet);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: sendTx,\n        };\n    };\n    getAddress = async () => {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.movementAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.movementAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    };\n    switchChain = async (chainId) => {\n        this.chainId = chainId;\n    };\n    connect = async () => {\n        // TODO: connect\n    };\n    disconnect = async () => { };\n}\n","import { EthereumProvider } from \"../provider/ethereum/EthereumProvider\";\nexport var LoginAction;\n(function (LoginAction) {\n    LoginAction[\"Login\"] = \"login\";\n    LoginAction[\"Link\"] = \"link\";\n})(LoginAction || (LoginAction = {}));\nexport { EthereumProvider };\n","import axios from \"axios\";\nimport querystring from \"querystring\";\nimport { EventNames, kakaoJsKey, kakaoRedirectUri } from \"../constant\";\nimport { setXEvents, xEvents } from \"./existedEvents\";\nimport { tomoLog } from \"./log\";\nimport { LoginAction } from \"../types/types\";\nfunction shouldHandle(eventId) {\n    if (xEvents.includes(eventId))\n        return false;\n    xEvents.push(eventId);\n    return true;\n}\nfunction removeEvent(removeEventId) {\n    setXEvents(xEvents.filter((eventId) => eventId !== removeEventId));\n}\nexport const handleSignReq = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.signReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleMfaCreate = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.mfaReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleNormalReq = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.normalReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleTelegramAuth = async ({ data, action }, core) => {\n    if (!data)\n        return;\n    if (!shouldHandle(core.telegramAuthEventId))\n        return;\n    console.log(\"log in with telegram auth info\", data);\n    try {\n        let result;\n        if (action === LoginAction.Link) {\n            result = await core.linkTelegram(data);\n        }\n        else {\n            result = await core.loginByTelegram(data);\n        }\n        core.events.emit(`${EventNames.telegramAuth}#${core.telegramAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.telegramAuth}#${core.telegramAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.telegramAuthEventId);\n    }\n};\nexport const handleGoogleAuth = async ({ data, action }, core) => {\n    if (!data?.code)\n        return;\n    if (!shouldHandle(core.googleAuthEventId))\n        return;\n    try {\n        let result;\n        if (action === LoginAction.Link) {\n            result = await core.linkGoogle(data.code);\n        }\n        else {\n            result = await core.loginByGoogle(data.code);\n        }\n        core.events.emit(`${EventNames.googleAuth}#${core.googleAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.googleAuth}#${core.googleAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.googleAuthEventId);\n    }\n};\nexport const handleTwitterAuth = async ({ data, action }, core) => {\n    if (!data)\n        return;\n    if (!shouldHandle(data.eventId))\n        return;\n    tomoLog.debug(\"xEvents:\", xEvents);\n    try {\n        if (data?.code) {\n            let result;\n            if (action === LoginAction.Link) {\n                result = await core.linkTwitter(data.code);\n            }\n            else {\n                result = await core.loginByTwitter(data.code);\n            }\n            core.events.emit(`${EventNames.xAuth}#${data.eventId}`, result);\n        }\n        else if (data?.error) {\n            core.events.emit(`${EventNames.xAuth}#${data.eventId}`, false);\n        }\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.xAuth}#${data.eventId}`, false);\n    }\n    finally {\n        removeEvent(data.eventId);\n    }\n};\nexport const handleKakaoAuth = async ({ data }, core) => {\n    if (!data.code)\n        return;\n    if (!shouldHandle(core.kakaoAuthEventId))\n        return;\n    const postData = querystring.stringify({\n        grant_type: \"authorization_code\",\n        client_id: kakaoJsKey,\n        redirect_uri: kakaoRedirectUri,\n        code: data.code,\n    });\n    try {\n        const resp = await axios.post(\"https://kauth.kakao.com/oauth/token\", postData, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        });\n        if (!resp?.data?.access_token) {\n            console.error(\"kakao access_token is empty\");\n            throw new Error(\"access_token is empty\");\n        }\n        console.log(\"log in with kakao code\");\n        const result = await core.loginByKakao(resp.data.access_token);\n        core.events.emit(`${EventNames.kakaoAuth}#${core.kakaoAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.kakaoAuth}#${core.kakaoAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.kakaoAuthEventId);\n    }\n};\n","import { relayMessageTypes, relayOrigin } from \"../constant\";\nimport { tomoLog } from \"./log\";\nimport { handleGoogleAuth, handleKakaoAuth, handleMfaCreate, handleNormalReq, handleSignReq, handleTelegramAuth, handleTwitterAuth, } from \"./handlerMessage\";\nconst handlerMap = {\n    [relayMessageTypes.signReq]: handleSignReq,\n    [relayMessageTypes.mfaCreate]: handleMfaCreate,\n    [relayMessageTypes.normalReq]: handleNormalReq,\n    [relayMessageTypes.telegramAuth]: handleTelegramAuth,\n    [relayMessageTypes.googleAuth]: handleGoogleAuth,\n    [relayMessageTypes.xAuth]: handleTwitterAuth,\n    [relayMessageTypes.kakaoAuth]: handleKakaoAuth,\n};\nexport const messageProcessor = ({ origin, data: { type, data, action } }, core) => {\n    tomoLog.debug(\"messageProcessor:\", origin, type, data, action, core.relayBase);\n    if (origin !== core.relayBase && origin !== relayOrigin) {\n        return;\n    }\n    const handler = handlerMap[type];\n    if (handler) {\n        handler({ data, action }, core);\n    }\n};\n","import { Connection, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, createAssociatedTokenAccountInstruction, createTransferInstruction, getAccount, getAssociatedTokenAddress, TOKEN_PROGRAM_ID, TokenAccountNotFoundError, TokenInvalidAccountOwnerError, } from \"@solana/spl-token\";\nimport BN from \"bn.js\";\nlet connection;\nexport const solDecimals = 9;\nexport const solTokenName = \"SOL\";\nexport const solEndpoint = \"https://rpc.ankr.com/solana/c2d7e8a3db5dce62e202db3d28cca25e74da5028abbf20764e2961918ba34dfc\";\nexport function getConnection() {\n    if (connection) {\n        return connection;\n    }\n    connection = new Connection(solEndpoint, \"finalized\");\n    return connection;\n}\nexport async function getSolFees() {\n    try {\n        const conn = getConnection();\n        const { feeCalculator } = await conn.getLatestBlockhash();\n        return { totalFee: feeCalculator.lamportsPerSignature.toString() };\n    }\n    catch (e) {\n        return { totalFee: \"0\" };\n    }\n}\nexport async function createSolTx(fromAddress, toAddress, amount, mintAddress) {\n    try {\n        getConnection();\n        const tx = new Transaction();\n        const fromPublicKey = new PublicKey(fromAddress);\n        const toPublicKey = new PublicKey(toAddress);\n        if (!tx.feePayer) {\n            tx.feePayer = fromPublicKey;\n        }\n        if (mintAddress) {\n            const tokenPublicKey = new PublicKey(mintAddress);\n            const fromTokenPubKey = await getAssociatedTokenAddress(tokenPublicKey, new PublicKey(fromAddress));\n            const toTokenPubKey = await getAssociatedTokenAddress(tokenPublicKey, new PublicKey(toAddress));\n            tx.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n            let account;\n            try {\n                account = await getAccount(connection, toTokenPubKey);\n            }\n            catch (error) {\n                if (error instanceof TokenAccountNotFoundError || error instanceof TokenInvalidAccountOwnerError) {\n                    try {\n                        tx.add(createAssociatedTokenAccountInstruction(fromPublicKey, toTokenPubKey, toPublicKey, tokenPublicKey));\n                    }\n                    catch (error) { }\n                }\n                else {\n                    throw error;\n                }\n            }\n            console.log(\"account\", account);\n            tx.add(createTransferInstruction(fromTokenPubKey, toTokenPubKey, fromPublicKey, amount, [], TOKEN_PROGRAM_ID));\n        }\n        else {\n            tx.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n            tx.add(SystemProgram.transfer({\n                fromPubkey: fromPublicKey,\n                toPubkey: toPublicKey,\n                lamports: amount,\n            }));\n        }\n        return tx;\n    }\n    catch (e) {\n        return null;\n    }\n}\n/**\n * Parses a Solana transaction and extracts relevant information.\n *\n * @param transaction The Solana transaction to parse.\n * @returns An object containing the transaction's from address, to address, amount, and mint address (if applicable).\n */\nexport async function parseSolTx(transaction) {\n    let from = \"\";\n    let to = \"\";\n    let value = 0;\n    let mintAddress;\n    const connection = getConnection();\n    console.log(\"parseSolTx\", transaction);\n    // 优先处理代币转账指令\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(TOKEN_PROGRAM_ID) && instruction.data[0] === 3) {\n            const amountData = instruction.data.slice(1, 9);\n            value = Number(new BN(amountData, \"le\"));\n            // 获取源和目标代币账户\n            const fromTokenAccount = instruction.keys[0]?.pubkey;\n            const toTokenAccount = instruction.keys[1]?.pubkey;\n            try {\n                // 查询目标代币账户信息\n                const toAccount = await getAccount(connection, toTokenAccount);\n                mintAddress = toAccount.mint.toString();\n                to = toAccount.owner.toString(); // 实际接收方钱包地址\n            }\n            catch (error) {\n                console.warn(\"Failed to get token account:\", error);\n            }\n            // 查询源代币账户信息（备用）\n            if (!from && fromTokenAccount) {\n                try {\n                    const fromAccount = await getAccount(connection, fromTokenAccount);\n                    from = fromAccount.owner.toString();\n                }\n                catch (error) {\n                    console.warn(\"Failed to get source token account:\", error);\n                }\n            }\n        }\n    }\n    // 处理关联账户创建指令\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(ASSOCIATED_TOKEN_PROGRAM_ID)) {\n            const mintKey = instruction.keys[3]?.pubkey;\n            const ownerKey = instruction.keys[2]?.pubkey;\n            if (mintKey && ownerKey) {\n                mintAddress = mintKey.toString();\n                to = ownerKey.toString();\n            }\n        }\n    }\n    // 处理SOL转账\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(SystemProgram.programId) && instruction.data[0] === 2) {\n            const fromPubkey = instruction.keys[0]?.pubkey.toString();\n            const toPubkey = instruction.keys[1]?.pubkey.toString();\n            const lamportsData = instruction.data.slice(4);\n            value = Number(new BN(lamportsData, \"le\"));\n            from = fromPubkey;\n            to = toPubkey;\n        }\n    }\n    console.log(\"parseSolTx.result\", { from, to, value, mintAddress });\n    return { from, to, value, mintAddress };\n}\n","import EventEmitter from \"eventemitter3\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { mainnet } from \"viem/chains\";\nimport { EventNames, kakaoJsKey, kakaoRedirectUri, redirectUri, redirectUriForX, relayOrigin, relayOriginDev, xLoaderUrl, } from \"./constant\";\nimport { BitcoinProvider } from \"./provider/bitcoin/BitcoinProvider\";\nimport { EthereumProvider } from \"./provider/ethereum/EthereumProvider\";\nimport { SolanaProvider } from \"./provider/solana/SolanaProvider\";\nimport { SuiProvider } from \"./provider/sui/SuiProvider\";\n// import { TonProvider } from \"./provider/ton/TonProvider\";\nimport { TronProvider } from \"./provider/tron/TronProvider\";\nimport { MovementProvider } from \"./provider/movement/MovementProvider\";\nimport { LoginAction, } from \"./types/types\";\nimport { addUserWalletToken, BASE_PROD_URL, BASE_TEST_URL, bindEmailCode, bindEmailCodeVerify, bindInviter, dashboardTokens, defaultTokens, emailCheck, getCustomization, getLinkSocialInfo, getPrice, getSocialInfo, getSwapTokenList, getUserIdWithClientId, hasEmail, holdEvmTokens, holdSolTokens, linkSocialAccount, loginByGmail, loginByKakao, loginByTelegram, loginByX, loginCode, loginVerify, mfaPKExisted, removeUserWalletToken, sendRegister, setApi, tokenSearch, tradePaswordStatus, updateUserWalletTokens, userWalletTokens, verifyRegister, } from \"./utils/apiUtils\";\nimport { checkPopupClosed, mfaRequest, normalRequest, setIframeToken, walletRequest } from \"./utils/communicator\";\nimport getFaviconUrl from \"./utils/getFaviconUrl\";\nimport { getEmailReq, getLocalPasskey, getLocalToken, removeEmailReq, removeLocalLoginType, removeLocalToken, removeLocalUserId, setEmailReq, setLocalLoginType, setLocalToken, setLocalUserId, } from \"./utils/LocalstorageUtils\";\nimport { setLogLevel, tomoLog } from \"./utils/log\";\nimport { messageProcessor } from \"./utils/messageProcessor\";\nimport { clearUserInfo, getUserInfoFromLocalFirst } from \"./utils/utils\";\nimport { openWindow, relayWindowList } from \"./utils/windowUtils\";\nimport { WebWalletInvokeType } from \"@tomo-inc/shared-type\";\nimport * as sharedType from \"@tomo-inc/shared-type\";\nexport { BitcoinProvider } from \"./provider/bitcoin/BitcoinProvider\";\nexport * from \"./types/types\";\nexport { EthereumProvider } from \"./provider/ethereum/EthereumProvider\";\nconst BASE_RELAY_TEST_URL = relayOriginDev;\nconst BASE_RELAY_PROD_URL = relayOrigin;\nexport { BASE_PROD_URL, BASE_RELAY_PROD_URL, BASE_RELAY_TEST_URL, BASE_TEST_URL };\nexport { SolanaProvider } from \"./provider/solana/SolanaProvider\";\nexport { SuiProvider } from \"./provider/sui/SuiProvider\";\n// export { TonProvider } from \"./provider/ton/TonProvider\";\nexport { TronProvider } from \"./provider/tron/TronProvider\";\nexport { MovementProvider } from \"./provider/movement/MovementProvider\";\nexport { setHeaders } from \"./utils/apiUtils\";\nexport { createSolTx, getConnection as getSolConnection, parseSolTx } from \"./utils/sol\";\nconst loginTypes = [\"google\", \"twitter\", \"kakao\", \"telegram\"];\nconst walletDomainProd = \"https://tomotg.tomo.inc\";\nexport class TomoSDK {\n    connectUrl = BASE_PROD_URL;\n    relayBase = relayOrigin;\n    events = new EventEmitter();\n    clientId = \"\";\n    chainConfig = {\n        chainId: 1,\n        rpcUrl: mainnet.rpcUrls.default.http[0],\n    };\n    ethereumProvider;\n    bitcoinProvider;\n    solanaProvider;\n    // tonProvider: TonProvider;\n    // suiProvider: SuiProvider;\n    tronProvider;\n    movementProvider;\n    suiProvider;\n    googleAuthEventId = \"\" + Date.now();\n    kakaoAuthEventId = \"\" + Date.now();\n    telegramAuthEventId = \"\" + Date.now();\n    walletDomain;\n    constructor({ clientId, connect, relayBase, ethereumProvider, walletDomain }) {\n        if (!clientId) {\n            throw new Error(\"clientId is required\");\n        }\n        this.clientId = clientId;\n        this.connectUrl = connect || BASE_PROD_URL;\n        this.relayBase = relayBase || relayOrigin;\n        this.walletDomain = walletDomain || walletDomainProd;\n        if (ethereumProvider) {\n            this.ethereumProvider = ethereumProvider;\n            this.ethereumProvider.setCore(this);\n        }\n        this._initialize();\n        if (typeof window !== \"undefined\")\n            window.onmessage = this.msgProcessor.bind(this);\n    }\n    _initialize() {\n        setApi(this);\n        setLogLevel(\"silent\");\n        tomoLog.debug(\"relay base url:\", this.relayBase);\n        this.solanaProvider = new SolanaProvider();\n        this.solanaProvider.setCore(this);\n        this.tronProvider = new TronProvider();\n        this.tronProvider.setCore(this);\n        this.movementProvider = new MovementProvider();\n        this.movementProvider.setCore(this);\n        this.suiProvider = new SuiProvider();\n        this.suiProvider.setCore(this);\n        this.bitcoinProvider = new BitcoinProvider();\n        this.bitcoinProvider.setCore(this);\n        if (!this.ethereumProvider) {\n            this.ethereumProvider = new EthereumProvider();\n            this.ethereumProvider.setCore(this);\n        }\n    }\n    msgProcessor({ origin, data: { type, data, action } }) {\n        console.log(\"msgProcessor\", { origin, data: { type, data, action } });\n        return messageProcessor({ origin, data: { type, data, action } }, this);\n    }\n    login(type, options = {}) {\n        if (!loginTypes.includes(type)) {\n            throw new Error(`Unsupported login type: ${type}`);\n        }\n        const action = options?.action || LoginAction.Login;\n        const origin = window.location.origin;\n        if (type === \"google\") {\n            return new Promise((resolve, reject) => {\n                const stateParam = JSON.stringify({ origin, action });\n                const encodedState = encodeURIComponent(stateParam);\n                const popup = openWindow({\n                    url: `https://accounts.google.com/o/oauth2/v2/auth?response_type=id_token&client_id=479465761311-5da6b2ic7io7odr9jnrldai20046vk4t.apps.googleusercontent.com&scope=openid&access_type=offline&state=${encodedState}&nonce=testnonce&prompt=select_account&redirect_uri=${redirectUri}`,\n                    name: action === LoginAction.Link ? \"Link Google\" : \"Google login\",\n                });\n                const googleAuthListener = async (data) => {\n                    tomoLog.debug(\"google login data:\", data, action);\n                    console.log(\"google login dataqqq:\", data, action);\n                    if (data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                };\n                this.googleAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.googleAuth, this.googleAuthEventId);\n                this.events.once(`${EventNames.googleAuth}#${this.googleAuthEventId}`, googleAuthListener);\n            });\n        }\n        if (type === \"twitter\") {\n            return new Promise((resolve, reject) => {\n                const xAuthListener = (data) => {\n                    if (data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                };\n                const name = action === LoginAction.Link ? \"Link X\" : \"X login\";\n                const eventName = EventNames.xAuth;\n                const listenerFn = xAuthListener;\n                const eventId = uuidv4();\n                const popup = openWindow({\n                    url: `${xLoaderUrl}?target=${origin}&eventId=${eventId}&action=${action}`,\n                    name,\n                    // width: 800,\n                });\n                checkPopupClosed(popup, this.events, eventName, eventId);\n                this.events.once(`${eventName}#${eventId}`, listenerFn);\n            });\n        }\n        if (type === \"kakao\") {\n            return new Promise((resolve, reject) => {\n                const popup = openWindow({\n                    url: `https://kauth.kakao.com/oauth/authorize?client_id=${kakaoJsKey}&redirect_uri=${encodeURIComponent(kakaoRedirectUri)}&response_type=code`,\n                    name: \"Kakao Login\",\n                    width: 800,\n                });\n                this.kakaoAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.kakaoAuth, this.kakaoAuthEventId);\n                this.events.once(`${EventNames.kakaoAuth}#${this.kakaoAuthEventId}`, (data) => {\n                    tomoLog.debug(\"kakao login data:\", data);\n                    if (data)\n                        resolve(true);\n                    else\n                        reject(false);\n                });\n            });\n        }\n        if (type === \"telegram\") {\n            return new Promise((resolve, reject) => {\n                const popup = openWindow({\n                    url: `${this.relayBase}/telegram?action=${action}`,\n                    name: action === LoginAction.Link ? \"Link Telegram\" : \"Telegram Login\",\n                });\n                this.telegramAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.telegramAuth, this.telegramAuthEventId);\n                this.events.once(`${EventNames.telegramAuth}#${this.telegramAuthEventId}`, (data) => {\n                    tomoLog.debug(\"telegram login data:\", data);\n                    if (data)\n                        resolve(true);\n                    else\n                        reject(false);\n                });\n            });\n        }\n    }\n    linkSocial(type) {\n        return this.login(type, { action: LoginAction.Link });\n    }\n    async getLinkSocialInfo() {\n        const data = await getLinkSocialInfo();\n        if (!data.result) {\n            throw new Error(\"get linked social info failed\");\n        }\n        return data.result;\n    }\n    async loginByGoogle(code) {\n        try {\n            const data = await loginByGmail(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"google\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkGoogle(code) {\n        try {\n            const data = await linkSocialAccount({ googleCode: code });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByKakao(code) {\n        try {\n            const data = await loginByKakao(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"kakao\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByTelegram(authData) {\n        try {\n            const data = await loginByTelegram(authData, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"telegram\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkTelegram(authData) {\n        try {\n            const data = await linkSocialAccount({ telegramAuthData: authData });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByTwitter(code) {\n        try {\n            const data = await loginByX(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"twitter\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkTwitter(code) {\n        try {\n            const data = await linkSocialAccount({ twitterCode: code, twitterRedirectUri: redirectUriForX });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async sendCode(email) {\n        try {\n            const checkResp = await emailCheck(email);\n            if (checkResp.result) {\n                // sign up\n                await sendRegister(email, this.clientId);\n                const req = {\n                    type: \"signup\",\n                    email,\n                };\n                setEmailReq(JSON.stringify(req));\n            }\n            else {\n                // sign in\n                await loginCode(email, this.clientId);\n                const req = {\n                    type: \"signin\",\n                    email,\n                };\n                setEmailReq(JSON.stringify(req));\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async verifyCode(code) {\n        try {\n            const req = getEmailReq();\n            if (!req || !req.email || (req.type !== \"signup\" && req.type !== \"signin\")) {\n                throw new Error(\"Invalid request\");\n            }\n            let resp;\n            if (req.type === \"signup\") {\n                resp = await verifyRegister(req.email, code, this.clientId);\n            }\n            else {\n                resp = await loginVerify(req.email, code, this.clientId);\n            }\n            const token = resp.result.token;\n            const userId = resp.result?.userInfoDTO?.id;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"email\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    handleLoginByEmailSuccess(token) {\n        setLocalToken(this.clientId, token);\n        removeEmailReq();\n        clearUserInfo();\n    }\n    async getEthAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.clientId);\n            if (!data.result) {\n                throw new Error(\"Get address failed.\");\n            }\n            return data.result.evmAddress;\n        }\n        catch (e) {\n            console.error(e);\n            return null;\n        }\n    }\n    async getPrices(tokenSymbols) {\n        try {\n            const data = await getPrice(tokenSymbols);\n            return data.result;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    async logout() {\n        removeLocalToken(this.clientId);\n        removeLocalUserId(this.clientId);\n        removeLocalLoginType(this.clientId);\n        removeEmailReq();\n        clearUserInfo();\n    }\n    async tradePaswordStatus() {\n        try {\n            const data = await tradePaswordStatus();\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to send bind email code\");\n        }\n    }\n    async requestAccounts(chainType) {\n        try {\n            const dashboardConfig = await this.getCustomization();\n            const projectName = dashboardConfig?.theme?.projectName;\n            const icon = getFaviconUrl();\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                icon,\n                projectName,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"requestAccounts\",\n                chainType: chainType || \"evm\",\n            };\n            const result = await normalRequest(req, this);\n            await setIframeToken(this);\n            return result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to request accounts\", e);\n        }\n    }\n    async verifyLoginEmail(email) {\n        const sendReq = getEmailReq();\n        if (!sendReq || !sendReq.email || (sendReq.type !== \"signup\" && sendReq.type !== \"signin\")) {\n            throw new Error(\"Invalid request\");\n        }\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"verifyLoginEmail\",\n                email: email,\n                clientId: this.clientId,\n                type: sendReq.type,\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to get code\");\n        }\n    }\n    async setPayPinAndEmail() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"setPayPinAndEmail\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to set pay pin\");\n        }\n    }\n    async setPayPin() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"setPayPin\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to set pay pin\");\n        }\n    }\n    async changePayPin() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"changePayPin\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to change pay pin\");\n        }\n    }\n    async bindEmail() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"bindEmail\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to bind Email\");\n        }\n    }\n    async addRecoveryEmail(type) {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"addRecoveryEmail\",\n                type,\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to add recovery Email\");\n        }\n    }\n    async hasEmail() {\n        try {\n            const data = await hasEmail();\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get result\");\n        }\n    }\n    async bindEmailCode(email) {\n        try {\n            const data = await bindEmailCode(email);\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to send bind email code\");\n        }\n    }\n    async bindEmailCodeVerify(email, code) {\n        try {\n            const data = await bindEmailCodeVerify(email, code);\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to verify bind email code\");\n        }\n    }\n    async getDefaultTokens() {\n        try {\n            const data = await defaultTokens();\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get default tokens\");\n        }\n    }\n    async getDashboardTokens(clientId, chainId) {\n        try {\n            const data = await dashboardTokens(clientId, chainId);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get default tokens\");\n        }\n    }\n    async searchToken(content) {\n        try {\n            const data = await tokenSearch(content);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to search token\");\n        }\n    }\n    async getHoldEvmTokens(address) {\n        try {\n            const data = await holdEvmTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get hold evm tokens\");\n        }\n    }\n    async getHoldSolTokens(address) {\n        try {\n            const data = await holdSolTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get hold solana tokens\");\n        }\n    }\n    async getUserWalletTokens(address) {\n        try {\n            const data = await userWalletTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get tokens\");\n        }\n    }\n    async userWalletTokensUpdate(tokens) {\n        try {\n            const data = await updateUserWalletTokens(tokens);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to update tokens\");\n        }\n    }\n    async userWalletTokenAdd(token, walletAddress) {\n        try {\n            const data = await addUserWalletToken(token, walletAddress);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to add token\");\n        }\n    }\n    async userWalletTokenRemove(token, walletAddress) {\n        try {\n            const data = await removeUserWalletToken(token, walletAddress);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to remove token\");\n        }\n    }\n    async createPasskey() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"passkey\",\n            };\n            return await mfaRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to create passkey\");\n        }\n    }\n    async getPasskeyStatus() {\n        try {\n            const evmAddress = await this.getEthAddress();\n            const localPasskeyStatus = getLocalPasskey(evmAddress);\n            const existedRomte = await mfaPKExisted();\n            return {\n                localCreated: localPasskeyStatus,\n                remoteExised: existedRomte.result,\n            };\n        }\n        catch (e) {\n            throw new Error(\"Failed to get passkey status\");\n        }\n    }\n    async getJwtToken() {\n        try {\n            const result = await getAuth(this);\n            return result;\n        }\n        catch (error) {\n            throw new Error(\"Failed to get jwt token\");\n        }\n    }\n    async getUserSocialInfo() {\n        try {\n            const ret = await getSocialInfo();\n            // create in 3 min and inviterBound is false\n            const inviterBound = ret.result?.inviterBound;\n            const currentTime = Date.now();\n            const threeMinutes = 3 * 60 * 1000;\n            const isInThreeMinutes = currentTime - ret?.result?.createTime <= threeMinutes;\n            const isNewUser = !inviterBound && isInThreeMinutes;\n            if (isNewUser) {\n                const ownerUid = await getUserIdWithClientId(this.clientId);\n                !!ownerUid.result && bindInviter(ownerUid.result);\n            }\n            return ret.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get user social info\");\n        }\n    }\n    // deprecated\n    // async twitterBind(): Promise<boolean> {\n    //   try {\n    //     const { code, callback } = await this.login(\"twitter\", { isXBind: true });\n    //     const res = await bindX(code);\n    //     if (typeof callback === \"function\") callback();\n    //     return res.result;\n    //   } catch (e) {\n    //     throw new Error(\"Failed to twitter bind\");\n    //   }\n    // }\n    async getSwapTokens(chain) {\n        try {\n            const data = await getSwapTokenList(chain);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get swap tokens\");\n        }\n    }\n    async getCustomization() {\n        const checkResp = await getCustomization(this.clientId);\n        return checkResp.result;\n    }\n    static async getCustomization(clientId) {\n        const checkResp = await getCustomization(clientId);\n        return checkResp.result;\n    }\n    async onboarding(params) {\n        try {\n            console.log(\"sharedType.WebWalletInvokeType\", sharedType.WebWalletInvokeType);\n            console.log(\"WebWalletInvokeType\", WebWalletInvokeType);\n            return await walletRequest(WebWalletInvokeType.ONBOARDING, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to onboarding: \" + e);\n        }\n    }\n    async openSwap(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.SWAP, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to swap: \" + e);\n        }\n    }\n    async openChangePayPin(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.CHANGE_PAY_PIN, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to change pay pin: \" + e);\n        }\n    }\n    async openOnramp(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.ONRAMP, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to onramp: \" + e);\n        }\n    }\n    async openSend(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.SEND, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to send: \" + e);\n        }\n    }\n    async openReceive(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.RECEIVE, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to receive: \" + e);\n        }\n    }\n    closeAllRelayWindow() {\n        relayWindowList.forEach((win) => win?.close());\n        relayWindowList.length = 0;\n    }\n    handleWebWalletInvoke = async (type, params) => {\n        try {\n            this.closeAllRelayWindow();\n            switch (type) {\n                case WebWalletInvokeType.ONRAMP:\n                    this.openOnramp(params);\n                    break;\n                case WebWalletInvokeType.SWAP:\n                    this.openSwap(params);\n                    break;\n                case WebWalletInvokeType.SEND:\n                    this.openSend(params);\n                    break;\n                case WebWalletInvokeType.RECEIVE:\n                    this.openReceive(params);\n                    break;\n                case WebWalletInvokeType.CHANGE_PAY_PIN:\n                    this.openChangePayPin(params);\n                    break;\n            }\n        }\n        catch (e) {\n            console.log(\"handleAction error:\", e);\n        }\n    };\n}\n","function getFaviconUrl() {\n    const links = document.getElementsByTagName(\"link\");\n    for (let i = 0; i < links.length; i++) {\n        if (links[i].rel === \"icon\" || links[i].rel === \"shortcut icon\") {\n            return links[i].href;\n        }\n    }\n    return null;\n}\nexport default getFaviconUrl;\n"],"names":["defineChain","chain","formatters","undefined","fees","serializers","version","errorConfig","docsBaseUrl","docsPath","docsSlug","BaseError","Error","constructor","shortMessage","args","details","cause","message","docsUrl","super","metaMessages","join","Object","defineProperty","this","enumerable","configurable","writable","value","name","walk","fn","err","IntegerOutOfRangeError","max","min","signed","size","SizeOverflowError","givenSize","maxSize","isHex","strict","test","startsWith","Math","ceil","length","trim","hexOrBytes","dir","data","replace","sliceLength","i","slice","SliceOffsetOutOfBoundsError","offset","position","SizeExceedsPaddingSizeError","targetSize","type","charAt","toUpperCase","toLowerCase","pad","hex_","hex","padHex","bytes","paddedBytes","Uint8Array","padEnd","padBytes","hexes","Array","from","_v","toString","padStart","toHex","opts","numberToHex","value_","encoder","encode","bytesToHex","stringToHex","Number","assertSize","boolToHex","string","BigInt","maxValue","MAX_SAFE_INTEGER","minValue","suffix","TextEncoder","toBytes","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","size_","hexToBigInt","hexToNumber","defineFormatter","format","exclude","overrides","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","chainId","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","typeHex","v","authorizationList","map","authorization","address","r","s","yParity","accessList","defineTransaction","formatBlock","block","transactions","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","timestamp","totalDifficulty","defineBlock","formatLog","log","eventName","logIndex","transactionHash","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","request","rpcRequest","blobVersionedHashes","blobs","x","defineTransactionRequest","maxUint256","gasPerPubdataDefault","maxBytecodeSize","maxUint16","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","sender","transactionRequest","gasPerPubdata","paymaster","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","concatHex","values","reduce","acc","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","assertReadLimit","assertPosition","decrementPosition","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","set","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatEther","unit","formatGwei","prettyPrint","entries","filter","Boolean","maxLength","FeeConflictError","InvalidLegacyVError","InvalidSerializableTransactionError","InvalidStorageKeySizeError","storageKey","floor","blobsToCommitments","parameters","kzg","commitments","blob","push","blobToKzgCommitment","blobsToProofs","proofs","computeBlobKzgProof","anumber","n","isSafeInteger","abytes","b","lengths","isView","includes","aexists","instance","checkFinished","destroyed","finished","aoutput","out","outputLen","u32","arr","Uint32Array","clean","arrays","fill","createView","rotr","word","shift","isLE","byteSwap","swap8IfBE","swap32IfBE","u","str","utf8ToBytes","Hash","createHasher","hashCons","hashC","msg","update","digest","tmp","blockLen","Maj","c","HashMD","padOffset","pos","view","len","take","process","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","l","oview","outLen","state","res","destroy","_cloneInto","clone","SHA256_IV","U32_MASK64","fromBig","le","h","SHA256_K","SHA256_W","SHA256","B","C","D","E","G","H","W15","W2","s0","s1","T1","T2","sha256","to_","noble_sha256","commitmentToVersionedHash","commitment","versionedHash","fieldElementsPerBlob","bytesPerBlob","bytesPerFieldElement","maxBytesPerTransaction","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","active","toBlobs","sidecars","proof","InvalidAddressError","InvalidChainIdError","ExecutionRevertedError","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","LruMap","has","delete","firstKey","keys","next","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","y","t","IOTAS","lst","Ah","Al","split","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","finish","writeInto","bufferOut","xofInto","xof","keccak_256","gen","checksumAddressCache","checksumAddress","address_","hexAddress","substring","result","addressRegex","isAddressCache","isAddress","options","cacheKey","start","end","assertEndOffset","sliceHex","sliceBytes","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","serializeTransaction","signature","getTransactionType","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionEIP7702","serializedAuthorizationList","serializeAuthorizationList","serializeTransactionEIP7702","assertTransactionLegacy","serializeTransactionLegacy","signature_","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","serializeTransaction_","BytecodeLengthExceedsMaxSizeError","givenLength","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","chainConfig","custom","getEip712Domain","txType","gasPerPubdataByteLimit","bytecode","bytecodeBytes","bytecodeLengthInWords","bytecodeLengthPadded","codeHashVersion","hashBytecode","transactionToMessage","domain","types","Transaction","primaryType","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","contracts","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","arbitrum","id","nativeCurrency","symbol","rpcUrls","default","http","blockExplorers","url","apiUrl","multicall3","blockCreated","aurora","avalanche","sourceId","base","disputeGameFactory","sourceId$7","l2OutputOracle","portal","l1StandardBridge","baseSepolia","network","sourceId$6","testnet","berachainTestnetbArtio","ensRegistry","ensUniversalResolver","ensTlds","bevmMainnet","blast","bob","webSocket","sourceId$4","bsc","bscTestnet","chiliz","cronos","fantom","gnosis","parseAccount","account","AccountNotFoundError","prettyStateMapping","stateMapping","pretty","slot","CallExecutionError","account_","stateOverride","prettyArgs","val","balance","code","stateDiff","prettyStateOverride","getCallError","executionRevertedError","e","nodeMessage","getNodeError","extract","extract_","async","estimateGas","client","blockTag","rest","assertRequest","chainFormat","priorityFeePerGas","method","params","estimateFeesPerGas","multiply","response","linea","mainnet","manta","mantaTestnet","mantle","merlin","mode","sourceId$3","opBNB","sourceId$2","optimism","sourceId$1","palm","polygon","polygonZkEvm","satoshiVM","scroll","sei","sepolia","storyAeneid","taiko","xLayer","zetachain","zkLinkNova","zksync","native","universalSignatureVerifier","zora","relayOrigin","redirectUriForX","xLoaderUrl","kakaoJsKey","kakaoRedirectUri","redirectUri","relayMessageTypes","googleAuth","xAuth","signReq","normalReq","mfaCreate","kakaoAuth","telegramAuth","EventNames","RequestTypes","xEvents","tomoLog","getLogger","LOCAL_EMAIL_LOGIN_REQ","TOMO_CACHE","getTomoCache","cache","localStorage","getItem","JSON","parse","setCacheField","clientId","setItem","stringify","error","setTomoCache","globalTokenStore","getLocalToken","setLocalToken","token","getLocalUserId","cacheObj","userId","setLocalUserId","getLocalLoginType","loginType","setLocalLoginType","setLocalPasskey","evmAddress","localPasskey","getEmailReq","req","setEmailReq","removeEmailReq","removeItem","userInfo","getUserInfoFromLocalFirst","debug","getUserInfoFromRemote","clearUserInfo","strToBase64","binString","String","fromCodePoint","btoa","constructSignReq","reqType","chainType","addressType","signMessageType","eventId","uuidv4","origin","window","location","accessToken","signInfo","constructBtcTxReq","txMeta","txParams","constructSolTxReq","relayWindowList","openWindow","width","height","top","innerHeight","screenY","left","innerWidth","screenX","currentWindow","href","relyWindow","open","createModalIframe","modalIframe","closed","existed","document","getElementById","remove","originalMeta","querySelector","originalMetaContent","getAttribute","originalBodyStyle","overflow","body","style","isMobileDevice","navigator","userAgent","overlay","createElement","cssText","container","iframe","setAttribute","allow","src","onload","opacity","meta","content","head","appendChild","cleanup","currentMeta","messageHandler","event","removeEventListener","addEventListener","target","checkPopupClosed","popupPromise_ish","events","popup","checkInterval","setInterval","currentClosedWindowIndex","findIndex","win","splice","find","emit","eventNames","clearInterval","signRequest","core","reqString","JSONBig","setTemporaryData","Promise","resolve","reject","relayBase","once","handleMessage","isSuccess","onSuccess","isError","onError","isReject","onReject","setAuth","jwt","auth","postMessage","normalRequest","msgHandler","bind","walletRequest","walletDomain","BASE_PROD_URL","api","baseUrl","setApi","connectUrl","baseURL","axios","interceptors","use","config","contentWindow","isFail","removeChild","getAuth","headers","Authorization","linkSocialAccount","post","getUserInfo","getCustomization","catch","btcChains","ticker","apiBlockstream","signet","AddressType","AddressTypeMap","P2PKH","P2WPKH","P2TR","P2SH","networkMap","addressInfos","label","displayName","hdPath","P2SH_P2WPKH","BitcoinProvider","EventEmitter","pubKey","setCore","getAccounts","getAddress","btcMainnetAddressInfo","btcTestnetAddressInfo","getPublicKey","getPublicKeyHex","getAllAddresses","info","addressInfo","sendBitcoin","satAmount","feeRate","amount","fromAddress","signPsbt","psbtHex","signPsbts","psbtHexs","signMessageBIP322","signMessageEcdsa","signMessage","_type","getNetwork","getAddressType","switchNetwork","changeAddressType","on","callBack","off","getBalance","btcAddress","btcRes","maxRedirects","getBalanceFromNode","chain_stats","mempool_stats","funded_txo_sum","spent_txo_sum","getFeeRate","networkType","getBtcFeeRate","pushTx","txHex","rawTransaction","pushBtcTx","getInscriptionData","getBtcInscriptionData","getInscriptionInfo","insId","getBtcInscriptionInfo","allChains","zkSync","logo","chainName","nativeCurrencyName","nativeCurrencySymbol","nativeCurrencyDecimals","blockExplorerUrl","platformType","icon","supportSwap","supportGift","supportHistory","walletActions","eth_requestAccounts","eth_accounts","wallet_watchAsset","eth_addEthereumChain","eth_switchEthereumChain","wallet_switchEthereumChain","personal_sign","eth_signTypedData_v4","wallet_getPermissions","wallet_requestPermissions","eth_sendTransaction","eth_sendRawTransaction","personal_ecRecover","eth_swapTransaction","eth_approveTransaction","eth_chainId","LsChainIdKey","EthereumProvider","jsonRpcProvider","chainList","chainListFromCDN","instanceId","initialPromise","Date","now","initial","chainIdDecimal","getChainConfig","JsonRpcProvider","HttpConnection","rpcUrl","connect","getChain","getChainListFromCDN","chainObj","getTomoChains","item","connection","context","processWalletAction","isNaN","chainIdHex","requestAddresses","getAddresses","signTypedData","sendTransaction","sendRawTransaction","switchChain","recoverMessageAddress","swapTransaction","approveTransaction","sendAsync","payload","callback","then","getChainId","chainIdNum","setChainConfig","getEthAddress","constructTxReq","SolanaProvider","publicKey","connected","isConnected","endpoint","solAddress","PublicKey","toBase58","signTransaction","getTransactionHex","messageStr","TextDecoder","decode","Connection","disconnect","serializeMessage","tx","feePayer","conn","recentBlockhash","getLatestBlockhash","blockhash","getRecentBlockhash","serialize","requireAllSignatures","verifySignatures","CHUNK_SIZE","toBase64","fromCharCode","output","chunk","suiClient","getSuiClient","require","SuiClient","getTransactionBlockBytes","txRaw","transactionBlockBytes","setSender","build","setSenderIfNotSet","SuiProvider","suiAddress","input","toJSON","txb","constructSuiTxReq","signRes","mfa","suiSignTransaction","signAndExecuteTransaction","sendParam","sendRes","executeTransactionBlock","transactionBlock","sendSuiTx","json","effects","effectsBytes","_input","signPersonalMessage","signMsgRes","suiSignPersonalMessage","TronProvider","tronWeb","tronWebPromise","sdk","tronAddress","privateKey","constructTronTxReq","getAptos","AccountAddress","Aptos","APTOS_COIN","AptosConfig","Serializer","SimpleTransaction","Ed25519Signature","Ed25519PublicKey","AccountAuthenticatorEd25519","Network","AccountAuthenticator","import","getAptosClient","isTestnet","fullnode","faucet","CUSTOM","UserResponseStatus","LoginAction","MovementProvider","asFeePayer","txn","serializer","serializedData","toUint8Array","Buffer","getRawTransactionFromTxn","constructMovementTxReq","signMovementTx","signedTransaction","signResObj","publicKeyStr","sig","buildAptosSignTransactionOutput","APPROVED","fullMessage","REJECTED","movementSignMessage","prefix","signAndSubmitTransaction","simple","fromString","senderAuthenticator","sendTx","submit","sendMovementTx","waitForTransaction","getMovementTransactionStatus","movementAddress","shouldHandle","removeEvent","removeEventId","handlerMap","action","telegramAuthEventId","Link","linkTelegram","loginByTelegram","googleAuthEventId","linkGoogle","loginByGoogle","linkTwitter","loginByTwitter","kakaoAuthEventId","postData","querystring","grant_type","client_id","redirect_uri","resp","access_token","loginByKakao","getConnection","BASE_RELAY_PROD_URL","loginTypes","ethereumProvider","bitcoinProvider","solanaProvider","tronProvider","movementProvider","suiProvider","_initialize","onmessage","msgProcessor","setLevel","handler","messageProcessor","login","Login","stateParam","encodeURIComponent","listenerFn","linkSocial","getLinkSocialInfo","loginByGmail","userInfoDTO","googleCode","authData","telegramAuthData","loginByX","twitterCode","twitterRedirectUri","sendCode","email","checkResp","emailCheck","sendRegister","loginCode","verifyCode","verifyRegister","loginVerify","handleLoginByEmailSuccess","getPrices","tokenSymbols","getPrice","logout","removeLocalUserId","removeLocalLoginType","tradePaswordStatus","requestAccounts","dashboardConfig","projectName","theme","links","getElementsByTagName","rel","getFaviconUrl","setIframeToken","setTokenSuccess","verifyLoginEmail","sendReq","setPayPinAndEmail","setPayPin","changePayPin","bindEmail","addRecoveryEmail","hasEmail","bindEmailCode","bindEmailCodeVerify","getDefaultTokens","defaultTokens","getDashboardTokens","dashboardTokens","searchToken","tokenSearch","getHoldEvmTokens","holdEvmTokens","getHoldSolTokens","holdSolTokens","getUserWalletTokens","userWalletTokens","userWalletTokensUpdate","tokens","updateUserWalletTokens","userWalletTokenAdd","walletAddress","addUserWalletToken","userWalletTokenRemove","removeUserWalletToken","createPasskey","mfaRequest","getPasskeyStatus","localPasskeyStatus","getLocalPasskey","localCreated","remoteExised","mfaPKExisted","getJwtToken","getUserSocialInfo","ret","getSocialInfo","inviterBound","currentTime","createTime","ownerUid","getUserIdWithClientId","inviter","bindInviter","getSwapTokens","getSwapTokenList","onboarding","WebWalletInvokeType","ONBOARDING","openSwap","SWAP","openChangePayPin","CHANGE_PAY_PIN","openOnramp","ONRAMP","openSend","SEND","openReceive","RECEIVE","closeAllRelayWindow","forEach","close","handleWebWalletInvoke","Bh","Bl","low","Ch","Cl","toAddress","mintAddress","fromPublicKey","toPublicKey","tokenPublicKey","fromTokenPubKey","getAssociatedTokenAddress","toTokenPubKey","getAccount","TokenAccountNotFoundError","TokenInvalidAccountOwnerError","add","createAssociatedTokenAccountInstruction","createTransferInstruction","TOKEN_PROGRAM_ID","SystemProgram","transfer","fromPubkey","toPubkey","lamports","base64String","atob","instruction","instructions","programId","equals","amountData","BN","fromTokenAccount","pubkey","toTokenAccount","toAccount","owner","fromAccount","ASSOCIATED_TOKEN_PROGRAM_ID","mintKey","ownerKey","lamportsData","_h","_l"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,134]}