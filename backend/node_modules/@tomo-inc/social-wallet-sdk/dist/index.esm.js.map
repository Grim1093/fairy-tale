{"version":3,"file":"index.esm.js","sources":["../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/chain/defineChain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/version.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/base.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/encoding.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/isHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/size.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/trim.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/data.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/pad.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toBytes.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/fromHex.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/formatter.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/block.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/log.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transactionReceipt.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/transactionRequest.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/number.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/constants/number.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/formatters.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/concat.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/cursor.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/cursor.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/encoding/toRlp.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/unit.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatUnits.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatEther.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/unit/formatGwei.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/blobsToCommitments.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/blobsToProofs.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/hash/sha256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/blob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/blob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/toBlobSidecars.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/toBlobs.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/address.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/chain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/node.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/lru.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/address/getAddress.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/hash/keccak256.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/address/isAddress.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/data/slice.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/assertTransaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/serializeAccessList.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/serializeTransaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/getTransactionType.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/constants/kzg.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/errors/transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/isEip712Transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/assertEip712Transaction.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/serializers.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/errors/bytecode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/getEip712Domain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/zksync/utils/hashBytecode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/contracts.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/formatters.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/op-stack/serializers.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/arbitrum.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/aurora.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/avalanche.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/base.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/baseSepolia.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/berachainTestnetbArtio.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bevmMainnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/blast.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bob.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bsc.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/bscTestnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/chiliz.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/cronos.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/fantom.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/gnosis.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/accounts/utils/parseAccount.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/account.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/stateOverride.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/errors/contract.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/errors/getCallError.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/errors/getNodeError.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/formatters/extract.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/linea/actions/estimateGas.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/utils/transaction/assertRequest.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/linea/chainConfig.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/linea.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mainnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/manta.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mantaTestnet.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mantle.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/merlin.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/mode.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/opBNB.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/optimism.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/palm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/polygon.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/polygonZkEvm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/satoshivm.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/scroll.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/sei.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/sepolia.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/storyAeneid.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/taiko.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/xLayer.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zetachain.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zkLinkNova.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zksync.js","../../../node_modules/.pnpm/viem@2.30.6_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@6.0.5_zod@3.25.50/node_modules/viem/_esm/chains/definitions/zora.js","../src/constant/index.ts","../src/utils/existedEvents.ts","../src/utils/log.ts","../src/utils/LocalstorageUtils.ts","../src/utils/utils.ts","../src/utils/windowUtils.ts","../src/utils/device.ts","../src/utils/communicator.ts","../src/utils/apiUtils.ts","../src/provider/bitcoin/type.ts","../src/provider/bitcoin/BitcoinProvider.ts","../src/provider/bitcoin/apiUtils.ts","../src/provider/ethereum/chains.ts","../src/provider/ethereum/EthereumProvider.ts","../src/provider/solana/SolanaProvider.ts","../../../node_modules/.pnpm/@scure+base@1.2.6/node_modules/@scure/base/lib/esm/index.js","../../../node_modules/.pnpm/@mysten+utils@0.0.0/node_modules/@mysten/utils/dist/esm/b58.js","../../../node_modules/.pnpm/@mysten+utils@0.0.0/node_modules/@mysten/utils/dist/esm/b64.js","../../../node_modules/.pnpm/@mysten+utils@0.0.0/node_modules/@mysten/utils/dist/esm/hex.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/uleb.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/reader.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/utils.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/writer.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/bcs-type.js","../../../node_modules/.pnpm/@mysten+bcs@1.6.1/node_modules/@mysten/bcs/dist/esm/bcs.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/utils/suins.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/utils/move-registry.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/utils/sui-types.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/utils/constants.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_blake.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/blake2.js","../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/blake2b.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/bcs/type-tag-serializer.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/bcs/bcs.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/bcs/effects.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/bcs/pure.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/bcs/index.js","../src/utils/sui.ts","../src/provider/sui/SuiProvider.ts","../src/provider/tron/TronProvider.ts","../src/utils/movement.ts","../src/provider/movement/MovementProvider.ts","../src/types/types.ts","../src/utils/handlerMessage.ts","../src/utils/messageProcessor.ts","../src/utils/sol.ts","../src/index.ts","../src/utils/getFaviconUrl.ts","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/version.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/client/errors.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/client/rpc-websocket-client.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/client/http-transport.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/cache.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/client.js","../../../node_modules/.pnpm/valibot@0.36.0/node_modules/valibot/dist/index.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/data/internal.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/Commands.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/data/v1.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/data/v2.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/Inputs.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/resolve.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/pure.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/TransactionData.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/hash.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/utils.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/Transaction.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/object.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/core.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/utils/dynamic-fields.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/errors.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/serializer.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/transports/utils.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/transports/json-rpc-resolver.js","../../../node_modules/.pnpm/@mysten+utils@0.0.0/node_modules/@mysten/utils/dist/esm/chunk.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/experimental/transports/jsonRPC.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/transactions/plugins/utils.js","../../../node_modules/.pnpm/@mysten+sui@1.30.2_typescript@5.8.3/node_modules/@mysten/sui/dist/esm/client/client.js"],"sourcesContent":["export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","export const version = '2.30.6';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nlet errorConfig = {\n    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath\n        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`\n        : undefined,\n    version: `viem@${version}`,\n};\nexport function setErrorConfig(config) {\n    errorConfig = config;\n}\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        const details = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.details;\n            if (args.cause?.message)\n                return args.cause.message;\n            return args.details;\n        })();\n        const docsPath = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.docsPath || args.docsPath;\n            return args.docsPath;\n        })();\n        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });\n        const message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n            ...(details ? [`Details: ${details}`] : []),\n            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n        ].join('\\n');\n        super(message, args.cause ? { cause: args.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.name = args.name ?? this.name;\n        this.shortMessage = shortMessage;\n        this.version = version;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err &&\n        typeof err === 'object' &&\n        'cause' in err &&\n        err.cause !== undefined)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {\n            name: 'InvalidBytesBooleanError',\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`, { name: 'InvalidHexBooleanError' });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n    '0x4': 'eip7702',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    if (transaction.authorizationList)\n        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        chainId: Number(authorization.chainId),\n        nonce: Number(authorization.nonce),\n        r: authorization.r,\n        s: authorization.s,\n        yParity: Number(authorization.yParity),\n    }));\n}\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = (block.transactions ?? []).map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n    eip7702: '0x4',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.authorizationList !== 'undefined')\n        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        r: authorization.r\n            ? numberToHex(BigInt(authorization.r))\n            : authorization.r,\n        s: authorization.s\n            ? numberToHex(BigInt(authorization.s))\n            : authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n            ? { yParity: numberToHex(authorization.yParity) }\n            : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n            typeof authorization.yParity === 'undefined'\n            ? { v: numberToHex(authorization.v) }\n            : {}),\n    }));\n}\n//# sourceMappingURL=transactionRequest.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","import { maxUint16 } from '../../constants/number.js';\nexport const gasPerPubdataDefault = 50000n;\nexport const maxBytecodeSize = maxUint16 * 32n;\nexport const requiredL1ToL2GasPerPubdataLimit = 800n;\n//# sourceMappingURL=number.js.map","import { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js';\nimport { hexToBytes } from '../utils/encoding/toBytes.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { formatLog } from '../utils/formatters/log.js';\nimport { defineTransaction } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatters.transaction?.format(transaction);\n                if (formatted.typeHex === '0x71')\n                    formatted.type = 'eip712';\n                else if (formatted.typeHex === '0xff')\n                    formatted.type = 'priority';\n                return formatted;\n            });\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTimestamp: args.l1BatchTimestamp\n                    ? hexToBigInt(args.l1BatchTimestamp)\n                    : null,\n                transactions,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x71')\n                transaction.type = 'eip712';\n            else if (args.type === '0xff')\n                transaction.type = 'priority';\n            return {\n                ...transaction,\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n            };\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n                logs: args.logs.map((log) => {\n                    return {\n                        ...formatLog(log),\n                        l1BatchNumber: log.l1BatchNumber\n                            ? hexToBigInt(log.l1BatchNumber)\n                            : null,\n                        transactionLogIndex: hexToNumber(log.transactionLogIndex),\n                        logType: log.logType,\n                    };\n                }),\n                l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n                    return {\n                        blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n                        blockHash: l2ToL1Log.blockHash,\n                        l1BatchNumber: l2ToL1Log.l1BatchNumber\n                            ? hexToBigInt(l2ToL1Log.l1BatchNumber)\n                            : null,\n                        transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n                        shardId: hexToBigInt(l2ToL1Log.shardId),\n                        isService: l2ToL1Log.isService,\n                        sender: l2ToL1Log.sender,\n                        key: l2ToL1Log.key,\n                        value: l2ToL1Log.value,\n                        transactionHash: l2ToL1Log.transactionHash,\n                        logIndex: hexToBigInt(l2ToL1Log.logIndex),\n                    };\n                }),\n            };\n        },\n    }),\n    transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n        exclude: [\n            'customSignature',\n            'factoryDeps',\n            'gasPerPubdata',\n            'paymaster',\n            'paymasterInput',\n        ],\n        format(args) {\n            if (args.gasPerPubdata ||\n                (args.paymaster && args.paymasterInput) ||\n                args.factoryDeps ||\n                args.customSignature)\n                return {\n                    eip712Meta: {\n                        ...(args.gasPerPubdata\n                            ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n                            : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n                        ...(args.paymaster && args.paymasterInput\n                            ? {\n                                paymasterParams: {\n                                    paymaster: args.paymaster,\n                                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                                },\n                            }\n                            : {}),\n                        ...(args.factoryDeps\n                            ? {\n                                factoryDeps: args.factoryDeps.map((dep) => Array.from(hexToBytes(dep))),\n                            }\n                            : {}),\n                        ...(args.customSignature\n                            ? {\n                                customSignature: Array.from(hexToBytes(args.customSignature)),\n                            }\n                            : {}),\n                    },\n                    type: '0x71',\n                };\n            return {};\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`, {\n            name: 'NegativeOffsetError',\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, { name: 'PositionOutOfBoundsError' });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, { name: 'RecursiveReadLimitExceededError' });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { etherUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei, unit = 'wei') {\n    return formatUnits(wei, etherUnits[unit]);\n}\n//# sourceMappingURL=formatEther.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'), { name: 'FeeConflictError' });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n            name: 'InvalidLegacyVError',\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- an EIP-7702 Transaction with `authorizationList`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n            name: 'InvalidSerializableTransactionError',\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n            name: 'InvalidSerializedTransactionType',\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n            name: 'InvalidSerializedTransactionError',\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'TransactionExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`, {\n            name: 'TransactionNotFoundError',\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`, {\n            name: 'TransactionReceiptNotFoundError',\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n            name: 'BlobSizeTooLargeError',\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.', { name: 'EmptyBlobError' });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n            name: 'InvalidVersionedHashSizeError',\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n            name: 'InvalidVersionedHashVersionError',\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n            name: 'InvalidAddressError',\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n            name: 'ChainDoesNotSupportContract',\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n            name: 'ChainMismatchError',\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'), {\n            name: 'ChainNotFoundError',\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.', {\n            name: 'ClientChainNotConfiguredError',\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n            name: 'FeeCapTooHighError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n            name: 'FeeCapTooLowError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause, name: 'NonceTooLowError' });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n            name: 'InsufficientFundsError',\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds|exceeds transaction sender account balance/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n            name: 'IntrinsicGasTooHighError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n            name: 'IntrinsicGasTooLowError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n            name: 'TransactionTypeNotSupportedError',\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n            name: 'TipAboveFeeCapError',\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownNodeError',\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey)\n                this.delete(firstKey);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nconst checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    const cacheKey = `${address}.${strict}`;\n    if (isAddressCache.has(cacheKey))\n        return isAddressCache.get(cacheKey);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(cacheKey, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP7702(transaction) {\n    const { authorizationList } = transaction;\n    if (authorizationList) {\n        for (const authorization of authorizationList) {\n            const { chainId } = authorization;\n            const address = authorization.address;\n            if (!isAddress(address))\n                throw new InvalidAddressError({ address });\n            if (chainId < 0)\n                throw new InvalidChainIdError({ chainId });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { serializeAuthorizationList, } from '../authorization/serializeAuthorizationList.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionEIP7702, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    if (type === 'eip7702')\n        return serializeTransactionEIP7702(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP7702(transaction, signature) {\n    const { authorizationList, chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP7702(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedAuthorizationList = serializeAuthorizationList(authorizationList);\n    return concatHex([\n        '0x04',\n        toRlp([\n            toHex(chainId),\n            nonce ? toHex(nonce) : '0x',\n            maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n            maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n            gas ? toHex(gas) : '0x',\n            to ?? '0x',\n            value ? toHex(value) : '0x',\n            data ?? '0x',\n            serializedAccessList,\n            serializedAuthorizationList,\n            ...toYParitySignatureArray(transaction, signature),\n        ]),\n    ]);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        const r = trim(signature.r);\n        const s = trim(signature.s);\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            r === '0x00' ? '0x' : r,\n            s === '0x00' ? '0x' : s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature_) {\n    const signature = signature_ ?? transaction;\n    const { v, yParity } = signature;\n    if (typeof signature.r === 'undefined')\n        return [];\n    if (typeof signature.s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const r = trim(signature.r);\n    const s = trim(signature.s);\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.authorizationList !== 'undefined')\n        return 'eip7702';\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { toHex } from '../encoding/toHex.js';\nimport { toYParitySignatureArray } from '../transaction/serializeTransaction.js';\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(authorizationList) {\n    if (!authorizationList || authorizationList.length === 0)\n        return [];\n    const serializedAuthorizationList = [];\n    for (const authorization of authorizationList) {\n        const { chainId, nonce, ...signature } = authorization;\n        const contractAddress = authorization.address;\n        serializedAuthorizationList.push([\n            chainId ? toHex(chainId) : '0x',\n            contractAddress,\n            nonce ? toHex(nonce) : '0x',\n            ...toYParitySignatureArray({}, signature),\n        ]);\n    }\n    return serializedAuthorizationList;\n}\n//# sourceMappingURL=serializeAuthorizationList.js.map","import { BaseError } from '../../errors/base.js';\nexport class InvalidEip712TransactionError extends BaseError {\n    constructor() {\n        super([\n            'Transaction is not an EIP712 transaction.',\n            '',\n            'Transaction must:',\n            '  - include `type: \"eip712\"`',\n            '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n        ].join('\\n'), { name: 'InvalidEip712TransactionError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","export function isEIP712Transaction(transaction) {\n    if (transaction.type === 'eip712')\n        return true;\n    if (('customSignature' in transaction && transaction.customSignature) ||\n        ('paymaster' in transaction && transaction.paymaster) ||\n        ('paymasterInput' in transaction && transaction.paymasterInput) ||\n        ('gasPerPubdata' in transaction &&\n            typeof transaction.gasPerPubdata === 'bigint') ||\n        ('factoryDeps' in transaction && transaction.factoryDeps))\n        return true;\n    return false;\n}\n//# sourceMappingURL=isEip712Transaction.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { InvalidChainIdError } from '../../errors/chain.js';\nimport { isAddress } from '../../utils/address/isAddress.js';\nimport { InvalidEip712TransactionError } from '../errors/transaction.js';\nimport { isEIP712Transaction } from './isEip712Transaction.js';\nexport function assertEip712Transaction(transaction) {\n    const { chainId, to, from, paymaster, paymasterInput } = transaction;\n    if (!isEIP712Transaction(transaction))\n        throw new InvalidEip712TransactionError();\n    if (!chainId || chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (paymaster && !isAddress(paymaster))\n        throw new InvalidAddressError({ address: paymaster });\n    if (paymaster && !paymasterInput) {\n        throw new BaseError('`paymasterInput` must be provided when `paymaster` is defined');\n    }\n    if (!paymaster && paymasterInput) {\n        throw new BaseError('`paymaster` must be provided when `paymasterInput` is defined');\n    }\n}\n//# sourceMappingURL=assertEip712Transaction.js.map","import { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js';\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isEIP712Transaction(transaction))\n        return serializeTransactionEIP712(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionEIP712(transaction) {\n    const { chainId, gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, customSignature, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    assertEip712Transaction(transaction);\n    const serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        toHex(chainId),\n        toHex(''),\n        toHex(''),\n        toHex(chainId),\n        from ?? '0x',\n        gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n        factoryDeps ?? [],\n        customSignature ?? '0x', // EIP712 signature\n        paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n    ];\n    return concatHex([\n        '0x71',\n        toRlp(serializedTransaction),\n    ]);\n}\n//# sourceMappingURL=serializers.js.map","import { BaseError } from '../../errors/base.js';\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n    constructor({ givenLength, maxBytecodeSize, }) {\n        super(`Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`, { name: 'BytecodeLengthExceedsMaxSizeError' });\n    }\n}\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n    constructor({ givenLengthInWords }) {\n        super(`Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`, { name: 'BytecodeLengthInWordsMustBeOddError' });\n    }\n}\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n    constructor({ givenLength }) {\n        super(`The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`, { name: 'BytecodeLengthMustBeDivisibleBy32Error' });\n    }\n}\n//# sourceMappingURL=bytecode.js.map","import { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nimport { getEip712Domain } from './utils/getEip712Domain.js';\nexport const chainConfig = {\n    formatters,\n    serializers,\n    custom: {\n        getEip712Domain,\n    },\n};\n//# sourceMappingURL=chainConfig.js.map","import { toHex } from '../../utils/encoding/toHex.js';\nimport { gasPerPubdataDefault } from '../constants/number.js';\nimport { assertEip712Transaction } from './assertEip712Transaction.js';\nimport { hashBytecode } from './hashBytecode.js';\nexport const getEip712Domain = (transaction) => {\n    assertEip712Transaction(transaction);\n    const message = transactionToMessage(transaction);\n    return {\n        domain: {\n            name: 'zkSync',\n            version: '2',\n            chainId: transaction.chainId,\n        },\n        types: {\n            Transaction: [\n                { name: 'txType', type: 'uint256' },\n                { name: 'from', type: 'uint256' },\n                { name: 'to', type: 'uint256' },\n                { name: 'gasLimit', type: 'uint256' },\n                { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n                { name: 'maxFeePerGas', type: 'uint256' },\n                { name: 'maxPriorityFeePerGas', type: 'uint256' },\n                { name: 'paymaster', type: 'uint256' },\n                { name: 'nonce', type: 'uint256' },\n                { name: 'value', type: 'uint256' },\n                { name: 'data', type: 'bytes' },\n                { name: 'factoryDeps', type: 'bytes32[]' },\n                { name: 'paymasterInput', type: 'bytes' },\n            ],\n        },\n        primaryType: 'Transaction',\n        message: message,\n    };\n};\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\nfunction transactionToMessage(transaction) {\n    const { gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    return {\n        txType: 113n,\n        from: BigInt(from),\n        to: to ? BigInt(to) : 0n,\n        gasLimit: gas ?? 0n,\n        gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n        maxFeePerGas: maxFeePerGas ?? 0n,\n        maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n        paymaster: paymaster ? BigInt(paymaster) : 0n,\n        nonce: nonce ? BigInt(nonce) : 0n,\n        value: value ?? 0n,\n        data: data ?? '0x',\n        factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n        paymasterInput: paymasterInput ? paymasterInput : '0x',\n    };\n}\n//# sourceMappingURL=getEip712Domain.js.map","import { pad } from '../../utils/data/pad.js';\nimport { toBytes } from '../../utils/encoding/toBytes.js';\nimport { sha256 } from '../../utils/hash/sha256.js';\nimport { maxBytecodeSize } from '../constants/number.js';\nimport { BytecodeLengthExceedsMaxSizeError, BytecodeLengthInWordsMustBeOddError, BytecodeLengthMustBeDivisibleBy32Error, } from '../errors/bytecode.js';\nexport function hashBytecode(bytecode) {\n    const bytecodeBytes = toBytes(bytecode);\n    if (bytecodeBytes.length % 32 !== 0)\n        throw new BytecodeLengthMustBeDivisibleBy32Error({\n            givenLength: bytecodeBytes.length,\n        });\n    if (bytecodeBytes.length > maxBytecodeSize)\n        throw new BytecodeLengthExceedsMaxSizeError({\n            givenLength: bytecodeBytes.length,\n            maxBytecodeSize,\n        });\n    const hashStr = sha256(bytecodeBytes);\n    const hash = toBytes(hashStr);\n    // Note that the length of the bytecode\n    // should be provided in 32-byte words.\n    const bytecodeLengthInWords = bytecodeBytes.length / 32;\n    if (bytecodeLengthInWords % 2 === 0) {\n        throw new BytecodeLengthInWordsMustBeOddError({\n            givenLengthInWords: bytecodeLengthInWords,\n        });\n    }\n    const bytecodeLength = toBytes(bytecodeLengthInWords);\n    // The bytecode should always take the first 2 bytes of the bytecode hash,\n    // so we pad it from the left in case the length is smaller than 2 bytes.\n    const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 });\n    const codeHashVersion = new Uint8Array([1, 0]);\n    hash.set(codeHashVersion, 0);\n    hash.set(bytecodeLengthPadded, 2);\n    return hash;\n}\n//# sourceMappingURL=hashBytecode.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map","/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n    gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n    l1Block: { address: '0x4200000000000000000000000000000000000015' },\n    l2CrossDomainMessenger: {\n        address: '0x4200000000000000000000000000000000000007',\n    },\n    l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n    l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n    l2ToL1MessagePasser: {\n        address: '0x4200000000000000000000000000000000000016',\n    },\n};\n//# sourceMappingURL=contracts.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrum = /*#__PURE__*/ defineChain({\n    id: 42_161,\n    name: 'Arbitrum One',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://arb1.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://arbiscan.io',\n            apiUrl: 'https://api.arbiscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 7654707,\n        },\n    },\n});\n//# sourceMappingURL=arbitrum.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const aurora = /*#__PURE__*/ defineChain({\n    id: 1313161554,\n    name: 'Aurora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.aurora.dev'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aurorascan',\n            url: 'https://aurorascan.dev',\n            apiUrl: 'https://aurorascan.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 62907816,\n        },\n    },\n});\n//# sourceMappingURL=aurora.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const avalanche = /*#__PURE__*/ defineChain({\n    id: 43_114,\n    name: 'Avalanche',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Avalanche',\n        symbol: 'AVAX',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SnowTrace',\n            url: 'https://snowtrace.io',\n            apiUrl: 'https://api.snowtrace.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 11907934,\n        },\n    },\n});\n//# sourceMappingURL=avalanche.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const base = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 8453,\n    name: 'Base',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://basescan.org',\n            apiUrl: 'https://api.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x43edB88C4B80fDD2AdFF2412A7BebF9dF42cB40e',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x56315b90c40730925ec5485cf004d835058518A0',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 5022,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49048044D57e1C92A77f79988d21Fa8fAF74E97e',\n                blockCreated: 17482143,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3154Cf16ccdb4C6d922629664174b904d80F2C35',\n                blockCreated: 17482143,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=base.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 84532,\n    network: 'base-sepolia',\n    name: 'Base Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://sepolia.basescan.org',\n            apiUrl: 'https://api-sepolia.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n                blockCreated: 4446677,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n                blockCreated: 4446677,\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1059647,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=baseSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachainTestnetbArtio = /*#__PURE__*/ defineChain({\n    id: 80084,\n    name: 'Berachain bArtio',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 109269,\n        },\n        ensRegistry: {\n            address: '0xB0eef18971290b333450586D33dcA6cE122651D2',\n            blockCreated: 7736794,\n        },\n        ensUniversalResolver: {\n            address: '0x41692Ef1EA0C79E6b73077E4A67572D2BDbD7057',\n            blockCreated: 7736795,\n        },\n    },\n    ensTlds: ['.bera'],\n    rpcUrls: {\n        default: { http: ['https://bartio.rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berachain bArtio Beratrail',\n            url: 'https://bartio.beratrail.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=berachainTestnetbArtio.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bevmMainnet = /*#__PURE__*/ defineChain({\n    id: 11501,\n    name: 'BEVM Mainnet',\n    nativeCurrency: { name: 'Bitcoin', symbol: 'BTC', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-mainnet-1.bevm.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bevmscan',\n            url: 'https://scan-mainnet.bevm.io',\n            apiUrl: 'https://scan-mainnet-api.bevm.io/api',\n        },\n    },\n});\n//# sourceMappingURL=bevmMainnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const blast = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 81457,\n    name: 'Blast',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.blast.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blastscan',\n            url: 'https://blastscan.io',\n            apiUrl: 'https://api.blastscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 212929,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=blast.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const bob = defineChain({\n    ...chainConfig,\n    id: 60808,\n    name: 'BOB',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gobob.xyz'],\n            webSocket: ['wss://rpc.gobob.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOB Explorer',\n            url: 'https://explorer.gobob.xyz',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 23131,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdDa53E23f8a32640b04D7256e651C1db98dB11C1',\n                blockCreated: 4462615,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E',\n                blockCreated: 4462615,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=bob.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bsc = /*#__PURE__*/ defineChain({\n    id: 56,\n    name: 'BNB Smart Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'BNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://56.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://bscscan.com',\n            apiUrl: 'https://api.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15921452,\n        },\n    },\n});\n//# sourceMappingURL=bsc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n    id: 97,\n    name: 'Binance Smart Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'tBNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://data-seed-prebsc-1-s1.bnbchain.org:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://testnet.bscscan.com',\n            apiUrl: 'https://api-testnet.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 17422483,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bscTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const chiliz = /*#__PURE__*/ defineChain({\n    id: 88_888,\n    name: 'Chiliz Chain',\n    network: 'chiliz-chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CHZ',\n        symbol: 'CHZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.chiliz.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chiliz Explorer',\n            url: 'https://scan.chiliz.com',\n            apiUrl: 'https://scan.chiliz.com/api',\n        },\n    },\n});\n//# sourceMappingURL=chiliz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronos = /*#__PURE__*/ defineChain({\n    id: 25,\n    name: 'Cronos Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Cronos',\n        symbol: 'CRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos Explorer',\n            url: 'https://explorer.cronos.org',\n            apiUrl: 'https://explorer-api.cronos.org/mainnet/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1963112,\n        },\n    },\n});\n//# sourceMappingURL=cronos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fantom = /*#__PURE__*/ defineChain({\n    id: 250,\n    name: 'Fantom',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Fantom',\n        symbol: 'FTM',\n    },\n    rpcUrls: {\n        default: { http: ['https://250.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FTMScan',\n            url: 'https://ftmscan.com',\n            apiUrl: 'https://api.ftmscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 33001987,\n        },\n    },\n});\n//# sourceMappingURL=fantom.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gnosis = /*#__PURE__*/ defineChain({\n    id: 100,\n    name: 'Gnosis',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'xDAI',\n        symbol: 'XDAI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gnosischain.com'],\n            webSocket: ['wss://rpc.gnosischain.com/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gnosisscan',\n            url: 'https://gnosisscan.io',\n            apiUrl: 'https://api.gnosisscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 21022491,\n        },\n    },\n});\n//# sourceMappingURL=gnosis.js.map","export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n    constructor({ docsPath } = {}) {\n        super([\n            'Could not find an Account to execute with this Action.',\n            'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n        ].join('\\n'), {\n            docsPath,\n            docsSlug: 'account',\n            name: 'AccountNotFoundError',\n        });\n    }\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n    constructor({ docsPath, metaMessages, type, }) {\n        super(`Account type \"${type}\" is not supported.`, {\n            docsPath,\n            metaMessages,\n            name: 'AccountTypeNotSupportedError',\n        });\n    }\n}\n//# sourceMappingURL=account.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`, {\n            name: 'AccountStateConflictError',\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.', {\n            name: 'StateAssignmentConflictError',\n        });\n    }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'CallExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                prettyArgs && 'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'ContractFunctionExecutionError',\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n            name: 'ContractFunctionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"raw\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.raw = data;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n            name: 'ContractFunctionZeroDataError',\n        });\n    }\n}\nexport class CounterfactualDeploymentFailedError extends BaseError {\n    constructor({ factory }) {\n        super(`Deployment for counterfactual contract call failed${factory ? ` for factory \"${factory}\".` : ''}`, {\n            metaMessages: [\n                'Please ensure:',\n                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n            ],\n            name: 'CounterfactualDeploymentFailedError',\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '', { name: 'RawContractError' });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e?.code ===\n            ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError)\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../errors/account.js';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\nimport { getCallError } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest } from '../../utils/formatters/transactionRequest.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\n/**\n * Estimates the gas and fees per gas necessary to complete a transaction without submitting it to the network.\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns A gas estimate and fees per gas (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { linea } from 'viem/chains'\n * import { estimateGas } from 'viem/linea'\n *\n * const client = createPublicClient({\n *   chain: linea,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 0n,\n * })\n */\nexport async function estimateGas(client, args) {\n    const { account: account_ = client.account } = args;\n    if (!account_)\n        throw new AccountNotFoundError();\n    const account = parseAccount(account_);\n    try {\n        const { accessList, blockNumber, blockTag, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        assertRequest(args);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        const { baseFeePerGas, gasLimit, priorityFeePerGas } = await client.request({\n            method: 'linea_estimateGas',\n            params: block ? [request, block] : [request],\n        });\n        return {\n            baseFeePerGas: BigInt(baseFeePerGas),\n            gasLimit: BigInt(gasLimit),\n            priorityFeePerGas: BigInt(priorityFeePerGas),\n        };\n    }\n    catch (err) {\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map","import { estimateGas } from './actions/estimateGas.js';\nexport const chainConfig = {\n    fees: {\n        estimateFeesPerGas,\n        async maxPriorityFeePerGas({ block, client, request }) {\n            const response = await estimateFeesPerGas({\n                block,\n                client,\n                multiply: (x) => x,\n                request,\n                type: 'eip1559',\n            });\n            // Returning `null` will trigger the base `estimateMaxPriorityFeePerGas` to perform\n            // fallback mechanisms to estimate priority fee.\n            if (!response?.maxPriorityFeePerGas)\n                return null;\n            return response.maxPriorityFeePerGas;\n        },\n    },\n};\n///////////////////////////////////////////////////////////////////////////\n// Internal\n///////////////////////////////////////////////////////////////////////////\nasync function estimateFeesPerGas({ client, multiply, request, type, }) {\n    try {\n        const response = await estimateGas(client, {\n            ...request,\n            account: request?.account,\n        });\n        const { priorityFeePerGas: maxPriorityFeePerGas } = response;\n        const baseFeePerGas = multiply(BigInt(response.baseFeePerGas));\n        const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas;\n        if (type === 'legacy')\n            return { gasPrice: maxFeePerGas };\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    catch {\n        // Returning `null` will trigger the base `estimateFeesPerGas` to perform\n        // fallback mechanisms to estimate fees.\n        return null;\n    }\n}\n//# sourceMappingURL=chainConfig.js.map","import { chainConfig } from '../../linea/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const linea = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 59_144,\n    name: 'Linea Mainnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.linea.build'],\n            webSocket: ['wss://rpc.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://lineascan.build',\n            apiUrl: 'https://api.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 42,\n        },\n        ensRegistry: {\n            address: '0x50130b669B28C339991d8676FA73CF122a121267',\n            blockCreated: 6682888,\n        },\n        ensUniversalResolver: {\n            address: '0x3aA974fb3f8C1E02796048BDCdeD79e9D53a6965',\n            blockCreated: 6683000,\n        },\n    },\n    ensTlds: ['.linea.eth'],\n    testnet: false,\n});\n//# sourceMappingURL=linea.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mainnet = /*#__PURE__*/ defineChain({\n    id: 1,\n    name: 'Ethereum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://eth.merkle.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://etherscan.io',\n            apiUrl: 'https://api.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n            blockCreated: 19_258_213,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14_353_601,\n        },\n    },\n});\n//# sourceMappingURL=mainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const manta = /*#__PURE__*/ defineChain({\n    id: 169,\n    name: 'Manta Pacific Mainnet',\n    network: 'manta',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://pacific-rpc.manta.network/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Explorer',\n            url: 'https://pacific-explorer.manta.network',\n            apiUrl: 'https://pacific-explorer.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 332890,\n        },\n    },\n});\n//# sourceMappingURL=manta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantaTestnet = /*#__PURE__*/ defineChain({\n    id: 3_441_005,\n    name: 'Manta Pacific Testnet',\n    network: 'manta-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://manta-testnet.calderachain.xyz/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Testnet Explorer',\n            url: 'https://pacific-explorer.testnet.manta.network',\n            apiUrl: 'https://pacific-explorer.testnet.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C',\n            blockCreated: 419915,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantle = /*#__PURE__*/ defineChain({\n    id: 5000,\n    name: 'Mantle',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MNT',\n        symbol: 'MNT',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.mantle.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mantle Explorer',\n            url: 'https://mantlescan.xyz/',\n            apiUrl: 'https://api.mantlescan.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 304717,\n        },\n    },\n});\n//# sourceMappingURL=mantle.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const merlin = /*#__PURE__*/ defineChain({\n    id: 4200,\n    name: 'Merlin',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.merlinchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://scan.merlinchain.io',\n            apiUrl: 'https://scan.merlinchain.io/api',\n        },\n    },\n});\n//# sourceMappingURL=merlin.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const mode = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 34443,\n    name: 'Mode Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.mode.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Modescan',\n            url: 'https://modescan.io',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2465882,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x4317ba146D4933D889518a3e5E11Fe7a53199b04',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8B34b14c7c7123459Cf3076b8Cb929BE097d0C07',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x735aDBbE72226BD52e818E7181953f42E3b0FF21',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=mode.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 56; // bsc mainnet\nexport const opBNB = /*#__PURE__*/ defineChain({\n    id: 204,\n    name: 'opBNB',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'opBNB (BSCScan)',\n            url: 'https://opbnb.bscscan.com',\n            apiUrl: 'https://api-opbnb.bscscan.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 512881,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x153CAB79f4767E2ff862C94aa49573294B13D169',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1876EA7702C0ad0C6A2ae6036DE7733edfBca519',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xF05F0e4362859c3331Cb9395CBC201E3Fa6757Ea',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=opBNB.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xe5965Ab5962eDc7477C8520243A95517CD252fA9',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const palm = /*#__PURE__*/ defineChain({\n    id: 11_297_108_109,\n    name: 'Palm',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PALM',\n        symbol: 'PALM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://palm-mainnet.public.blastapi.io'],\n            webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chainlens',\n            url: 'https://palm.chainlens.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15429248,\n        },\n    },\n});\n//# sourceMappingURL=palm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygon = /*#__PURE__*/ defineChain({\n    id: 137,\n    name: 'Polygon',\n    nativeCurrency: { name: 'POL', symbol: 'POL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://polygon-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://polygonscan.com',\n            apiUrl: 'https://api.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 25770160,\n        },\n    },\n});\n//# sourceMappingURL=polygon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n    id: 1101,\n    name: 'Polygon zkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://zkevm-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://zkevm.polygonscan.com',\n            apiUrl: 'https://api-zkevm.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 57746,\n        },\n    },\n});\n//# sourceMappingURL=polygonZkEvm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const satoshiVM = /*#__PURE__*/ defineChain({\n    id: 3109,\n    name: 'SatoshiVM Alpha Mainnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://alpha-rpc-node-http.svmscan.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://svmscan.io',\n            apiUrl: 'https://svmscan.io/api',\n        },\n    },\n});\n//# sourceMappingURL=satoshivm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const scroll = /*#__PURE__*/ defineChain({\n    id: 534_352,\n    name: 'Scroll',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.scroll.io'],\n            webSocket: ['wss://wss-rpc.scroll.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Scrollscan',\n            url: 'https://scrollscan.com',\n            apiUrl: 'https://api.scrollscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=scroll.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sei = /*#__PURE__*/ defineChain({\n    id: 1329,\n    name: 'Sei Network',\n    nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm-rpc.sei-apis.com/'],\n            webSocket: ['wss://evm-ws.sei-apis.com/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seitrace',\n            url: 'https://seitrace.com',\n            apiUrl: 'https://seitrace.com/pacific-1/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n});\n//# sourceMappingURL=sei.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sepolia = /*#__PURE__*/ defineChain({\n    id: 11_155_111,\n    name: 'Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.drpc.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.etherscan.io',\n            apiUrl: 'https://api-sepolia.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 751532,\n        },\n        ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n        ensUniversalResolver: {\n            address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n            blockCreated: 5_317_080,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const storyAeneid = /*#__PURE__*/ defineChain({\n    id: 1315,\n    name: 'Story Aeneid',\n    network: 'story-aeneid',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP',\n        symbol: 'IP',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1792,\n        },\n        ensRegistry: {\n            address: '0x5dC881dDA4e4a8d312be3544AD13118D1a04Cb17',\n            blockCreated: 1322033,\n        },\n        ensUniversalResolver: {\n            address: '0x6D3B3F99177FB2A5de7F9E928a9BD807bF7b5BAD',\n            blockCreated: 1322097,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://aeneid.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story Aeneid Explorer',\n            url: 'https://aeneid.storyscan.xyz',\n            apiUrl: 'https://aeneid.storyscan.xyz/api/v2',\n        },\n    },\n    ensTlds: ['.ip'],\n    testnet: true,\n});\n//# sourceMappingURL=storyAeneid.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taiko = /*#__PURE__*/ defineChain({\n    id: 167000,\n    name: 'Taiko Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.taiko.xyz'],\n            webSocket: ['wss://ws.mainnet.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taikoscan',\n            url: 'https://taikoscan.io',\n            apiUrl: 'https://api.taikoscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcb2436774C3e191c85056d248EF4260ce5f27A9D',\n        },\n    },\n});\n//# sourceMappingURL=taiko.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xLayer = /*#__PURE__*/ defineChain({\n    id: 196,\n    name: 'X Layer Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OKB',\n        symbol: 'OKB',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.xlayer.tech'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OKLink',\n            url: 'https://www.oklink.com/xlayer',\n            apiUrl: 'https://www.oklink.com/api/v5/explorer/xlayer/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 47416,\n        },\n    },\n});\n//# sourceMappingURL=xLayer.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zetachain = /*#__PURE__*/ defineChain({\n    id: 7000,\n    name: 'ZetaChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zeta',\n        symbol: 'ZETA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://zetachain-evm.blockpi.network/v1/rpc/public'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1632781,\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZetaScan',\n            url: 'https://explorer.zetachain.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zetachain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkLinkNova = /*#__PURE__*/ defineChain({\n    id: 810180,\n    name: 'zkLink Nova',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.zklink.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkLink Nova Block Explorer',\n            url: 'https://explorer.zklink.io',\n        },\n    },\n});\n//# sourceMappingURL=zkLinkNova.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksync = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 324,\n    name: 'ZKsync Era',\n    network: 'zksync-era',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.era.zksync.io'],\n            webSocket: ['wss://mainnet.era.zksync.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://era.zksync.network/',\n            apiUrl: 'https://api-era.zksync.network/api',\n        },\n        native: {\n            name: 'ZKsync Explorer',\n            url: 'https://explorer.zksync.io/',\n            apiUrl: 'https://block-explorer-api.mainnet.zksync.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 45659388,\n        },\n    },\n});\n//# sourceMappingURL=zksync.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const zora = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 7777777,\n    name: 'Zora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zora.energy'],\n            webSocket: ['wss://rpc.zora.energy'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.zora.energy',\n            apiUrl: 'https://explorer.zora.energy/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 5882,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1a0ad011913A150f69f6A19DF447A0CfD9551054',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3e2Ea9B92B7E48A52296fD261dc26fd995284631',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=zora.js.map","// relay page msg\nexport const relayOrigin = \"https://social-relay.tomo.inc\";\n// export const relayOrigin = \"http://localhost:3001\"; //  local test\nexport const relayOriginDev = \"https://social-relay-dev.tomo.inc\";\nconsole.log(\"relayOrigin\", relayOrigin);\n// export const relayOriginDev = \"http:/localhost:3001\";\nexport const googleId = \"479465761311-5da6b2ic7io7odr9jnrldai20046vk4t.apps.googleusercontent.com\";\n// export const redirectUri = `${relayOrigin}/google`; // google login use relayOrigin as redirect uri for both dev and prod\n// Note its value when debugging '/x' or '/'\nexport const redirectUriForX = `${relayOrigin}/x`; // twitter login use relayOrigin as redirect uri for both dev and prod\nexport const xLoaderUrl = `${relayOrigin}/x/loader`; // twitter login load use relayOrigin as redirect uri for both dev and prod\nexport const kakaoJsKey = \"06226ae2a1e8d0727c60dd2e6c874a63\";\nexport const kakaoRedirectUri = `${relayOrigin}/kakao`;\n// not used\n// export const mfaUrl = `${relayOrigin}/mfa`\n// export const relaySignRequestUrl = `${relayOrigin}/request`\n// export const requestUrl = 'http://localhost:8080/request'\n// export const relayOrigin = 'http://localhost:8080'\nexport const redirectUri = `${relayOrigin}/google`;\n// export const redirectUriForX = 'http://localhost:8080'\n// export const xLoaderUrl = 'http://localhost:8080/x/loader'\nexport const relaySetPinUrl = `${relayOrigin}/setPin`;\nexport const relayMessageTypes = {\n    googleAuth: \"tomo-google-authorized\",\n    xAuth: \"tomo-twitter-authorized\",\n    signReq: \"tomo-response\",\n    normalReq: \"normal-response\",\n    mfaCreate: \"tomo-mfa-authorized\",\n    kakaoAuth: \"tomo-kakao-authorized\",\n    telegramAuth: \"tomo-telegram-authorized\",\n};\nexport const EventNames = {\n    googleAuth: \"googleAuth\",\n    xAuth: \"xAuth\",\n    signReq: \"signReq\",\n    sendReq: \"sendReq\",\n    normalReq: \"normalReq\",\n    mfaReq: \"mfaReq\",\n    kakaoAuth: \"kakaoAuth\",\n    telegramAuth: \"telegramAuth\",\n};\nexport const RequestTypes = {\n    signMessage: \"signMessage\",\n    signTypedMessage: \"signTypedMessage\",\n    sendTx: \"sendTx\",\n    signTx: \"signTx\",\n    swapTx: \"swapTx\",\n    approveTx: \"approveTx\",\n    signTxs: \"signTxs\",\n};\n","export let xEvents = [];\nexport const setXEvents = (events) => {\n    xEvents = events;\n};\n","import log from \"loglevel\";\nexport const tomoLog = log.getLogger(\"TomoSDK\");\nexport const setLogLevel = (level) => {\n    tomoLog.setLevel(level);\n};\n","import { tomoLog } from \"./log\";\nexport const LOCAL_USER_TOKEN = \"local-user-token\";\nexport const LOCAL_USER_INFO = \"local-user-info\";\nexport const LOCAL_EMAIL_LOGIN_REQ = \"local-email-login-req\";\nexport const TOMO_CACHE = \"tomo-cache\";\nexport const getTomoCache = () => {\n    try {\n        const cache = localStorage.getItem(TOMO_CACHE);\n        return JSON.parse(cache ?? \"\");\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setTomoCache = (cache) => {\n    try {\n        localStorage.setItem(TOMO_CACHE, JSON.stringify(cache));\n    }\n    catch (e) {\n        tomoLog.error(\"save cache failed\");\n    }\n};\nexport const setCacheField = (clientId, key, value) => {\n    let cache = getTomoCache();\n    if (cache) {\n        if (cache[clientId]) {\n            cache[clientId][key] = value;\n        }\n        else {\n            cache[clientId] = {\n                [key]: value,\n            };\n        }\n    }\n    else {\n        cache = {\n            [clientId]: {\n                [key]: value,\n            },\n        };\n    }\n    setTomoCache(cache);\n};\n// 添加一个全局变量来存储 token\nconst globalTokenStore = {};\nexport const getLocalToken = (clientId) => {\n    try {\n        return globalTokenStore[clientId] || null;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalToken = (clientId, token) => {\n    globalTokenStore[clientId] = token;\n};\nexport const removeLocalToken = (clientId) => {\n    setCacheField(clientId, \"token\", null);\n};\nexport const getLocalUserId = (clientId) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[clientId]?.userId;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalUserId = (clientId, userId) => {\n    setCacheField(clientId, \"userId\", userId);\n};\nexport const removeLocalUserId = (clientId) => {\n    setCacheField(clientId, \"userId\", null);\n};\nexport const getLocalLoginType = (clientId) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[clientId]?.loginType;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setLocalLoginType = (clientId, loginType) => {\n    setCacheField(clientId, \"loginType\", loginType);\n};\nexport const removeLocalLoginType = (clientId) => {\n    setCacheField(clientId, \"loginType\", null);\n};\nexport const getLocalPasskey = (evmAddress) => {\n    try {\n        const cacheObj = getTomoCache();\n        return cacheObj?.[evmAddress]?.localPasskey;\n    }\n    catch (e) {\n        return undefined;\n    }\n};\nexport const setLocalPasskey = (evmAddress, localPasskey) => {\n    setCacheField(evmAddress, \"localPasskey\", localPasskey);\n};\nexport const getEmailReq = () => {\n    try {\n        const req = localStorage.getItem(LOCAL_EMAIL_LOGIN_REQ);\n        return JSON.parse(req ?? \"\");\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const setEmailReq = (req) => {\n    try {\n        localStorage.setItem(LOCAL_EMAIL_LOGIN_REQ, req);\n    }\n    catch (e) {\n        return null;\n    }\n};\nexport const removeEmailReq = () => {\n    try {\n        localStorage.removeItem(LOCAL_EMAIL_LOGIN_REQ);\n    }\n    catch (e) {\n        // do something\n    }\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { getLocalToken } from \"./LocalstorageUtils\";\nimport { getUserInfo as getUserInfoFromRemote } from \"./apiUtils\";\nimport { tomoLog } from \"./log\";\nlet userInfo = null;\nexport const getUserInfoFromLocalFirst = async (clientId) => {\n    if (userInfo) {\n        tomoLog.debug(\"cache data:\", userInfo);\n        return userInfo;\n    }\n    userInfo = await getUserInfoFromRemote(clientId);\n    return userInfo;\n};\nexport const clearUserInfo = () => {\n    userInfo = null;\n};\nexport const isHexStrict = (hex) => typeof hex === \"string\" && /^((-)?0x[0-9a-f]+|(0x))$/i.test(hex);\nexport const strToBase64 = (str) => {\n    const bytes = new TextEncoder().encode(str);\n    const binString = Array.from(bytes, (byte) => String.fromCodePoint(byte)).join(\"\");\n    return btoa(binString);\n};\nexport const base64ToStr = (base64) => {\n    const binString = atob(base64);\n    const data = Uint8Array.from(binString, (m) => m.codePointAt(0));\n    return new TextDecoder().decode(data);\n};\nexport const constructSignReq = (clientId, params) => {\n    const { reqType, chainType, address, addressType, network, message, signMessageType } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: chainType,\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        signInfo: {\n            message,\n            address,\n            addressType,\n            network,\n            signMessageType,\n        },\n    };\n};\nexport const constructTxReq = (clientId, params) => {\n    const { reqType, chainId, rpcUrl } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"evm\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        txMeta: {\n            txParams: params.params,\n            chainId,\n            rpcUrl,\n        },\n    };\n};\nexport const constructBtcTxReq = (clientId, params) => {\n    const { reqType, address, network, addressType } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"bitcoin\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        reqType,\n        txMeta: {\n            txParams: params.params,\n            address,\n            addressType,\n            network,\n        },\n    };\n};\nexport const constructSolTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"solana\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructTonTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"ton\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructTronTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"tron\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructMovementTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"movement\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\nexport const constructSuiTxReq = (clientId, params) => {\n    const { reqType, address } = params;\n    return {\n        eventId: uuidv4(),\n        chainType: \"sui\",\n        origin: window.location.origin,\n        accessToken: getLocalToken(clientId),\n        address,\n        reqType,\n        txMeta: params.params,\n    };\n};\n","import { relayMessageTypes } from \"../constant\";\nimport { isMobile } from \"./device\";\nexport const relayWindowList = [];\nexport const openWindow = ({ url, name, width, height }) => {\n    const top = (window.innerHeight - (height || 400)) / 2 + window.screenY;\n    const left = (window.innerWidth - (width || 400)) / 2 + window.screenX;\n    if (relayWindowList.length) {\n        const currentWindow = relayWindowList[relayWindowList.length - 1];\n        currentWindow.location.href = url;\n        return currentWindow;\n    }\n    try {\n        const relyWindow = window.open(url, name, `dialog=yes,top=${top}px,left=${left},width=${width !== undefined ? width : 400}px,height=${height !== undefined ? height : 600}px`);\n        // Fallback to iframe modal if:\n        // 1. window.open is blocked by browser\n        // 2. iOS Safari requires user interaction for window.open\n        if (!relyWindow) {\n            return createModalIframe({ url, width });\n        }\n        relayWindowList.push(relyWindow);\n        return relyWindow;\n    }\n    catch (error) {\n        console.error(\"Failed to open window:\", error);\n        return createModalIframe({ url, width });\n    }\n};\nexport const injectIframe = ({ url }) => {\n    const id = \"tomo-social-relay\";\n    const existed = document.getElementById(id);\n    if (existed) {\n        existed.remove();\n    }\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = url;\n    iframe.id = id;\n    iframe.allow = \"publickey-credentials-create *\";\n    document.body.appendChild(iframe);\n    return iframe;\n};\nconst modalIframe = {\n    closed: false,\n};\n/**\n * Opens a modal iframe to display a web page.\n * @param {object} props\n * @param {string} props.url The URL to open in the iframe.\n * @param {number} [props.width=400] The width of the iframe.\n * @returns {HTMLIFrameElement} The iframe element.\n */\nconst createModalIframe = ({ url, width = 400 }) => {\n    const id = \"tomo-social-iframe-modal\";\n    const existed = document.getElementById(id);\n    if (existed) {\n        existed.remove();\n    }\n    // Save original states\n    const originalMeta = document.querySelector('meta[name=\"viewport\"]');\n    const originalMetaContent = originalMeta?.getAttribute(\"content\");\n    const originalBodyStyle = {\n        overflow: document.body.style.overflow,\n        position: document.body.style.position,\n        width: document.body.style.width,\n        height: document.body.style.height,\n    };\n    const isMobileDevice = isMobile();\n    const overlay = document.createElement(\"div\");\n    overlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    z-index: 999999;\n    -webkit-overflow-scrolling: touch;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n    const container = document.createElement(\"div\");\n    const containerWidth = width || 400;\n    const containerHeight = isMobileDevice ? \"100%\" : \"600px\";\n    const containerStyle = isMobileDevice\n        ? `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n  `\n        : `\n    width: ${containerWidth}px;\n    height: ${containerHeight};\n    border-radius: 16px;\n  `;\n    container.style.cssText = `\n    ${containerStyle}\n    background: white;\n    overflow: hidden;\n    z-index: 1000000;\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n    border: none;\n    box-shadow: ${isMobileDevice ? \"none\" : \"0 4px 24px rgba(0, 0, 0, 0.1)\"};\n    opacity: 0;\n    transition: opacity 0.3s;\n  `;\n    // Create iframe with enhanced security\n    const iframe = document.createElement(\"iframe\");\n    iframe.id = id;\n    iframe.setAttribute(\"loading\", \"eager\");\n    iframe.setAttribute(\"importance\", \"high\");\n    // Security attributes\n    iframe.setAttribute(\"sandbox\", \"allow-scripts allow-forms allow-same-origin allow-popups allow-modals allow-storage-access-by-user-activation\");\n    iframe.setAttribute(\"referrerpolicy\", \"strict-origin\");\n    iframe.allow = \"publickey-credentials-create; clipboard-write\";\n    iframe.src = url;\n    iframe.style.cssText = `\n    width: 100%;\n    height: 100%;\n    border: none;\n    margin: 0;\n    padding: 0;\n    flex: 1;\n    display: block;\n    background: white;\n    -webkit-overflow-scrolling: touch;\n  `;\n    // Show content when loaded\n    iframe.onload = () => {\n        container.style.opacity = \"1\";\n    };\n    if (isMobileDevice) {\n        const meta = document.createElement(\"meta\");\n        meta.name = \"viewport\";\n        meta.content = \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover\";\n        document.head.appendChild(meta);\n        document.body.style.overflow = \"hidden\";\n        document.body.style.position = \"fixed\";\n        document.body.style.width = \"100%\";\n        document.body.style.height = \"100%\";\n    }\n    container.appendChild(iframe);\n    overlay.appendChild(container);\n    document.body.appendChild(overlay);\n    const cleanup = () => {\n        overlay.remove();\n        if (isMobileDevice) {\n            const currentMeta = document.querySelector('meta[name=\"viewport\"]');\n            if (currentMeta) {\n                if (originalMeta && originalMetaContent) {\n                    originalMeta.setAttribute(\"content\", originalMetaContent);\n                }\n                else {\n                    currentMeta.remove();\n                }\n            }\n            document.body.style.overflow = originalBodyStyle.overflow;\n            document.body.style.position = originalBodyStyle.position;\n            document.body.style.width = originalBodyStyle.width;\n            document.body.style.height = originalBodyStyle.height;\n        }\n    };\n    // Handle messages\n    const messageHandler = (event) => {\n        if (Object.values(relayMessageTypes).includes(event.data.type)) {\n            cleanup();\n            window.removeEventListener(\"message\", messageHandler);\n        }\n    };\n    window.addEventListener(\"message\", messageHandler);\n    // Handle overlay click\n    overlay.addEventListener(\"click\", (e) => {\n        if (e.target === overlay) {\n            modalIframe.closed = true;\n            cleanup();\n            window.removeEventListener(\"message\", messageHandler);\n        }\n    });\n    modalIframe.closed = false;\n    return modalIframe;\n};\n","export function isMobile() {\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator?.userAgent || \"\");\n}\nexport const isIOS = () => {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n};\n","import { EventNames } from \"../constant\";\nimport { setTemporaryData } from \"./apiUtils\";\nimport { xEvents } from \"./existedEvents\";\nimport { getLocalLoginType, getLocalToken, getLocalUserId, setLocalPasskey, setLocalToken } from \"./LocalstorageUtils\";\nimport { tomoLog } from \"./log\";\nimport { strToBase64 } from \"./utils\";\nimport { openWindow, relayWindowList } from \"./windowUtils\";\nimport JSONBig from \"json-bigint\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport async function checkPopupClosed(popupPromise_ish, events, eventName, eventId) {\n    /** promise-ish to handle possible use in Electron */\n    const popup = await popupPromise_ish;\n    const checkPopup = () => {\n        if (popup && popup.closed) {\n            const currentClosedWindowIndex = relayWindowList.findIndex((win) => win == popup);\n            if (currentClosedWindowIndex !== -1) {\n                relayWindowList.splice(currentClosedWindowIndex, 1);\n            }\n            tomoLog.debug(\"Popup window closed\");\n            if (!xEvents.find((id) => id === eventId)) {\n                // avoid emit repeated events\n                events.emit(`${eventName}#${eventId}`, false);\n                tomoLog.debug(\"events:\", events.eventNames(), `${eventName}#${eventId}`);\n            }\n            clearInterval(checkInterval);\n        }\n        else {\n            tomoLog.debug(\"Popup window is still open\");\n        }\n    };\n    const checkInterval = setInterval(checkPopup, 1000);\n    return checkInterval;\n}\nexport const signRequest = async (req, core) => {\n    if (!req) {\n        throw new Error(\"Invalid request\");\n    }\n    if (!core) {\n        throw new Error(\"Invalid sdk status\");\n    }\n    // save req\n    const reqString = strToBase64(JSONBig.stringify({\n        ...req,\n        userId: getLocalUserId(core.clientId),\n        loginType: getLocalLoginType(core.clientId),\n    }));\n    await setTemporaryData({ eventId: req.eventId, value: reqString });\n    return new Promise((resolve, reject) => {\n        const popup = openWindow({\n            url: `${core.relayBase}/request?eventId=${req.eventId}`,\n            name: \"Sign Request\",\n        });\n        const listener = (data) => {\n            tomoLog.debug(\"result:\", data);\n            if (data.error) {\n                reject(data.error);\n            }\n            else {\n                resolve(data.result || data.response || data);\n            }\n        };\n        checkPopupClosed(popup, core.events, EventNames.signReq, req.eventId);\n        core.events.once(`${EventNames.signReq}#${req.eventId}`, listener);\n    });\n};\nexport const mfaRequest = async (req, core) => {\n    const loginType = getLocalLoginType(core.clientId);\n    req.loginType = loginType;\n    const reqString = strToBase64(JSONBig.stringify(req));\n    const popup = openWindow({\n        url: `${core.relayBase}/mfa?req=${reqString}`,\n        name: \"mfa Request\",\n    });\n    return new Promise((resolve, reject) => {\n        const listener = (data) => {\n            tomoLog.debug(\"result:\", data);\n            core\n                .getEthAddress()\n                .then((evmAddress) => {\n                if (data.error) {\n                    setLocalPasskey(evmAddress, false);\n                    reject(data.error);\n                }\n                else {\n                    setLocalPasskey(evmAddress, true);\n                    resolve(data.result);\n                }\n            })\n                .catch((e) => {\n                reject(e);\n            });\n        };\n        checkPopupClosed(popup, core.events, EventNames.mfaReq, req.eventId);\n        core.events.once(`${EventNames.mfaReq}#${req.eventId}`, listener);\n    });\n};\nfunction handleMessage(event) {\n    if (event.data.status === \"READY\") {\n        const msg = {\n            type: this.reqType,\n            auth: {\n                jwt: getLocalToken(this.clientId),\n                userId: getLocalUserId(this.clientId),\n                clientId: this.clientId,\n            },\n            ...(this.params || {}),\n            reqString: this.reqString,\n        };\n        console.log(\"msg\", msg);\n        this.postMessage?.(msg, \"*\");\n        return;\n    }\n    if (event.data.isSuccess && event.data.result) {\n        this.onSuccess(event.data);\n    }\n    else if (event.data.isError) {\n        this.onError(event.data);\n    }\n    else if (event.data.isReject) {\n        this.onReject(event.data);\n    }\n    else if (event.data.setAuth) {\n        setLocalToken(this.clientId, event.data.jwt);\n    }\n}\nexport async function setIframeToken(core) {\n    // Create a hidden iframe to get jwt from relay page\n    const { clientId } = core;\n    const jwt = getLocalToken(clientId);\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = `${core.relayBase}/normal`;\n    console.warn(clientId, jwt, iframe);\n    document.body.appendChild(iframe);\n    try {\n        // Wait for jwt from relay page\n        return await new Promise((resolve) => {\n            const messageHandler = (event) => {\n                if (event.data.status === \"READY\") {\n                    // Send auth request after receiving READY message\n                    const msg = {\n                        auth: {\n                            userId: getLocalUserId(clientId),\n                            clientId: clientId,\n                            jwt,\n                            setIframeToken: true,\n                        },\n                    };\n                    iframe.contentWindow?.postMessage(msg, \"*\");\n                    console.warn(\"setIframeToken: msg\", msg);\n                }\n                else if (event.data.setTokenSuccess) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(\"\");\n                }\n            };\n            window.addEventListener(\"message\", messageHandler);\n        });\n    }\n    catch (e) {\n        console.error(\"setIframeToken:\", e);\n    }\n    finally {\n        // Clean up iframe and event listener\n        document.body.removeChild(iframe);\n    }\n}\nexport async function getAuth(core) {\n    const jwt = getLocalToken(core.clientId);\n    if (jwt) {\n        return jwt;\n    }\n    // Create a hidden iframe to get jwt from relay page\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.src = `${core.relayBase}/normal`;\n    document.body.appendChild(iframe);\n    try {\n        // Wait for jwt from relay page\n        return await new Promise((resolve) => {\n            const messageHandler = (event) => {\n                if (event.data.status === \"READY\") {\n                    // Send auth request after receiving READY message\n                    const msg = {\n                        auth: {\n                            clientId: core.clientId,\n                        },\n                    };\n                    iframe.contentWindow?.postMessage(msg, \"*\");\n                }\n                else if (event.data.setAuth && event.data.jwt) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(event.data.jwt);\n                    setLocalToken(core.clientId, event.data.jwt);\n                }\n                else if (event.data.isFail) {\n                    window.removeEventListener(\"message\", messageHandler);\n                    resolve(\"\");\n                }\n            };\n            window.addEventListener(\"message\", messageHandler);\n        });\n    }\n    catch (e) {\n        console.error(\"getAuth:\", e);\n    }\n    finally {\n        // Clean up iframe and event listener\n        document.body.removeChild(iframe);\n    }\n}\nexport const normalRequest = async (req, core) => {\n    const loginType = getLocalLoginType(core.clientId);\n    req.loginType = loginType;\n    const reqString = strToBase64(JSONBig.stringify(req));\n    const popup = openWindow({\n        url: `${core.relayBase}/normal`,\n        name: \"normal Request\",\n    });\n    return new Promise((resolve, reject) => {\n        /**\n         * listen to the message from the popup wallet\n         */\n        const msgHandler = handleMessage.bind({\n            clientId: core.clientId,\n            core: core,\n            reqString: reqString,\n            postMessage: (data, ...args) => popup.postMessage?.(data, ...args),\n            onSuccess: (data) => {\n                console.log(\"event.data.isSuccess>>>\", data.isSuccess, data.result);\n                resolve(data.result);\n            },\n            onError: (data) => {\n                console.log(\"event.data.isError>>>\", data.isError, data.result);\n                reject(data.error);\n            },\n            onReject: (data) => {\n                console.log(\"event.data.isReject>>>\", data.isReject, data.result);\n                reject(data.result);\n            },\n        });\n        window.addEventListener(\"message\", msgHandler);\n        const listener = (data) => {\n            if (data.result) {\n                resolve(data.result);\n            }\n            else {\n                reject(data.error);\n            }\n            /**\n             * remove the listener after the promise is resolved\n             */\n            window.removeEventListener(\"message\", msgHandler);\n        };\n        checkPopupClosed(popup, core.events, EventNames.normalReq, req.eventId);\n        core.events.once(`${EventNames.normalReq}#${req.eventId}`, listener);\n    });\n};\nexport const walletRequest = async (reqType, core, params) => {\n    const walletDomain = core.walletDomain;\n    const eventId = uuidv4();\n    const popup = openWindow({\n        url: `${walletDomain}`,\n        name: \"wallet Request\",\n        height: 740,\n        width: 400,\n    });\n    return new Promise((resolve, reject) => {\n        /**\n         * listen to the message from the popup wallet\n         */\n        const msgHandler = handleMessage.bind({\n            clientId: core.clientId,\n            core: core,\n            reqType,\n            params,\n            postMessage: (data, ...args) => popup.postMessage?.(data, ...args),\n            onSuccess: (data) => {\n                console.log(\"event.data.isSuccess>>>\", data.isSuccess, data.result, reqType);\n                resolve(data.result);\n            },\n            onError: (data) => {\n                console.log(\"event.data.isError>>>\", data.isError, data.result, reqType);\n                reject(data.error);\n            },\n            onReject: (data) => {\n                console.log(\"event.data.isReject>>>\", data.isReject, data.result, reqType);\n                reject(data.result);\n            },\n        });\n        window.addEventListener(\"message\", msgHandler);\n        const listener = (data) => {\n            if (data.result) {\n                resolve(data.result);\n            }\n            else {\n                reject(data.error);\n            }\n            /**\n             * remove the listener after the promise is resolved\n             */\n            window.removeEventListener(\"message\", msgHandler);\n        };\n        checkPopupClosed(popup, core.events, EventNames.normalReq, eventId);\n        core.events.once(`${EventNames.normalReq}#${eventId}`, listener);\n    });\n};\n","import axios from \"axios\";\nimport { version } from \"../../package.json\";\nimport { redirectUriForX } from \"../constant\";\nimport { getAuth } from \"./communicator\";\n// export const BASE_TEST_URL = \"https://app.unyx.tech/api/\";\nexport const BASE_TEST_URL = \"https://fans-tech-backend.tomo.services/api/\";\nexport const BASE_PROD_URL = \"https://apps-prod.tomo.inc/api/\";\nlet baseUrl = BASE_PROD_URL;\nlet api;\nexport const setApi = (core) => {\n    const { connectUrl: baseURL } = core;\n    baseUrl = baseURL;\n    api = axios.create({ baseURL });\n    api.interceptors.request.use(async (config) => {\n        const token = await getAuth(core);\n        if (token) {\n            config.headers = config.headers || {};\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        config.headers[\"Tomo-Sdk-Version\"] = version;\n        return config;\n    }, (error) => {\n        if (error?.response?.status === 401) {\n            return Promise.reject(error);\n        }\n    });\n};\nexport function setHeaders(headers) {\n    if (!api)\n        throw \"api not initialized yet\";\n    api.interceptors.request.use((config) => {\n        Object.entries(headers).forEach(([key, value]) => {\n            config.headers[key] = value;\n        });\n        return config;\n    });\n}\nexport const linkSocialAccount = async (params) => {\n    const { data } = await api.post(\"socialLogin/projectUser/bound\", {\n        ...params,\n    });\n    return data;\n};\nexport const getLinkSocialInfo = async () => {\n    const { data } = await api.get(\"socialLogin/projectUser/bound/status\");\n    return data;\n};\nexport const loginByGmail = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByGoogle\", {\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByKakao = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByKakao\", {\n            accessToken: code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByTelegram = async (authData, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByTelegram\", {\n            telegramAuthData: authData,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginByX = async (code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/loginByTwitter\", {\n            code,\n            redirectUri: redirectUriForX,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const sendRegister = async (email, clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/email/sendRegister?email=${email}&clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const verifyRegister = async (email, code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/email/verifyRegister\", {\n            email,\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginCode = async (email, clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/email/loginCode?email=${email}&clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const loginVerify = async (email, code, clientId) => {\n    try {\n        const { data } = await api.post(\"socialLogin/projectUser/email/loginVerify\", {\n            email,\n            code,\n            clientId,\n        });\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const emailCheck = async (email) => {\n    try {\n        const { data } = await axios.get(`${baseUrl}login/emailCheck?email=${email}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const getUserInfo = async (clientId) => {\n    try {\n        const { data } = await api.get(`socialLogin/projectUser/info?clientId=${clientId}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const mfaPKExisted = async () => {\n    const { data } = await api.get(`socialLogin/mfa/passkey/existence`);\n    return data;\n};\nexport const getPrice = async (tokenSymbols) => {\n    try {\n        const { data } = await axios.get(`${baseUrl}extension/price?symbol=${tokenSymbols}`);\n        return data;\n    }\n    catch (e) {\n        //\n    }\n};\nexport const tradePaswordStatus = async () => {\n    const { data } = await api.get(`/socialLogin/teleGram/user/tradePaswordStatus`);\n    return data;\n};\nexport const hasEmail = async () => {\n    const { data } = await api.get(`socialLogin/projectUser/email`);\n    return data;\n};\nexport const bindEmailCode = async (email) => {\n    const { data } = await api.get(`socialLogin/projectUser/bindEmailCode?email=${email}`);\n    return data;\n};\nexport const bindEmailCodeVerify = async (email, code) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindEmailCodeVerify`, {\n        email,\n        code,\n    });\n    return data;\n};\nexport const getSocialInfo = async () => {\n    const { data } = await api.get(`socialLogin/projectUser/socialInfo`);\n    return data;\n};\nexport const bindX = async (code) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindX`, {\n        code,\n        redirectUri: redirectUriForX,\n    });\n    return data;\n};\nexport const defaultTokens = async () => {\n    const { data } = await axios.get(`${baseUrl}wallet/defaultTokens`);\n    return data;\n};\nexport const dashboardTokens = async (clientId, chainId) => {\n    const { data } = await api.get(`${baseUrl}socialLogin/projectUser/getTokensOnClientId?clientId=${clientId}&chainId=${chainId}`);\n    return data;\n};\n// address, token symbol\nexport const tokenSearch = async (content) => {\n    const { data } = await axios.get(`${baseUrl}wallet/tokens/search?content=${content}`);\n    return data;\n};\nexport const holdEvmTokens = async (address) => {\n    const { data } = await axios.get(`${baseUrl}wallet/holdingTokensOnEthereum?address=${address}`);\n    return data;\n};\nexport const holdSolTokens = async (address) => {\n    const { data } = await axios.get(`${baseUrl}wallet/holdingTokensOnSolana?address=${address}`);\n    return data;\n};\nexport const userWalletTokens = async (address) => {\n    const { data } = await api.get(`socialLogin/projectWallet/userWalletTokens?address=${address}`);\n    return data;\n};\nexport const updateUserWalletTokens = async (tokens) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens`, { tokens });\n    return data;\n};\nexport const addUserWalletToken = async (token, walletAddress) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens/add`, {\n        token,\n        walletAddress,\n    });\n    return data;\n};\nexport const removeUserWalletToken = async (token, walletAddress) => {\n    const { data } = await api.post(`socialLogin/projectWallet/userWalletTokens/remove`, {\n        token,\n        walletAddress,\n    });\n    return data;\n};\nexport const getSwapTokenList = async (chain) => {\n    const { data } = await api.get(`socialLogin/projectWallet/token/swapList?chain=${chain}`);\n    return data;\n};\n//networkType: 'MAINNET' | 'TESTNET' | 'SIGNET'\nexport const getBtcFeeRate = async (networkType) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getFeeRate?networkType=${networkType}`);\n    return data;\n};\nexport const pushBtcTx = async (txHex, network) => {\n    const { data } = await api.post(`socialLogin/projectWallet/bitcoin/pushTx`, {\n        rawTransaction: txHex,\n        networkType: network,\n    });\n    return data;\n};\nexport const getBtcInscriptionData = async (address, network) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getInscriptionData?address=${address}&networkType=${network}`);\n    return data;\n};\nexport const getBtcInscriptionInfo = async (insId, network) => {\n    const { data } = await api.get(`socialLogin/projectWallet/bitcoin/getInscriptionInfo?insId=${insId}&networkType=${network}`);\n    return data;\n};\nexport const getCustomization = async (clientId) => {\n    const { data } = await api.get(`socialLogin/projectUser/customization`, {\n        params: { clientId },\n    });\n    return data;\n};\n// movement sign tx\nexport const signMovementTx = async (params) => {\n    const { data } = await api.post(`socialLogin/projectWallet/movement/signTransaction`, {\n        rawTransaction: params.rawTransaction,\n    }, {\n        headers: {\n            mfa: params.mfa,\n        },\n    });\n    return data;\n};\n// movement sign message\nexport const movementSignMessage = async (params) => {\n    const { data } = await api.post(`socialLogin/projectWallet/movement/signMessage`, {\n        message: params.message,\n    }, {\n        headers: {\n            mfa: params.mfa,\n        },\n    });\n    return data;\n};\nexport const suiSignTransaction = async (params) => {\n    const { data } = await api\n        .post(`socialLogin/projectWallet/sui/signTransaction`, params, {\n        headers: {\n            mfa: params.mfa,\n        },\n    })\n        .catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign transaction\");\n    });\n    return data;\n};\nexport const suiSignPersonalMessage = async (params) => {\n    const { data } = await api\n        .post(`socialLogin/projectWallet/sui/signPersonalMessage`, params, {\n        headers: {\n            mfa: params.mfa,\n        },\n    })\n        .catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign message\");\n    });\n    return data;\n};\nexport const getTomoChains = async (url) => {\n    const ret = await axios.get(`${url || baseUrl}chain/chain_info?platform=SDK`);\n    return ret.data;\n};\nexport const getUserIdWithClientId = async (clientId) => {\n    const { data } = await api.get(`socialLogin/projectUser/ownerUid?clientId=${clientId}`);\n    return data;\n};\nexport const bindInviter = async (inviter) => {\n    const { data } = await api.post(`socialLogin/projectUser/bindInviter`, {\n        inviter,\n    });\n    return data;\n};\nexport const setTemporaryData = async (params) => {\n    const { data } = await api.post(`socialLogin/projectUser/setTemporaryData`, params).catch((error) => {\n        const message = error?.response?.data?.message;\n        return Promise.reject(message || \"Failed to sign message\");\n    });\n    return data;\n};\n","export const btcChains = {\n    mainnet: {\n        ticker: \"BTC\",\n        apiBlockstream: \"https://btc-rpc.lorenzo-protocol.xyz\",\n    },\n    testnet: {\n        ticker: \"BTC\",\n        apiBlockstream: \"https://btc-rpc-testnet.lorenzo-protocol.xyz/testnet\",\n    },\n    signet: {\n        ticker: \"sBTC\",\n        apiBlockstream: \"https://btc-rpc-signet.lorenzo-protocol.xyz/signet\",\n    },\n};\nexport var AddressType;\n(function (AddressType) {\n    AddressType[AddressType[\"P2PKH\"] = 0] = \"P2PKH\";\n    AddressType[AddressType[\"P2WPKH\"] = 1] = \"P2WPKH\";\n    AddressType[AddressType[\"P2TR\"] = 2] = \"P2TR\";\n    AddressType[AddressType[\"P2SH_P2WPKH\"] = 3] = \"P2SH_P2WPKH\";\n    AddressType[AddressType[\"M44_P2WPKH\"] = 4] = \"M44_P2WPKH\";\n    AddressType[AddressType[\"M44_P2TR\"] = 5] = \"M44_P2TR\";\n})(AddressType || (AddressType = {}));\nexport const AddressTypeMap = {\n    P2PKH: \"P2PKH\",\n    P2WPKH: \"P2WPKH\",\n    P2TR: \"P2TR\",\n    P2SH: \"P2SH\",\n};\nexport const networkMap = {\n    mainnet: \"mainnet\",\n    testnet: \"testnet\",\n    signet: \"signet\",\n};\nexport const addressInfos = [\n    {\n        value: AddressType.P2PKH,\n        label: \"P2PKH\",\n        name: \"Legacy (P2PKH)\",\n        displayName: \"Legacy\",\n        hdPath: \"m/44'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2WPKH,\n        label: \"P2WPKH\",\n        name: \"Native Segwit (P2WPKH)\",\n        displayName: \"Native Segwit\",\n        hdPath: \"m/84'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2TR,\n        label: \"P2TR\",\n        name: \"Taproot (P2TR)\",\n        displayName: \"Taproot\",\n        hdPath: \"m/86'/0'/0'/0\",\n    },\n    {\n        value: AddressType.P2SH_P2WPKH,\n        label: \"P2SH\",\n        name: \"Nested Segwit (P2SH-P2WPKH)\",\n        displayName: \"Nested Segwit\",\n        hdPath: \"m/49'/0'/0'/0\",\n    },\n    // {\n    //   value: AddressType.M44_P2WPKH,\n    //   label: \"P2WPKH\",\n    //   name: \"Native SegWit (P2WPKH)\",\n    //   displayName: \"Native SegWit\",\n    //   hdPath: \"m/44'/0'/0'/0\",\n    // },\n    // {\n    //   value: AddressType.M44_P2TR,\n    //   label: \"P2TR\",\n    //   name: \"Taproot (P2TR)\",\n    //   displayName: \"Taproot\",\n    //   hdPath: \"m/44'/0'/0'/0\",\n    // },\n];\n","import EventEmitter from \"eventemitter3\";\nimport { RequestTypes } from \"../../constant\";\nimport { getBtcFeeRate, getBtcInscriptionData, getBtcInscriptionInfo, pushBtcTx } from \"../../utils/apiUtils\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { tomoLog } from \"../../utils/log\";\nimport { constructBtcTxReq, constructSignReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { getBalanceFromNode } from \"./apiUtils\";\nimport { AddressTypeMap, addressInfos, btcChains, networkMap } from \"./type\";\nexport class BitcoinProvider {\n    network = networkMap.mainnet;\n    event = new EventEmitter();\n    addressType = AddressTypeMap.P2TR;\n    address = \"\";\n    pubKey = \"\";\n    core;\n    // connectWallet() {\n    //   return this;\n    // }\n    setCore(core) {\n        this.core = core;\n    }\n    // getWalletProviderName() {\n    //   return \"TOMO Social Wallet\";\n    // }\n    async getAccounts() {\n        return [await this.getAddress()];\n    }\n    async getAddress() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get address failed.\");\n        }\n        if (this.network === networkMap.mainnet) {\n            this.address = data.result.btcMainnetAddressInfo[this.addressType.toLowerCase()];\n            return this.address;\n        }\n        else {\n            this.address = data.result.btcTestnetAddressInfo[this.addressType.toLowerCase()];\n            return this.address;\n        }\n    }\n    async getPublicKey() {\n        return this.getPublicKeyHex();\n    }\n    async getPublicKeyHex() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get public key failed.\");\n        }\n        const key = this.addressType.toLowerCase() + \"PubKey\";\n        if (this.network === networkMap.mainnet) {\n            return data.result.btcMainnetAddressInfo[key];\n        }\n        else {\n            return data.result.btcTestnetAddressInfo[key];\n        }\n    }\n    async getAllAddresses() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result) {\n            throw new Error(\"Get address failed.\");\n        }\n        let info;\n        if (this.network === networkMap.mainnet) {\n            info = data.result.btcMainnetAddressInfo;\n        }\n        else {\n            info = data.result.btcTestnetAddressInfo;\n        }\n        const ret = Object.entries(info)\n            .map(([key, value]) => {\n            const addressInfo = addressInfos.find((x) => x.label === key.toUpperCase());\n            if (!addressInfo) {\n                return null;\n            }\n            return {\n                ...addressInfo,\n                address: value,\n            };\n        })\n            .filter((x) => x !== null);\n        return ret;\n    }\n    async sendBitcoin(to, satAmount, feeRate) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                to,\n                amount: satAmount,\n                feeRate,\n                fromAddress: await this.getAddress(),\n                pubKey: await this.getPublicKeyHex(),\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signPsbt(psbtHex) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.signTx,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                psbtHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signPsbts(psbtHexs) {\n        const request = constructBtcTxReq(this.core.clientId, {\n            reqType: RequestTypes.signTxs,\n            network: this.network,\n            address: this.address,\n            addressType: this.addressType,\n            params: {\n                psbtHexs,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data ? data.split(\",\") : \"\";\n    }\n    async signMessageBIP322(message) {\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"bitcoin\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            addressType: this.addressType,\n            network: this.network,\n            message,\n            signMessageType: \"bip322-simple\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessageEcdsa(message) {\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"bitcoin\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            addressType: this.addressType,\n            network: this.network,\n            message,\n            signMessageType: \"ecdsa\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessage(message, _type = \"ecdsa\") {\n        return _type === \"ecdsa\" ? this.signMessageEcdsa(message) : this.signMessageBIP322(message);\n    }\n    getNetwork() {\n        return this.network;\n    }\n    getAddressType() {\n        return this.addressType;\n    }\n    async switchNetwork(network) {\n        if (network !== \"mainnet\" && network !== \"testnet\" && network !== \"signet\") {\n            throw new Error(\"Invalid network, only support mainnet, testnet, signet\");\n        }\n        this.network = network;\n        await this.getAddress();\n        this.event.emit(\"networkChanged\", network);\n    }\n    async changeAddressType(addressType) {\n        if (!AddressTypeMap[addressType]) {\n            throw new Error(\"Invalid address type, only support P2PKH, P2WPKH, P2TR, P2SH\");\n        }\n        this.addressType = AddressTypeMap[addressType];\n        await this.getAddress();\n        this.event.emit(\"addressTypeChanged\", addressType);\n    }\n    on(eventName, callBack) {\n        this.event.on(eventName, callBack);\n    }\n    off(eventName, callBack) {\n        this.event.off(eventName, callBack);\n    }\n    // Mempool calls\n    async getBalance(address) {\n        try {\n            const btcAddress = address || (await this.getAddress());\n            const btcRes = await getBalanceFromNode(btcChains[this.network].apiBlockstream, btcAddress);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const chain_stats = btcRes?.chain_stats;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const mempool_stats = btcRes?.mempool_stats;\n            const btcBalance = chain_stats.funded_txo_sum -\n                chain_stats.spent_txo_sum +\n                (mempool_stats.funded_txo_sum - mempool_stats.spent_txo_sum);\n            return btcBalance;\n        }\n        catch (e) {\n            return 0;\n        }\n    }\n    async getFeeRate() {\n        try {\n            const data = await getBtcFeeRate(this.network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"Get fee rate failed:\", e);\n            throw new Error(\"Get fee rate failed.\");\n        }\n    }\n    async pushTx(txHex) {\n        try {\n            const data = await pushBtcTx(txHex, this.network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"Get fee rate failed:\", e);\n            throw new Error(\"Get fee rate failed.\");\n        }\n    }\n    async getInscriptionData(address, network = this.network) {\n        try {\n            const data = await getBtcInscriptionData(address, network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"GetInscriptionData failed:\", e);\n            throw new Error(\"GetInscriptionData failed.\");\n        }\n    }\n    async getInscriptionInfo(insId, network = this.network) {\n        try {\n            const data = await getBtcInscriptionInfo(insId, network.toUpperCase());\n            return data.result;\n        }\n        catch (e) {\n            tomoLog.debug(\"GetInscriptionInfo failed:\", e);\n            throw new Error(\"GetInscriptionInfo failed.\");\n        }\n    }\n}\n","import axios from \"axios\";\nexport const getBalanceFromNode = async (baseUrl, address) => {\n    const res = await axios.get(`${baseUrl}/api/address/${address}`, {\n        maxRedirects: 1,\n    });\n    return res.data;\n};\n","import { arbitrum, aurora, avalanche, base, baseSepolia, berachainTestnetbArtio, bevmMainnet, blast, bob, bsc, bscTestnet, chiliz, cronos, fantom, gnosis, linea, mainnet, manta, mantaTestnet, mantle, merlin, mode, opBNB, optimism, palm, polygon, polygonZkEvm, satoshiVM, scroll, sei, sepolia, taiko, xLayer, zetachain, zkLinkNova, zkSync, zora, storyAeneid, } from \"viem/chains\";\nexport const berachainMainnet = {\n    // relay chain info\n    id: 80094,\n    name: \"Berachain Mainnet\",\n    nativeCurrency: {\n        name: \"BERA Token\",\n        symbol: \"BERA\",\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: [\"https://rpc.berachain.com\"],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: \"Berachain Scan\",\n            url: \"https://berascan.com\",\n        },\n    },\n    logo: \"/images/chain/Berachain bArtio.png\",\n    // tomo tg wallet chain info\n    chainName: \"Berachain Mainnet\",\n    nativeCurrencyName: \"BERA Token\",\n    nativeCurrencySymbol: \"BERA\",\n    nativeCurrencyDecimals: 18,\n    // rpcUrls: [\"https://rpc.berachain.com\"],\n    blockExplorerUrl: \"https://berascan.com\",\n    platformType: \"EVM\",\n    icon: \"https://static.tomo.inc/token/berachain.svg\",\n    supportSwap: false,\n    supportGift: false,\n    supportHistory: false,\n};\nexport const allChains = [\n    arbitrum,\n    avalanche,\n    base,\n    baseSepolia,\n    berachainTestnetbArtio,\n    bevmMainnet,\n    blast,\n    bob,\n    bsc,\n    bscTestnet,\n    cronos,\n    fantom,\n    gnosis,\n    linea,\n    mainnet,\n    manta,\n    mantle,\n    merlin,\n    mode,\n    opBNB,\n    optimism,\n    polygon,\n    polygonZkEvm,\n    satoshiVM,\n    scroll,\n    sei,\n    taiko,\n    xLayer,\n    zetachain,\n    zkLinkNova,\n    zkSync,\n    zora,\n    sepolia,\n    mantaTestnet,\n    chiliz,\n    palm,\n    aurora,\n    berachainMainnet,\n    storyAeneid,\n];\nexport const chainId2ChainMap = allChains.reduce((acc, chain) => {\n    acc[chain.id] = chain;\n    return acc;\n}, {});\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport EventEmitter from \"eventemitter3\";\nimport { recoverMessageAddress } from \"viem\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { tomoLog } from \"../../utils/log\";\nimport { constructSignReq, constructTxReq } from \"../../utils/utils\";\nimport { allChains } from \"./chains\";\nimport { getTomoChains } from \"../../utils/apiUtils\";\nconst walletActions = {\n    eth_requestAccounts: \"eth_requestAccounts\",\n    eth_accounts: \"eth_accounts\",\n    wallet_watchAsset: \"wallet_watchAsset\",\n    eth_addEthereumChain: \"eth_addEthereumChain\",\n    eth_switchEthereumChain: \"eth_switchEthereumChain\",\n    wallet_switchEthereumChain: \"wallet_switchEthereumChain\",\n    personal_sign: \"personal_sign\",\n    eth_signTypedData_v4: \"eth_signTypedData_v4\",\n    wallet_getPermissions: \"wallet_getPermissions\",\n    wallet_requestPermissions: \"wallet_requestPermissions\",\n    eth_sendTransaction: \"eth_sendTransaction\",\n    eth_sendRawTransaction: \"eth_sendRawTransaction\",\n    personal_ecRecover: \"personal_ecRecover\",\n    eth_swapTransaction: \"eth_swapTransaction\",\n    eth_approveTransaction: \"eth_approveTransaction\",\n    eth_chainId: \"eth_chainId\",\n};\nconst LsChainIdKey = \"TOMO_WALLET_EVM_CHAIN_ID\";\nexport class EthereumProvider extends EventEmitter {\n    jsonRpcProvider;\n    chainConfig;\n    core;\n    chainList;\n    chainListFromCDN;\n    instanceId;\n    initialPromise;\n    connectUrl;\n    constructor(params) {\n        super();\n        this.connectUrl = params?.connectUrl || \"\";\n        this.instanceId = Date.now().toString().slice(0, -2);\n        this.chainList = allChains;\n        this.chainListFromCDN = [];\n        const chainId = this.chainIdDecimal;\n        this.initialPromise = this.initial(chainId);\n    }\n    async initial(chainId) {\n        const chainConfig = await this.getChainConfig(chainId).catch((e) => {\n            throw e;\n        });\n        this.chainConfig = chainConfig;\n        this.jsonRpcProvider = new JsonRpcProvider(new HttpConnection(chainConfig.rpcUrl));\n        this.connect();\n    }\n    async getChainConfig(chainId) {\n        const chain = this.getChain(chainId);\n        const chainConfig = { chainId: chainId, rpcUrl: \"\" };\n        if (!chain) {\n            let chainList = this.chainListFromCDN;\n            // no chainList or don't find chain, get chainlist from cdn\n            if (chainList.length === 0 || !chainList.find((chain) => chain.id === chainId)) {\n                chainList = await this.getChainListFromCDN();\n            }\n            const chainObj = chainList.find((chain) => chain.id === chainId);\n            if (chainObj) {\n                chainConfig.rpcUrl = chainObj.rpcUrl;\n            }\n            else {\n                throw new Error(\"Unsupported chain\");\n            }\n        }\n        else {\n            chainConfig.rpcUrl = chain.rpcUrls.default.http[0];\n        }\n        return chainConfig;\n    }\n    async getChainListFromCDN() {\n        const res = await getTomoChains(this.connectUrl).catch(() => {\n            return [];\n        });\n        const chainListFromCDN = res\n            .filter((chain) => chain.platformType === \"EVM\")\n            .map((chain) => ({\n            ...chain,\n            rpcUrl: chain.rpcUrls[0],\n            id: chain.chainId,\n        }));\n        this.chainListFromCDN = chainListFromCDN;\n        return chainListFromCDN;\n    }\n    getChain(id) {\n        return this.chainList.find((item) => item.id === id);\n    }\n    async connect() {\n        await this.jsonRpcProvider.connect();\n        this.jsonRpcProvider.connection.on(\"error\", (error) => tomoLog.error(error));\n    }\n    async request(request, context) {\n        tomoLog.debug(request, this.instanceId);\n        await this.initialPromise;\n        if (walletActions[request.method]) {\n            return await this.processWalletAction(request);\n        }\n        return await this.jsonRpcProvider.request(request, context);\n    }\n    get chainIdDecimal() {\n        let chainId = localStorage.getItem(LsChainIdKey) ?? 1;\n        chainId = isNaN(Number(chainId)) ? 1 : Number(chainId);\n        console.log(\"get chain id decimal\", chainId);\n        return chainId;\n    }\n    get chainIdHex() {\n        const idHex = \"0x\" + this.chainIdDecimal.toString(16);\n        return idHex;\n    }\n    async processWalletAction(request) {\n        switch (request.method) {\n            case walletActions.eth_requestAccounts:\n                return await this.requestAddresses();\n            case walletActions.eth_accounts:\n                return await this.getAddresses();\n            case walletActions.personal_sign:\n                return await this.signMessage(request.params[0], request.params[1]);\n            case walletActions.eth_signTypedData_v4:\n                return await this.signTypedData(request.params[0], request.params[1]);\n            case walletActions.eth_sendTransaction:\n                return await this.sendTransaction(request.params[0]);\n            case walletActions.eth_sendRawTransaction:\n                return await this.sendRawTransaction( /* request.params[0] */);\n            case walletActions.wallet_switchEthereumChain:\n                return await this.switchChain(request.params[0].chainId);\n            case walletActions.eth_chainId:\n                return this.chainIdHex;\n            case walletActions.personal_ecRecover:\n                return await this.recoverMessageAddress(request.params[0], request.params[1]);\n            case walletActions.eth_swapTransaction:\n                return await this.swapTransaction(request.params[0]);\n            case walletActions.eth_approveTransaction:\n                return await this.approveTransaction(request.params[0]);\n            default:\n                throw new Error(\"Unsupported wallet action\");\n        }\n    }\n    sendAsync(payload, \n    // eslint-disable-next-line no-unused-vars\n    callback) {\n        this.request(payload)\n            .then((data) => callback(null, data))\n            .catch((e) => callback(e, null));\n    }\n    async getChainId() {\n        return this.chainIdDecimal;\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    async switchChain(chainId) {\n        const chainIdNum = Number(chainId);\n        if (chainIdNum === this.chainIdDecimal) {\n            return;\n        }\n        const chainConfig = await this.getChainConfig(chainIdNum).catch(() => {\n            throw new Error(\"Unsupported chain\");\n        });\n        await this.setChainConfig(chainConfig);\n        console.log(\"switched chain\", chainConfig);\n        this.emit(\"networkChanged\", chainId);\n    }\n    async setChainConfig(chainConfig) {\n        localStorage.setItem(LsChainIdKey, String(chainConfig.chainId));\n        this.chainConfig = chainConfig;\n        this.jsonRpcProvider = new JsonRpcProvider(new HttpConnection(chainConfig.rpcUrl));\n        await this.connect();\n    }\n    async getAddresses() {\n        return await this.requestAddresses();\n    }\n    async requestAddresses() {\n        if (this.core) {\n            const address = await this.core.getEthAddress();\n            return [address];\n        }\n        return [];\n    }\n    async signMessage(msg, address) {\n        const request = constructSignReq(this.core.clientId, {\n            reqType: RequestTypes.signMessage,\n            address,\n            message: msg,\n            chainType: \"evm\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signTypedData(address, msg) {\n        const request = constructSignReq(this.core.clientId, {\n            reqType: RequestTypes.signTypedMessage,\n            address,\n            message: msg,\n            chainType: \"evm\",\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async sendTransaction(params) {\n        console.log(\"chain config\", this.chainConfig);\n        const address = await this.core.getEthAddress();\n        const chainId = this.chainIdDecimal;\n        const request = constructTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            chainId,\n            rpcUrl: this.chainConfig.rpcUrl,\n            address,\n            params,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async recoverMessageAddress(message, signature) {\n        const address = await recoverMessageAddress({\n            message,\n            signature: signature,\n        });\n        return address;\n    }\n    async sendRawTransaction( /* signedTx: string */) {\n        throw new Error(\"Not supported yet\");\n    }\n}\n","import { Connection, PublicKey } from \"@solana/web3.js\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { constructSignReq, constructSolTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nexport class SolanaProvider {\n    publicKey = null;\n    connected = false;\n    isConnected = false;\n    connection;\n    endpoint = \"https://rpc.ankr.com/solana/c2d7e8a3db5dce62e202db3d28cca25e74da5028abbf20764e2961918ba34dfc\";\n    core = null;\n    constructor(endpoint) {\n        if (endpoint) {\n            this.endpoint = endpoint;\n        }\n    }\n    async getPublicKey() {\n        const data = await getUserInfoFromLocalFirst(this.core.clientId);\n        if (!data.result || !data.result.solAddress) {\n            throw new Error(\"Get public key failed.\");\n        }\n        this.publicKey = new PublicKey(data.result.solAddress);\n        return this.publicKey.toBase58();\n    }\n    async getAddress() {\n        return await this.getPublicKey();\n    }\n    async getBalance() {\n        await this.connect();\n        const address = await this.getPublicKey();\n        return await this.connection?.getBalance?.(new PublicKey(address));\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    // async sendSol(\n    //   to: string,\n    //   amount: string,\n    //   mintAddress?: string,\n    // ): Promise<string> {\n    //   await this.getPublicKey();\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.sendTx,\n    //     address: this.publicKey.toBase58(),\n    //     params: {\n    //       to,\n    //       value: amount,\n    //       mintAddress,\n    //     },\n    //   });\n    //   const data: any = await signRequest(request, this.core);\n    //   return data;\n    // }\n    // async swapSol(params: SwapTxParams) {\n    //   await this.getPublicKey();\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.swapTx,\n    //     address: this.publicKey.toBase58(),\n    //     params,\n    //   });\n    //   const data = await signRequest(request, this.core);\n    //   return data;\n    // }\n    async signTransaction(transaction) {\n        await this.getPublicKey();\n        const txHex = await this.getTransactionHex(transaction);\n        const request = constructSolTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.publicKey.toBase58(),\n            params: {\n                type: \"sign\",\n                transaction: txHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    // async signAllTransactions<T extends Transaction | VersionedTransaction>(\n    //   transactions: T[],\n    // ): Promise<T[]> {\n    //   await this.getPublicKey();\n    //   const txs = [];\n    //   for (const tx of transactions) {\n    //     const txHex = await this.getTransactionHex(tx);\n    //     txs.push(txHex);\n    //   }\n    //   const request = constructSolTxReq(this.core.clientId, {\n    //     reqType: RequestTypes.sendTx,\n    //     address: this.publicKey.toBase58(),\n    //     params: {\n    //       transactions: txs,\n    //     },\n    //   });\n    //   const data: any = await signRequest(request, this.core);\n    //   return data;\n    // }\n    async sendTransaction(transaction, connection) {\n        await this.getPublicKey();\n        const txHex = await this.getTransactionHex(transaction, connection);\n        const request = constructSolTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.publicKey.toBase58(),\n            params: {\n                type: \"send\",\n                transaction: txHex,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signMessage(message) {\n        await this.getPublicKey();\n        const messageStr = new TextDecoder().decode(message);\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"solana\",\n            reqType: RequestTypes.signMessage,\n            address: this.publicKey.toBase58(),\n            message: messageStr,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async connect() {\n        this.connection = new Connection(this.endpoint, \"confirmed\");\n        this.connected = true;\n        this.connected = true;\n    }\n    async disconnect() {\n        this.connection = null;\n        this.isConnected = false;\n        this.isConnected = false;\n    }\n    async getTransactionHex(transaction, connection) {\n        let txHex;\n        if (transaction.serializeMessage) {\n            const tx = transaction;\n            if (!tx.feePayer) {\n                if (this.publicKey) {\n                    tx.feePayer = this.publicKey;\n                }\n                else {\n                    this.publicKey = new PublicKey(await this.getPublicKey());\n                    tx.feePayer = this.publicKey;\n                }\n            }\n            if (!this.isConnected) {\n                await this.connect();\n            }\n            const conn = connection || this.connection;\n            if (conn.getLatestBlockhash) {\n                tx.recentBlockhash = (await conn.getLatestBlockhash())?.blockhash;\n            }\n            else {\n                tx.recentBlockhash = (await conn.getRecentBlockhash(\"max\"))?.blockhash;\n            }\n            txHex = tx.serialize({ requireAllSignatures: false, verifySignatures: false }).toString(\"hex\");\n        }\n        else {\n            // txHex = Buffer.from(transaction.serialize()).toString('hex')\n            throw new Error(\"Unsupported transaction type, only support Transaction\");\n        }\n        return txHex;\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding from RFC 4648.\n * @example\n * ```js\n * base16.encode(Uint8Array.from([0x12, 0xab]));\n * // => '12AB'\n * ```\n */\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\n/**\n * base32 encoding from RFC 4648. Has padding.\n * Use `base32nopad` for unpadded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ===='\n * base32.decode('CKVQ====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\n/**\n * base32 encoding from RFC 4648. No padding.\n * Use `base32` for padded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ'\n * base32nopad.decode('CKVQ');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\n/**\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hexnopad` for unpadded version.\n * @example\n * ```js\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG===='\n * base32hex.decode('2ALG====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\n/**\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hex` for padded version.\n * @example\n * ```js\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG'\n * base32hexnopad.decode('2ALG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\n/**\n * base32 encoding from RFC 4648. Doug Crockford's version.\n * https://www.crockford.com/base32.html\n * @example\n * ```js\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ANG'\n * base32crockford.decode('2ANG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\n// prettier-ignore\nconst hasBase64Builtin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toBase64 === 'function' &&\n    typeof Uint8Array.fromBase64 === 'function')();\nconst decodeBase64Builtin = (s, isUrl) => {\n    astr('base64', s);\n    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;\n    const alphabet = isUrl ? 'base64url' : 'base64';\n    if (s.length > 0 && !re.test(s))\n        throw new Error('invalid base64');\n    return Uint8Array.fromBase64(s, { alphabet, lastChunkHandling: 'strict' });\n};\n/**\n * base64 from RFC 4648. Padded.\n * Use `base64nopad` for unpadded version.\n * Also check out `base64url`, `base64urlnopad`.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64 = hasBase64Builtin ? {\n    encode(b) { abytes(b); return b.toBase64(); },\n    decode(s) { return decodeBase64Builtin(s, false); },\n} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 from RFC 4648. No padding.\n * Use `base64` for padded version.\n * @example\n * ```js\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64nopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\n/**\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\n * Use `base64urlnopad` for unpadded version.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64url.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64url = hasBase64Builtin ? {\n    encode(b) { abytes(b); return b.toBase64({ alphabet: 'base64url' }); },\n    decode(s) { return decodeBase64Builtin(s, true); },\n} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\n/**\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\n * Use `base64url` for padded version.\n * @example\n * ```js\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64urlnopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n * @example\n * ```js\n * base58.decode('01abcdef');\n * // => '3UhJW'\n * ```\n */\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n/**\n * base58: flickr version. Check out `base58`.\n */\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\n/**\n * base58: XRP version. Check out `base58`.\n */\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * base58: XMR version. Check out `base58`.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\n/**\n * Method, which creates base58check encoder.\n * Requires function, calculating sha256.\n */\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * bech32 from BIP 173. Operates on words.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32 = genBech32('bech32');\n/**\n * bech32m from BIP 350. Operates on words.\n * It was to mitigate `bech32` weaknesses.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * ```js\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n * ```\n */\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\n// prettier-ignore\nconst hasHexBuiltin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toHex === 'function' &&\n    typeof Uint8Array.fromHex === 'function')();\n// prettier-ignore\nconst hexBuiltin = {\n    encode(data) { abytes(data); return data.toHex(); },\n    decode(s) { astr('hex', s); return Uint8Array.fromHex(s); },\n};\n/**\n * hex string decoder. Uses built-in function, when available.\n * @example\n * ```js\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n * ```\n */\nexport const hex = hasHexBuiltin\n    ? hexBuiltin\n    : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n        if (typeof s !== 'string' || s.length % 2 !== 0)\n            throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n        return s.toLowerCase();\n    }));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n/** @deprecated */\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\n/** @deprecated */\nexport const str = bytesToString; // as in python, but for bytes only\n/** @deprecated */\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\n/** @deprecated */\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map","import { base58 } from \"@scure/base\";\nconst toBase58 = (buffer) => base58.encode(buffer);\nconst fromBase58 = (str) => base58.decode(str);\nexport {\n  fromBase58,\n  toBase58\n};\n//# sourceMappingURL=b58.js.map\n","function fromBase64(base64String) {\n  return Uint8Array.from(atob(base64String), (char) => char.charCodeAt(0));\n}\nconst CHUNK_SIZE = 8192;\nfunction toBase64(bytes) {\n  if (bytes.length < CHUNK_SIZE) {\n    return btoa(String.fromCharCode(...bytes));\n  }\n  let output = \"\";\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    const chunk = bytes.slice(i, i + CHUNK_SIZE);\n    output += String.fromCharCode(...chunk);\n  }\n  return btoa(output);\n}\nexport {\n  fromBase64,\n  toBase64\n};\n//# sourceMappingURL=b64.js.map\n","function fromHex(hexStr) {\n  const normalized = hexStr.startsWith(\"0x\") ? hexStr.slice(2) : hexStr;\n  const padded = normalized.length % 2 === 0 ? normalized : `0${normalized}`;\n  const intArr = padded.match(/[0-9a-fA-F]{2}/g)?.map((byte) => parseInt(byte, 16)) ?? [];\n  if (intArr.length !== padded.length / 2) {\n    throw new Error(`Invalid hex string ${hexStr}`);\n  }\n  return Uint8Array.from(intArr);\n}\nfunction toHex(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nexport {\n  fromHex,\n  toHex\n};\n//# sourceMappingURL=hex.js.map\n","function ulebEncode(num) {\n  const arr = [];\n  let len = 0;\n  if (num === 0) {\n    return [0];\n  }\n  while (num > 0) {\n    arr[len] = num & 127;\n    if (num >>= 7) {\n      arr[len] |= 128;\n    }\n    len += 1;\n  }\n  return arr;\n}\nfunction ulebDecode(arr) {\n  let total = 0;\n  let shift = 0;\n  let len = 0;\n  while (true) {\n    const byte = arr[len];\n    len += 1;\n    total |= (byte & 127) << shift;\n    if ((byte & 128) === 0) {\n      break;\n    }\n    shift += 7;\n  }\n  return {\n    value: total,\n    length: len\n  };\n}\nexport {\n  ulebDecode,\n  ulebEncode\n};\n//# sourceMappingURL=uleb.js.map\n","import { ulebDecode } from \"./uleb.js\";\nclass BcsReader {\n  /**\n   * @param {Uint8Array} data Data to use as a buffer.\n   */\n  constructor(data) {\n    this.bytePosition = 0;\n    this.dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n  }\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes) {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Read U8 value from the buffer and shift cursor by 1.\n   * @returns\n   */\n  read8() {\n    const value = this.dataView.getUint8(this.bytePosition);\n    this.shift(1);\n    return value;\n  }\n  /**\n   * Read U16 value from the buffer and shift cursor by 2.\n   * @returns\n   */\n  read16() {\n    const value = this.dataView.getUint16(this.bytePosition, true);\n    this.shift(2);\n    return value;\n  }\n  /**\n   * Read U32 value from the buffer and shift cursor by 4.\n   * @returns\n   */\n  read32() {\n    const value = this.dataView.getUint32(this.bytePosition, true);\n    this.shift(4);\n    return value;\n  }\n  /**\n   * Read U64 value from the buffer and shift cursor by 8.\n   * @returns\n   */\n  read64() {\n    const value1 = this.read32();\n    const value2 = this.read32();\n    const result = value2.toString(16) + value1.toString(16).padStart(8, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read U128 value from the buffer and shift cursor by 16.\n   */\n  read128() {\n    const value1 = BigInt(this.read64());\n    const value2 = BigInt(this.read64());\n    const result = value2.toString(16) + value1.toString(16).padStart(16, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read U128 value from the buffer and shift cursor by 32.\n   * @returns\n   */\n  read256() {\n    const value1 = BigInt(this.read128());\n    const value2 = BigInt(this.read128());\n    const result = value2.toString(16) + value1.toString(16).padStart(32, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read `num` number of bytes from the buffer and shift cursor by `num`.\n   * @param num Number of bytes to read.\n   */\n  readBytes(num) {\n    const start = this.bytePosition + this.dataView.byteOffset;\n    const value = new Uint8Array(this.dataView.buffer, start, num);\n    this.shift(num);\n    return value;\n  }\n  /**\n   * Read ULEB value - an integer of varying size. Used for enum indexes and\n   * vector lengths.\n   * @returns {Number} The ULEB value.\n   */\n  readULEB() {\n    const start = this.bytePosition + this.dataView.byteOffset;\n    const buffer = new Uint8Array(this.dataView.buffer, start);\n    const { value, length } = ulebDecode(buffer);\n    this.shift(length);\n    return value;\n  }\n  /**\n   * Read a BCS vector: read a length and then apply function `cb` X times\n   * where X is the length of the vector, defined as ULEB in BCS bytes.\n   * @param cb Callback to process elements of vector.\n   * @returns {Array<Any>} Array of the resulting values, returned by callback.\n   */\n  readVec(cb) {\n    const length = this.readULEB();\n    const result = [];\n    for (let i = 0; i < length; i++) {\n      result.push(cb(this, i, length));\n    }\n    return result;\n  }\n}\nexport {\n  BcsReader\n};\n//# sourceMappingURL=reader.js.map\n","import { fromBase58, fromBase64, fromHex, toBase58, toBase64, toHex } from \"@mysten/utils\";\nfunction encodeStr(data, encoding) {\n  switch (encoding) {\n    case \"base58\":\n      return toBase58(data);\n    case \"base64\":\n      return toBase64(data);\n    case \"hex\":\n      return toHex(data);\n    default:\n      throw new Error(\"Unsupported encoding, supported values are: base64, hex\");\n  }\n}\nfunction decodeStr(data, encoding) {\n  switch (encoding) {\n    case \"base58\":\n      return fromBase58(data);\n    case \"base64\":\n      return fromBase64(data);\n    case \"hex\":\n      return fromHex(data);\n    default:\n      throw new Error(\"Unsupported encoding, supported values are: base64, hex\");\n  }\n}\nfunction splitGenericParameters(str, genericSeparators = [\"<\", \">\"]) {\n  const [left, right] = genericSeparators;\n  const tok = [];\n  let word = \"\";\n  let nestedAngleBrackets = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (char === left) {\n      nestedAngleBrackets++;\n    }\n    if (char === right) {\n      nestedAngleBrackets--;\n    }\n    if (nestedAngleBrackets === 0 && char === \",\") {\n      tok.push(word.trim());\n      word = \"\";\n      continue;\n    }\n    word += char;\n  }\n  tok.push(word.trim());\n  return tok;\n}\nexport {\n  decodeStr,\n  encodeStr,\n  splitGenericParameters\n};\n//# sourceMappingURL=utils.js.map\n","import { ulebEncode } from \"./uleb.js\";\nimport { encodeStr } from \"./utils.js\";\nclass BcsWriter {\n  constructor({\n    initialSize = 1024,\n    maxSize = Infinity,\n    allocateSize = 1024\n  } = {}) {\n    this.bytePosition = 0;\n    this.size = initialSize;\n    this.maxSize = maxSize;\n    this.allocateSize = allocateSize;\n    this.dataView = new DataView(new ArrayBuffer(initialSize));\n  }\n  ensureSizeOrGrow(bytes) {\n    const requiredSize = this.bytePosition + bytes;\n    if (requiredSize > this.size) {\n      const nextSize = Math.min(this.maxSize, this.size + this.allocateSize);\n      if (requiredSize > nextSize) {\n        throw new Error(\n          `Attempting to serialize to BCS, but buffer does not have enough size. Allocated size: ${this.size}, Max size: ${this.maxSize}, Required size: ${requiredSize}`\n        );\n      }\n      this.size = nextSize;\n      const nextBuffer = new ArrayBuffer(this.size);\n      new Uint8Array(nextBuffer).set(new Uint8Array(this.dataView.buffer));\n      this.dataView = new DataView(nextBuffer);\n    }\n  }\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes) {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Write a U8 value into a buffer and shift cursor position by 1.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write8(value) {\n    this.ensureSizeOrGrow(1);\n    this.dataView.setUint8(this.bytePosition, Number(value));\n    return this.shift(1);\n  }\n  /**\n   * Write a U16 value into a buffer and shift cursor position by 2.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write16(value) {\n    this.ensureSizeOrGrow(2);\n    this.dataView.setUint16(this.bytePosition, Number(value), true);\n    return this.shift(2);\n  }\n  /**\n   * Write a U32 value into a buffer and shift cursor position by 4.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write32(value) {\n    this.ensureSizeOrGrow(4);\n    this.dataView.setUint32(this.bytePosition, Number(value), true);\n    return this.shift(4);\n  }\n  /**\n   * Write a U64 value into a buffer and shift cursor position by 8.\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write64(value) {\n    toLittleEndian(BigInt(value), 8).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a U128 value into a buffer and shift cursor position by 16.\n   *\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write128(value) {\n    toLittleEndian(BigInt(value), 16).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a U256 value into a buffer and shift cursor position by 16.\n   *\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write256(value) {\n    toLittleEndian(BigInt(value), 32).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a ULEB value into a buffer and shift cursor position by number of bytes\n   * written.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  writeULEB(value) {\n    ulebEncode(value).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a vector into a buffer by first writing the vector length and then calling\n   * a callback on each passed value.\n   *\n   * @param {Array<Any>} vector Array of elements to write.\n   * @param {WriteVecCb} cb Callback to call on each element of the vector.\n   * @returns {this}\n   */\n  writeVec(vector, cb) {\n    this.writeULEB(vector.length);\n    Array.from(vector).forEach((el, i) => cb(this, el, i, vector.length));\n    return this;\n  }\n  /**\n   * Adds support for iterations over the object.\n   * @returns {Uint8Array}\n   */\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.bytePosition; i++) {\n      yield this.dataView.getUint8(i);\n    }\n    return this.toBytes();\n  }\n  /**\n   * Get underlying buffer taking only value bytes (in case initial buffer size was bigger).\n   * @returns {Uint8Array} Resulting bcs.\n   */\n  toBytes() {\n    return new Uint8Array(this.dataView.buffer.slice(0, this.bytePosition));\n  }\n  /**\n   * Represent data as 'hex' or 'base64'\n   * @param encoding Encoding to use: 'base64' or 'hex'\n   */\n  toString(encoding) {\n    return encodeStr(this.toBytes(), encoding);\n  }\n}\nfunction toLittleEndian(bigint, size) {\n  const result = new Uint8Array(size);\n  let i = 0;\n  while (bigint > 0) {\n    result[i] = Number(bigint % BigInt(256));\n    bigint = bigint / BigInt(256);\n    i += 1;\n  }\n  return result;\n}\nexport {\n  BcsWriter\n};\n//# sourceMappingURL=writer.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _write, _serialize, _schema, _bytes;\nimport { fromBase58, fromBase64, toBase58, toBase64, fromHex, toHex } from \"@mysten/utils\";\nimport { BcsReader } from \"./reader.js\";\nimport { ulebEncode } from \"./uleb.js\";\nimport { BcsWriter } from \"./writer.js\";\nconst _BcsType = class _BcsType {\n  constructor(options) {\n    __privateAdd(this, _write);\n    __privateAdd(this, _serialize);\n    this.name = options.name;\n    this.read = options.read;\n    this.serializedSize = options.serializedSize ?? (() => null);\n    __privateSet(this, _write, options.write);\n    __privateSet(this, _serialize, options.serialize ?? ((value, options2) => {\n      const writer = new BcsWriter({\n        initialSize: this.serializedSize(value) ?? void 0,\n        ...options2\n      });\n      __privateGet(this, _write).call(this, value, writer);\n      return writer.toBytes();\n    }));\n    this.validate = options.validate ?? (() => {\n    });\n  }\n  write(value, writer) {\n    this.validate(value);\n    __privateGet(this, _write).call(this, value, writer);\n  }\n  serialize(value, options) {\n    this.validate(value);\n    return new SerializedBcs(this, __privateGet(this, _serialize).call(this, value, options));\n  }\n  parse(bytes) {\n    const reader = new BcsReader(bytes);\n    return this.read(reader);\n  }\n  fromHex(hex) {\n    return this.parse(fromHex(hex));\n  }\n  fromBase58(b64) {\n    return this.parse(fromBase58(b64));\n  }\n  fromBase64(b64) {\n    return this.parse(fromBase64(b64));\n  }\n  transform({\n    name,\n    input,\n    output,\n    validate\n  }) {\n    return new _BcsType({\n      name: name ?? this.name,\n      read: (reader) => output ? output(this.read(reader)) : this.read(reader),\n      write: (value, writer) => __privateGet(this, _write).call(this, input ? input(value) : value, writer),\n      serializedSize: (value) => this.serializedSize(input ? input(value) : value),\n      serialize: (value, options) => __privateGet(this, _serialize).call(this, input ? input(value) : value, options),\n      validate: (value) => {\n        validate?.(value);\n        this.validate(input ? input(value) : value);\n      }\n    });\n  }\n};\n_write = new WeakMap();\n_serialize = new WeakMap();\nlet BcsType = _BcsType;\nconst SERIALIZED_BCS_BRAND = Symbol.for(\"@mysten/serialized-bcs\");\nfunction isSerializedBcs(obj) {\n  return !!obj && typeof obj === \"object\" && obj[SERIALIZED_BCS_BRAND] === true;\n}\nclass SerializedBcs {\n  constructor(type, schema) {\n    __privateAdd(this, _schema);\n    __privateAdd(this, _bytes);\n    __privateSet(this, _schema, type);\n    __privateSet(this, _bytes, schema);\n  }\n  // Used to brand SerializedBcs so that they can be identified, even between multiple copies\n  // of the @mysten/bcs package are installed\n  get [SERIALIZED_BCS_BRAND]() {\n    return true;\n  }\n  toBytes() {\n    return __privateGet(this, _bytes);\n  }\n  toHex() {\n    return toHex(__privateGet(this, _bytes));\n  }\n  toBase64() {\n    return toBase64(__privateGet(this, _bytes));\n  }\n  toBase58() {\n    return toBase58(__privateGet(this, _bytes));\n  }\n  parse() {\n    return __privateGet(this, _schema).parse(__privateGet(this, _bytes));\n  }\n}\n_schema = new WeakMap();\n_bytes = new WeakMap();\nfunction fixedSizeBcsType({\n  size,\n  ...options\n}) {\n  return new BcsType({\n    ...options,\n    serializedSize: () => size\n  });\n}\nfunction uIntBcsType({\n  readMethod,\n  writeMethod,\n  ...options\n}) {\n  return fixedSizeBcsType({\n    ...options,\n    read: (reader) => reader[readMethod](),\n    write: (value, writer) => writer[writeMethod](value),\n    validate: (value) => {\n      if (value < 0 || value > options.maxValue) {\n        throw new TypeError(\n          `Invalid ${options.name} value: ${value}. Expected value in range 0-${options.maxValue}`\n        );\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction bigUIntBcsType({\n  readMethod,\n  writeMethod,\n  ...options\n}) {\n  return fixedSizeBcsType({\n    ...options,\n    read: (reader) => reader[readMethod](),\n    write: (value, writer) => writer[writeMethod](BigInt(value)),\n    validate: (val) => {\n      const value = BigInt(val);\n      if (value < 0 || value > options.maxValue) {\n        throw new TypeError(\n          `Invalid ${options.name} value: ${value}. Expected value in range 0-${options.maxValue}`\n        );\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction dynamicSizeBcsType({\n  serialize,\n  ...options\n}) {\n  const type = new BcsType({\n    ...options,\n    serialize,\n    write: (value, writer) => {\n      for (const byte of type.serialize(value).toBytes()) {\n        writer.write8(byte);\n      }\n    }\n  });\n  return type;\n}\nfunction stringLikeBcsType({\n  toBytes,\n  fromBytes,\n  ...options\n}) {\n  return new BcsType({\n    ...options,\n    read: (reader) => {\n      const length = reader.readULEB();\n      const bytes = reader.readBytes(length);\n      return fromBytes(bytes);\n    },\n    write: (hex, writer) => {\n      const bytes = toBytes(hex);\n      writer.writeULEB(bytes.length);\n      for (let i = 0; i < bytes.length; i++) {\n        writer.write8(bytes[i]);\n      }\n    },\n    serialize: (value) => {\n      const bytes = toBytes(value);\n      const size = ulebEncode(bytes.length);\n      const result = new Uint8Array(size.length + bytes.length);\n      result.set(size, 0);\n      result.set(bytes, size.length);\n      return result;\n    },\n    validate: (value) => {\n      if (typeof value !== \"string\") {\n        throw new TypeError(`Invalid ${options.name} value: ${value}. Expected string`);\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction lazyBcsType(cb) {\n  let lazyType = null;\n  function getType() {\n    if (!lazyType) {\n      lazyType = cb();\n    }\n    return lazyType;\n  }\n  return new BcsType({\n    name: \"lazy\",\n    read: (data) => getType().read(data),\n    serializedSize: (value) => getType().serializedSize(value),\n    write: (value, writer) => getType().write(value, writer),\n    serialize: (value, options) => getType().serialize(value, options).toBytes()\n  });\n}\nexport {\n  BcsType,\n  SerializedBcs,\n  bigUIntBcsType,\n  dynamicSizeBcsType,\n  fixedSizeBcsType,\n  isSerializedBcs,\n  lazyBcsType,\n  stringLikeBcsType,\n  uIntBcsType\n};\n//# sourceMappingURL=bcs-type.js.map\n","import {\n  BcsType,\n  bigUIntBcsType,\n  dynamicSizeBcsType,\n  fixedSizeBcsType,\n  lazyBcsType,\n  stringLikeBcsType,\n  uIntBcsType\n} from \"./bcs-type.js\";\nimport { ulebEncode } from \"./uleb.js\";\nconst bcs = {\n  /**\n   * Creates a BcsType that can be used to read and write an 8-bit unsigned integer.\n   * @example\n   * bcs.u8().serialize(255).toBytes() // Uint8Array [ 255 ]\n   */\n  u8(options) {\n    return uIntBcsType({\n      name: \"u8\",\n      readMethod: \"read8\",\n      writeMethod: \"write8\",\n      size: 1,\n      maxValue: 2 ** 8 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 16-bit unsigned integer.\n   * @example\n   * bcs.u16().serialize(65535).toBytes() // Uint8Array [ 255, 255 ]\n   */\n  u16(options) {\n    return uIntBcsType({\n      name: \"u16\",\n      readMethod: \"read16\",\n      writeMethod: \"write16\",\n      size: 2,\n      maxValue: 2 ** 16 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 32-bit unsigned integer.\n   * @example\n   * bcs.u32().serialize(4294967295).toBytes() // Uint8Array [ 255, 255, 255, 255 ]\n   */\n  u32(options) {\n    return uIntBcsType({\n      name: \"u32\",\n      readMethod: \"read32\",\n      writeMethod: \"write32\",\n      size: 4,\n      maxValue: 2 ** 32 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 64-bit unsigned integer.\n   * @example\n   * bcs.u64().serialize(1).toBytes() // Uint8Array [ 1, 0, 0, 0, 0, 0, 0, 0 ]\n   */\n  u64(options) {\n    return bigUIntBcsType({\n      name: \"u64\",\n      readMethod: \"read64\",\n      writeMethod: \"write64\",\n      size: 8,\n      maxValue: 2n ** 64n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 128-bit unsigned integer.\n   * @example\n   * bcs.u128().serialize(1).toBytes() // Uint8Array [ 1, ..., 0 ]\n   */\n  u128(options) {\n    return bigUIntBcsType({\n      name: \"u128\",\n      readMethod: \"read128\",\n      writeMethod: \"write128\",\n      size: 16,\n      maxValue: 2n ** 128n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 256-bit unsigned integer.\n   * @example\n   * bcs.u256().serialize(1).toBytes() // Uint8Array [ 1, ..., 0 ]\n   */\n  u256(options) {\n    return bigUIntBcsType({\n      name: \"u256\",\n      readMethod: \"read256\",\n      writeMethod: \"write256\",\n      size: 32,\n      maxValue: 2n ** 256n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write boolean values.\n   * @example\n   * bcs.bool().serialize(true).toBytes() // Uint8Array [ 1 ]\n   */\n  bool(options) {\n    return fixedSizeBcsType({\n      name: \"bool\",\n      size: 1,\n      read: (reader) => reader.read8() === 1,\n      write: (value, writer) => writer.write8(value ? 1 : 0),\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"boolean\") {\n          throw new TypeError(`Expected boolean, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write unsigned LEB encoded integers\n   * @example\n   *\n   */\n  uleb128(options) {\n    return dynamicSizeBcsType({\n      name: \"uleb128\",\n      read: (reader) => reader.readULEB(),\n      serialize: (value) => {\n        return Uint8Array.from(ulebEncode(value));\n      },\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType representing a fixed length byte array\n   * @param size The number of bytes this types represents\n   * @example\n   * bcs.bytes(3).serialize(new Uint8Array([1, 2, 3])).toBytes() // Uint8Array [1, 2, 3]\n   */\n  bytes(size, options) {\n    return fixedSizeBcsType({\n      name: `bytes[${size}]`,\n      size,\n      read: (reader) => reader.readBytes(size),\n      write: (value, writer) => {\n        const array = new Uint8Array(value);\n        for (let i = 0; i < size; i++) {\n          writer.write8(array[i] ?? 0);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!value || typeof value !== \"object\" || !(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== size) {\n          throw new TypeError(`Expected array of length ${size}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a variable length byte array\n   *\n   * @example\n   * bcs.byteVector().serialize([1, 2, 3]).toBytes() // Uint8Array [3, 1, 2, 3]\n   */\n  byteVector(options) {\n    return new BcsType({\n      name: `bytesVector`,\n      read: (reader) => {\n        const length = reader.readULEB();\n        return reader.readBytes(length);\n      },\n      write: (value, writer) => {\n        const array = new Uint8Array(value);\n        writer.writeULEB(array.length);\n        for (let i = 0; i < array.length; i++) {\n          writer.write8(array[i] ?? 0);\n        }\n      },\n      ...options,\n      serializedSize: (value) => {\n        const length = \"length\" in value ? value.length : null;\n        return length == null ? null : ulebEncode(length).length + length;\n      },\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!value || typeof value !== \"object\" || !(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType that can ser/de string values.  Strings will be UTF-8 encoded\n   * @example\n   * bcs.string().serialize('a').toBytes() // Uint8Array [ 1, 97 ]\n   */\n  string(options) {\n    return stringLikeBcsType({\n      name: \"string\",\n      toBytes: (value) => new TextEncoder().encode(value),\n      fromBytes: (bytes) => new TextDecoder().decode(bytes),\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that represents a fixed length array of a given type\n   * @param size The number of elements in the array\n   * @param type The BcsType of each element in the array\n   * @example\n   * bcs.fixedArray(3, bcs.u8()).serialize([1, 2, 3]).toBytes() // Uint8Array [ 1, 2, 3 ]\n   */\n  fixedArray(size, type, options) {\n    return new BcsType({\n      name: `${type.name}[${size}]`,\n      read: (reader) => {\n        const result = new Array(size);\n        for (let i = 0; i < size; i++) {\n          result[i] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (const item of value) {\n          type.write(item, writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!value || typeof value !== \"object\" || !(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== size) {\n          throw new TypeError(`Expected array of length ${size}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing an optional value\n   * @param type The BcsType of the optional value\n   * @example\n   * bcs.option(bcs.u8()).serialize(null).toBytes() // Uint8Array [ 0 ]\n   * bcs.option(bcs.u8()).serialize(1).toBytes() // Uint8Array [ 1, 1 ]\n   */\n  option(type) {\n    return bcs.enum(`Option<${type.name}>`, {\n      None: null,\n      Some: type\n    }).transform({\n      input: (value) => {\n        if (value == null) {\n          return { None: true };\n        }\n        return { Some: value };\n      },\n      output: (value) => {\n        if (value.$kind === \"Some\") {\n          return value.Some;\n        }\n        return null;\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a variable length vector of a given type\n   * @param type The BcsType of each element in the vector\n   *\n   * @example\n   * bcs.vector(bcs.u8()).toBytes([1, 2, 3]) // Uint8Array [ 3, 1, 2, 3 ]\n   */\n  vector(type, options) {\n    return new BcsType({\n      name: `vector<${type.name}>`,\n      read: (reader) => {\n        const length = reader.readULEB();\n        const result = new Array(length);\n        for (let i = 0; i < length; i++) {\n          result[i] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        writer.writeULEB(value.length);\n        for (const item of value) {\n          type.write(item, writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!value || typeof value !== \"object\" || !(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a tuple of a given set of types\n   * @param types The BcsTypes for each element in the tuple\n   *\n   * @example\n   * const tuple = bcs.tuple([bcs.u8(), bcs.string(), bcs.bool()])\n   * tuple.serialize([1, 'a', true]).toBytes() // Uint8Array [ 1, 1, 97, 1 ]\n   */\n  tuple(types, options) {\n    return new BcsType({\n      name: `(${types.map((t) => t.name).join(\", \")})`,\n      serializedSize: (values) => {\n        let total = 0;\n        for (let i = 0; i < types.length; i++) {\n          const size = types[i].serializedSize(values[i]);\n          if (size == null) {\n            return null;\n          }\n          total += size;\n        }\n        return total;\n      },\n      read: (reader) => {\n        const result = [];\n        for (const type of types) {\n          result.push(type.read(reader));\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (let i = 0; i < types.length; i++) {\n          types[i].write(value[i], writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!Array.isArray(value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== types.length) {\n          throw new TypeError(`Expected array of length ${types.length}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a struct of a given set of fields\n   * @param name The name of the struct\n   * @param fields The fields of the struct. The order of the fields affects how data is serialized and deserialized\n   *\n   * @example\n   * const struct = bcs.struct('MyStruct', {\n   *  a: bcs.u8(),\n   *  b: bcs.string(),\n   * })\n   * struct.serialize({ a: 1, b: 'a' }).toBytes() // Uint8Array [ 1, 1, 97 ]\n   */\n  struct(name, fields, options) {\n    const canonicalOrder = Object.entries(fields);\n    return new BcsType({\n      name,\n      serializedSize: (values) => {\n        let total = 0;\n        for (const [field, type] of canonicalOrder) {\n          const size = type.serializedSize(values[field]);\n          if (size == null) {\n            return null;\n          }\n          total += size;\n        }\n        return total;\n      },\n      read: (reader) => {\n        const result = {};\n        for (const [field, type] of canonicalOrder) {\n          result[field] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (const [field, type] of canonicalOrder) {\n          type.write(value[field], writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"object\" || value == null) {\n          throw new TypeError(`Expected object, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing an enum of a given set of options\n   * @param name The name of the enum\n   * @param values The values of the enum. The order of the values affects how data is serialized and deserialized.\n   * null can be used to represent a variant with no data.\n   *\n   * @example\n   * const enum = bcs.enum('MyEnum', {\n   *   A: bcs.u8(),\n   *   B: bcs.string(),\n   *   C: null,\n   * })\n   * enum.serialize({ A: 1 }).toBytes() // Uint8Array [ 0, 1 ]\n   * enum.serialize({ B: 'a' }).toBytes() // Uint8Array [ 1, 1, 97 ]\n   * enum.serialize({ C: true }).toBytes() // Uint8Array [ 2 ]\n   */\n  enum(name, values, options) {\n    const canonicalOrder = Object.entries(values);\n    return new BcsType({\n      name,\n      read: (reader) => {\n        const index = reader.readULEB();\n        const enumEntry = canonicalOrder[index];\n        if (!enumEntry) {\n          throw new TypeError(`Unknown value ${index} for enum ${name}`);\n        }\n        const [kind, type] = enumEntry;\n        return {\n          [kind]: type?.read(reader) ?? true,\n          $kind: kind\n        };\n      },\n      write: (value, writer) => {\n        const [name2, val] = Object.entries(value).filter(\n          ([name3]) => Object.hasOwn(values, name3)\n        )[0];\n        for (let i = 0; i < canonicalOrder.length; i++) {\n          const [optionName, optionType] = canonicalOrder[i];\n          if (optionName === name2) {\n            writer.writeULEB(i);\n            optionType?.write(val, writer);\n            return;\n          }\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"object\" || value == null) {\n          throw new TypeError(`Expected object, found ${typeof value}`);\n        }\n        const keys = Object.keys(value).filter(\n          (k) => value[k] !== void 0 && Object.hasOwn(values, k)\n        );\n        if (keys.length !== 1) {\n          throw new TypeError(\n            `Expected object with one key, but found ${keys.length} for type ${name}}`\n          );\n        }\n        const [variant] = keys;\n        if (!Object.hasOwn(values, variant)) {\n          throw new TypeError(`Invalid enum variant ${variant}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a map of a given key and value type\n   * @param keyType The BcsType of the key\n   * @param valueType The BcsType of the value\n   * @example\n   * const map = bcs.map(bcs.u8(), bcs.string())\n   * map.serialize(new Map([[2, 'a']])).toBytes() // Uint8Array [ 1, 2, 1, 97 ]\n   */\n  map(keyType, valueType) {\n    return bcs.vector(bcs.tuple([keyType, valueType])).transform({\n      name: `Map<${keyType.name}, ${valueType.name}>`,\n      input: (value) => {\n        return [...value.entries()];\n      },\n      output: (value) => {\n        const result = /* @__PURE__ */ new Map();\n        for (const [key, val] of value) {\n          result.set(key, val);\n        }\n        return result;\n      }\n    });\n  },\n  /**\n   * Creates a BcsType that wraps another BcsType which is lazily evaluated. This is useful for creating recursive types.\n   * @param cb A callback that returns the BcsType\n   */\n  lazy(cb) {\n    return lazyBcsType(cb);\n  }\n};\nexport {\n  bcs\n};\n//# sourceMappingURL=bcs.js.map\n","const SUI_NS_NAME_REGEX = /^(?!.*(^(?!@)|[-.@])($|[-.@]))(?:[a-z0-9-]{0,63}(?:\\.[a-z0-9-]{0,63})*)?@[a-z0-9-]{0,63}$/i;\nconst SUI_NS_DOMAIN_REGEX = /^(?!.*(^|[-.])($|[-.]))(?:[a-z0-9-]{0,63}\\.)+sui$/i;\nconst MAX_SUI_NS_NAME_LENGTH = 235;\nfunction isValidSuiNSName(name) {\n  if (name.length > MAX_SUI_NS_NAME_LENGTH) {\n    return false;\n  }\n  if (name.includes(\"@\")) {\n    return SUI_NS_NAME_REGEX.test(name);\n  }\n  return SUI_NS_DOMAIN_REGEX.test(name);\n}\nfunction normalizeSuiNSName(name, format = \"at\") {\n  const lowerCase = name.toLowerCase();\n  let parts;\n  if (lowerCase.includes(\"@\")) {\n    if (!SUI_NS_NAME_REGEX.test(lowerCase)) {\n      throw new Error(`Invalid SuiNS name ${name}`);\n    }\n    const [labels, domain] = lowerCase.split(\"@\");\n    parts = [...labels ? labels.split(\".\") : [], domain];\n  } else {\n    if (!SUI_NS_DOMAIN_REGEX.test(lowerCase)) {\n      throw new Error(`Invalid SuiNS name ${name}`);\n    }\n    parts = lowerCase.split(\".\").slice(0, -1);\n  }\n  if (format === \"dot\") {\n    return `${parts.join(\".\")}.sui`;\n  }\n  return `${parts.slice(0, -1).join(\".\")}@${parts[parts.length - 1]}`;\n}\nexport {\n  isValidSuiNSName,\n  normalizeSuiNSName\n};\n//# sourceMappingURL=suins.js.map\n","import { isValidSuiNSName } from \"./suins.js\";\nconst NAME_PATTERN = /^([a-z0-9]+(?:-[a-z0-9]+)*)$/;\nconst VERSION_REGEX = /^\\d+$/;\nconst MAX_APP_SIZE = 64;\nconst NAME_SEPARATOR = \"/\";\nconst isValidNamedPackage = (name) => {\n  const parts = name.split(NAME_SEPARATOR);\n  if (parts.length < 2 || parts.length > 3) return false;\n  const [org, app, version] = parts;\n  if (version !== void 0 && !VERSION_REGEX.test(version)) return false;\n  if (!isValidSuiNSName(org)) return false;\n  return NAME_PATTERN.test(app) && app.length < MAX_APP_SIZE;\n};\nconst isValidNamedType = (type) => {\n  const splitType = type.split(/::|<|>|,/);\n  for (const t of splitType) {\n    if (t.includes(NAME_SEPARATOR) && !isValidNamedPackage(t)) return false;\n  }\n  return true;\n};\nexport {\n  isValidNamedPackage,\n  isValidNamedType\n};\n//# sourceMappingURL=move-registry.js.map\n","import { fromBase58, splitGenericParameters } from \"@mysten/bcs\";\nimport { isValidNamedPackage } from \"./move-registry.js\";\nconst TX_DIGEST_LENGTH = 32;\nfunction isValidTransactionDigest(value) {\n  try {\n    const buffer = fromBase58(value);\n    return buffer.length === TX_DIGEST_LENGTH;\n  } catch (e) {\n    return false;\n  }\n}\nconst SUI_ADDRESS_LENGTH = 32;\nfunction isValidSuiAddress(value) {\n  return isHex(value) && getHexByteLength(value) === SUI_ADDRESS_LENGTH;\n}\nfunction isValidSuiObjectId(value) {\n  return isValidSuiAddress(value);\n}\nfunction parseTypeTag(type) {\n  if (!type.includes(\"::\")) return type;\n  return parseStructTag(type);\n}\nfunction parseStructTag(type) {\n  const [address, module] = type.split(\"::\");\n  const isMvrPackage = isValidNamedPackage(address);\n  const rest = type.slice(address.length + module.length + 4);\n  const name = rest.includes(\"<\") ? rest.slice(0, rest.indexOf(\"<\")) : rest;\n  const typeParams = rest.includes(\"<\") ? splitGenericParameters(rest.slice(rest.indexOf(\"<\") + 1, rest.lastIndexOf(\">\"))).map(\n    (typeParam) => parseTypeTag(typeParam.trim())\n  ) : [];\n  return {\n    address: isMvrPackage ? address : normalizeSuiAddress(address),\n    module,\n    name,\n    typeParams\n  };\n}\nfunction normalizeStructTag(type) {\n  const { address, module, name, typeParams } = typeof type === \"string\" ? parseStructTag(type) : type;\n  const formattedTypeParams = typeParams?.length > 0 ? `<${typeParams.map(\n    (typeParam) => typeof typeParam === \"string\" ? typeParam : normalizeStructTag(typeParam)\n  ).join(\",\")}>` : \"\";\n  return `${address}::${module}::${name}${formattedTypeParams}`;\n}\nfunction normalizeSuiAddress(value, forceAdd0x = false) {\n  let address = value.toLowerCase();\n  if (!forceAdd0x && address.startsWith(\"0x\")) {\n    address = address.slice(2);\n  }\n  return `0x${address.padStart(SUI_ADDRESS_LENGTH * 2, \"0\")}`;\n}\nfunction normalizeSuiObjectId(value, forceAdd0x = false) {\n  return normalizeSuiAddress(value, forceAdd0x);\n}\nfunction isHex(value) {\n  return /^(0x|0X)?[a-fA-F0-9]+$/.test(value) && value.length % 2 === 0;\n}\nfunction getHexByteLength(value) {\n  return /^(0x|0X)/.test(value) ? (value.length - 2) / 2 : value.length / 2;\n}\nexport {\n  SUI_ADDRESS_LENGTH,\n  isValidSuiAddress,\n  isValidSuiObjectId,\n  isValidTransactionDigest,\n  normalizeStructTag,\n  normalizeSuiAddress,\n  normalizeSuiObjectId,\n  parseStructTag\n};\n//# sourceMappingURL=sui-types.js.map\n","import { normalizeSuiObjectId } from \"./sui-types.js\";\nconst SUI_DECIMALS = 9;\nconst MIST_PER_SUI = BigInt(1e9);\nconst MOVE_STDLIB_ADDRESS = \"0x1\";\nconst SUI_FRAMEWORK_ADDRESS = \"0x2\";\nconst SUI_SYSTEM_ADDRESS = \"0x3\";\nconst SUI_CLOCK_OBJECT_ID = normalizeSuiObjectId(\"0x6\");\nconst SUI_SYSTEM_MODULE_NAME = \"sui_system\";\nconst SUI_TYPE_ARG = `${SUI_FRAMEWORK_ADDRESS}::sui::SUI`;\nconst SUI_SYSTEM_STATE_OBJECT_ID = normalizeSuiObjectId(\"0x5\");\nexport {\n  MIST_PER_SUI,\n  MOVE_STDLIB_ADDRESS,\n  SUI_CLOCK_OBJECT_ID,\n  SUI_DECIMALS,\n  SUI_FRAMEWORK_ADDRESS,\n  SUI_SYSTEM_ADDRESS,\n  SUI_SYSTEM_MODULE_NAME,\n  SUI_SYSTEM_STATE_OBJECT_ID,\n  SUI_TYPE_ARG\n};\n//# sourceMappingURL=constants.js.map\n","/**\n * Internal helpers for blake hash.\n * @module\n */\nimport { rotr } from \"./utils.js\";\n/**\n * Internal blake variable.\n * For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n */\n// prettier-ignore\nexport const BSIGMA = /* @__PURE__ */ Uint8Array.from([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    // Blake1, unused in others\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n]);\n// Mixing function G splitted in two halfs\nexport function G1s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 16);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 12);\n    return { a, b, c, d };\n}\nexport function G2s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 8);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 7);\n    return { a, b, c, d };\n}\n//# sourceMappingURL=_blake.js.map","/**\n * blake2b (64-bit) & blake2s (8 to 32-bit) hash functions.\n * b could have been faster, but there is no fast u64 in js, so s is 1.5x faster.\n * @module\n */\nimport { BSIGMA, G1s, G2s } from \"./_blake.js\";\nimport { SHA256_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createOptHasher, Hash, swap32IfBE, swap8IfBE, toBytes, u32 } from \"./utils.js\";\n// Same as SHA512_IV, but swapped endianness: LE instead of BE. iv[1] is iv[0], etc.\nconst B2B_IV = /* @__PURE__ */ Uint32Array.from([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19,\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction checkBlake2Opts(outputLen, opts = {}, keyLen, saltLen, persLen) {\n    anumber(keyLen);\n    if (outputLen < 0 || outputLen > keyLen)\n        throw new Error('outputLen bigger than keyLen');\n    const { key, salt, personalization } = opts;\n    if (key !== undefined && (key.length < 1 || key.length > keyLen))\n        throw new Error('key length must be undefined or 1..' + keyLen);\n    if (salt !== undefined && salt.length !== saltLen)\n        throw new Error('salt must be undefined or ' + saltLen);\n    if (personalization !== undefined && personalization.length !== persLen)\n        throw new Error('personalization must be undefined or ' + persLen);\n}\n/** Class, from which others are subclassed. */\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        this.length = 0;\n        this.pos = 0;\n        anumber(blockLen);\n        anumber(outputLen);\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.buffer = new Uint8Array(blockLen);\n        this.buffer32 = u32(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                swap32IfBE(buffer32);\n                this.compress(buffer32, 0, false);\n                swap32IfBE(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                swap32IfBE(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                swap32IfBE(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        clean(this.buffer.subarray(pos));\n        swap32IfBE(buffer32);\n        this.compress(buffer32, 0, true);\n        swap32IfBE(buffer32);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = swap8IfBE(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.buffer.set(buffer);\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        // @ts-ignore\n        to.outputLen = outputLen;\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport class BLAKE2b extends BLAKE2 {\n    constructor(opts = {}) {\n        const olen = opts.dkLen === undefined ? 64 : opts.dkLen;\n        super(128, olen);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        checkBlake2Opts(olen, opts, 64, 16, 16);\n        let { key, personalization, salt } = opts;\n        let keyLength = 0;\n        if (key !== undefined) {\n            key = toBytes(key);\n            keyLength = key.length;\n        }\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (salt !== undefined) {\n            salt = toBytes(salt);\n            const slt = u32(salt);\n            this.v4l ^= swap8IfBE(slt[0]);\n            this.v4h ^= swap8IfBE(slt[1]);\n            this.v5l ^= swap8IfBE(slt[2]);\n            this.v5h ^= swap8IfBE(slt[3]);\n        }\n        if (personalization !== undefined) {\n            personalization = toBytes(personalization);\n            const pers = u32(personalization);\n            this.v6l ^= swap8IfBE(pers[0]);\n            this.v6h ^= swap8IfBE(pers[1]);\n            this.v7l ^= swap8IfBE(pers[2]);\n            this.v7h ^= swap8IfBE(pers[3]);\n        }\n        if (key !== undefined) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(key);\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = BSIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        clean(BBUF);\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer32);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2b hash function. 64-bit. 1.5x slower than blake2s in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2b = /* @__PURE__ */ createOptHasher((opts) => new BLAKE2b(opts));\n// prettier-ignore\nexport function compress(s, offset, msg, rounds, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    let j = 0;\n    for (let i = 0; i < rounds; i++) {\n        ({ a: v0, b: v4, c: v8, d: v12 } = G1s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v0, b: v4, c: v8, d: v12 } = G2s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G1s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G2s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G1s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G2s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G1s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G2s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G1s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G2s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G1s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G2s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G1s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G2s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G1s(v3, v4, v9, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G2s(v3, v4, v9, v14, msg[offset + s[j++]]));\n    }\n    return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };\n}\nconst B2S_IV = SHA256_IV;\nexport class BLAKE2s extends BLAKE2 {\n    constructor(opts = {}) {\n        const olen = opts.dkLen === undefined ? 32 : opts.dkLen;\n        super(64, olen);\n        // Internal state, same as SHA-256\n        this.v0 = B2S_IV[0] | 0;\n        this.v1 = B2S_IV[1] | 0;\n        this.v2 = B2S_IV[2] | 0;\n        this.v3 = B2S_IV[3] | 0;\n        this.v4 = B2S_IV[4] | 0;\n        this.v5 = B2S_IV[5] | 0;\n        this.v6 = B2S_IV[6] | 0;\n        this.v7 = B2S_IV[7] | 0;\n        checkBlake2Opts(olen, opts, 32, 8, 8);\n        let { key, personalization, salt } = opts;\n        let keyLength = 0;\n        if (key !== undefined) {\n            key = toBytes(key);\n            keyLength = key.length;\n        }\n        this.v0 ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (salt !== undefined) {\n            salt = toBytes(salt);\n            const slt = u32(salt);\n            this.v4 ^= swap8IfBE(slt[0]);\n            this.v5 ^= swap8IfBE(slt[1]);\n        }\n        if (personalization !== undefined) {\n            personalization = toBytes(personalization);\n            const pers = u32(personalization);\n            this.v6 ^= swap8IfBE(pers[0]);\n            this.v7 ^= swap8IfBE(pers[1]);\n        }\n        if (key !== undefined) {\n            // Pad to blockLen and update\n            abytes(key);\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(key);\n            this.update(tmp);\n        }\n    }\n    get() {\n        const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;\n        return [v0, v1, v2, v3, v4, v5, v6, v7];\n    }\n    // prettier-ignore\n    set(v0, v1, v2, v3, v4, v5, v6, v7) {\n        this.v0 = v0 | 0;\n        this.v1 = v1 | 0;\n        this.v2 = v2 | 0;\n        this.v3 = v3 | 0;\n        this.v4 = v4 | 0;\n        this.v5 = v5 | 0;\n        this.v6 = v6 | 0;\n        this.v7 = v7 | 0;\n    }\n    compress(msg, offset, isLast) {\n        const { h, l } = u64.fromBig(BigInt(this.length));\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(BSIGMA, offset, msg, 10, this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7, B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l ^ B2S_IV[4], h ^ B2S_IV[5], isLast ? ~B2S_IV[6] : B2S_IV[6], B2S_IV[7]);\n        this.v0 ^= v0 ^ v8;\n        this.v1 ^= v1 ^ v9;\n        this.v2 ^= v2 ^ v10;\n        this.v3 ^= v3 ^ v11;\n        this.v4 ^= v4 ^ v12;\n        this.v5 ^= v5 ^ v13;\n        this.v6 ^= v6 ^ v14;\n        this.v7 ^= v7 ^ v15;\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer32);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. 1.5x faster than blake2b in JS.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2s = /* @__PURE__ */ createOptHasher((opts) => new BLAKE2s(opts));\n//# sourceMappingURL=blake2.js.map","/**\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\n * @module\n * @deprecated\n */\nimport { BLAKE2b as B2B, blake2b as b2b } from \"./blake2.js\";\n/** @deprecated Use import from `noble/hashes/blake2` module */\nexport const BLAKE2b = B2B;\n/** @deprecated Use import from `noble/hashes/blake2` module */\nexport const blake2b = b2b;\n//# sourceMappingURL=blake2b.js.map","import { splitGenericParameters } from \"@mysten/bcs\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nconst VECTOR_REGEX = /^vector<(.+)>$/;\nconst STRUCT_REGEX = /^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;\nclass TypeTagSerializer {\n  static parseFromStr(str, normalizeAddress = false) {\n    if (str === \"address\") {\n      return { address: null };\n    } else if (str === \"bool\") {\n      return { bool: null };\n    } else if (str === \"u8\") {\n      return { u8: null };\n    } else if (str === \"u16\") {\n      return { u16: null };\n    } else if (str === \"u32\") {\n      return { u32: null };\n    } else if (str === \"u64\") {\n      return { u64: null };\n    } else if (str === \"u128\") {\n      return { u128: null };\n    } else if (str === \"u256\") {\n      return { u256: null };\n    } else if (str === \"signer\") {\n      return { signer: null };\n    }\n    const vectorMatch = str.match(VECTOR_REGEX);\n    if (vectorMatch) {\n      return {\n        vector: TypeTagSerializer.parseFromStr(vectorMatch[1], normalizeAddress)\n      };\n    }\n    const structMatch = str.match(STRUCT_REGEX);\n    if (structMatch) {\n      const address = normalizeAddress ? normalizeSuiAddress(structMatch[1]) : structMatch[1];\n      return {\n        struct: {\n          address,\n          module: structMatch[2],\n          name: structMatch[3],\n          typeParams: structMatch[5] === void 0 ? [] : TypeTagSerializer.parseStructTypeArgs(structMatch[5], normalizeAddress)\n        }\n      };\n    }\n    throw new Error(`Encountered unexpected token when parsing type args for ${str}`);\n  }\n  static parseStructTypeArgs(str, normalizeAddress = false) {\n    return splitGenericParameters(str).map(\n      (tok) => TypeTagSerializer.parseFromStr(tok, normalizeAddress)\n    );\n  }\n  static tagToString(tag) {\n    if (\"bool\" in tag) {\n      return \"bool\";\n    }\n    if (\"u8\" in tag) {\n      return \"u8\";\n    }\n    if (\"u16\" in tag) {\n      return \"u16\";\n    }\n    if (\"u32\" in tag) {\n      return \"u32\";\n    }\n    if (\"u64\" in tag) {\n      return \"u64\";\n    }\n    if (\"u128\" in tag) {\n      return \"u128\";\n    }\n    if (\"u256\" in tag) {\n      return \"u256\";\n    }\n    if (\"address\" in tag) {\n      return \"address\";\n    }\n    if (\"signer\" in tag) {\n      return \"signer\";\n    }\n    if (\"vector\" in tag) {\n      return `vector<${TypeTagSerializer.tagToString(tag.vector)}>`;\n    }\n    if (\"struct\" in tag) {\n      const struct = tag.struct;\n      const typeParams = struct.typeParams.map(TypeTagSerializer.tagToString).join(\", \");\n      return `${struct.address}::${struct.module}::${struct.name}${typeParams ? `<${typeParams}>` : \"\"}`;\n    }\n    throw new Error(\"Invalid TypeTag\");\n  }\n}\nexport {\n  TypeTagSerializer\n};\n//# sourceMappingURL=type-tag-serializer.js.map\n","import { bcs, fromBase58, fromBase64, fromHex, toBase58, toBase64, toHex } from \"@mysten/bcs\";\nimport { isValidSuiAddress, normalizeSuiAddress, SUI_ADDRESS_LENGTH } from \"../utils/sui-types.js\";\nimport { TypeTagSerializer } from \"./type-tag-serializer.js\";\nfunction unsafe_u64(options) {\n  return bcs.u64({\n    name: \"unsafe_u64\",\n    ...options\n  }).transform({\n    input: (val) => val,\n    output: (val) => Number(val)\n  });\n}\nfunction optionEnum(type) {\n  return bcs.enum(\"Option\", {\n    None: null,\n    Some: type\n  });\n}\nconst Address = bcs.bytes(SUI_ADDRESS_LENGTH).transform({\n  validate: (val) => {\n    const address = typeof val === \"string\" ? val : toHex(val);\n    if (!address || !isValidSuiAddress(normalizeSuiAddress(address))) {\n      throw new Error(`Invalid Sui address ${address}`);\n    }\n  },\n  input: (val) => typeof val === \"string\" ? fromHex(normalizeSuiAddress(val)) : val,\n  output: (val) => normalizeSuiAddress(toHex(val))\n});\nconst ObjectDigest = bcs.vector(bcs.u8()).transform({\n  name: \"ObjectDigest\",\n  input: (value) => fromBase58(value),\n  output: (value) => toBase58(new Uint8Array(value)),\n  validate: (value) => {\n    if (fromBase58(value).length !== 32) {\n      throw new Error(\"ObjectDigest must be 32 bytes\");\n    }\n  }\n});\nconst SuiObjectRef = bcs.struct(\"SuiObjectRef\", {\n  objectId: Address,\n  version: bcs.u64(),\n  digest: ObjectDigest\n});\nconst SharedObjectRef = bcs.struct(\"SharedObjectRef\", {\n  objectId: Address,\n  initialSharedVersion: bcs.u64(),\n  mutable: bcs.bool()\n});\nconst ObjectArg = bcs.enum(\"ObjectArg\", {\n  ImmOrOwnedObject: SuiObjectRef,\n  SharedObject: SharedObjectRef,\n  Receiving: SuiObjectRef\n});\nconst Owner = bcs.enum(\"Owner\", {\n  AddressOwner: Address,\n  ObjectOwner: Address,\n  Shared: bcs.struct(\"Shared\", {\n    initialSharedVersion: bcs.u64()\n  }),\n  Immutable: null,\n  ConsensusV2: bcs.struct(\"ConsensusV2\", {\n    authenticator: bcs.enum(\"Authenticator\", {\n      SingleOwner: Address\n    }),\n    startVersion: bcs.u64()\n  })\n});\nconst CallArg = bcs.enum(\"CallArg\", {\n  Pure: bcs.struct(\"Pure\", {\n    bytes: bcs.vector(bcs.u8()).transform({\n      input: (val) => typeof val === \"string\" ? fromBase64(val) : val,\n      output: (val) => toBase64(new Uint8Array(val))\n    })\n  }),\n  Object: ObjectArg\n});\nconst InnerTypeTag = bcs.enum(\"TypeTag\", {\n  bool: null,\n  u8: null,\n  u64: null,\n  u128: null,\n  address: null,\n  signer: null,\n  vector: bcs.lazy(() => InnerTypeTag),\n  struct: bcs.lazy(() => StructTag),\n  u16: null,\n  u32: null,\n  u256: null\n});\nconst TypeTag = InnerTypeTag.transform({\n  input: (typeTag) => typeof typeTag === \"string\" ? TypeTagSerializer.parseFromStr(typeTag, true) : typeTag,\n  output: (typeTag) => TypeTagSerializer.tagToString(typeTag)\n});\nconst Argument = bcs.enum(\"Argument\", {\n  GasCoin: null,\n  Input: bcs.u16(),\n  Result: bcs.u16(),\n  NestedResult: bcs.tuple([bcs.u16(), bcs.u16()])\n});\nconst ProgrammableMoveCall = bcs.struct(\"ProgrammableMoveCall\", {\n  package: Address,\n  module: bcs.string(),\n  function: bcs.string(),\n  typeArguments: bcs.vector(TypeTag),\n  arguments: bcs.vector(Argument)\n});\nconst Command = bcs.enum(\"Command\", {\n  /**\n   * A Move Call - any public Move function can be called via\n   * this transaction. The results can be used that instant to pass\n   * into the next transaction.\n   */\n  MoveCall: ProgrammableMoveCall,\n  /**\n   * Transfer vector of objects to a receiver.\n   */\n  TransferObjects: bcs.struct(\"TransferObjects\", {\n    objects: bcs.vector(Argument),\n    address: Argument\n  }),\n  // /**\n  //  * Split `amount` from a `coin`.\n  //  */\n  SplitCoins: bcs.struct(\"SplitCoins\", {\n    coin: Argument,\n    amounts: bcs.vector(Argument)\n  }),\n  // /**\n  //  * Merge Vector of Coins (`sources`) into a `destination`.\n  //  */\n  MergeCoins: bcs.struct(\"MergeCoins\", {\n    destination: Argument,\n    sources: bcs.vector(Argument)\n  }),\n  // /**\n  //  * Publish a Move module.\n  //  */\n  Publish: bcs.struct(\"Publish\", {\n    modules: bcs.vector(\n      bcs.vector(bcs.u8()).transform({\n        input: (val) => typeof val === \"string\" ? fromBase64(val) : val,\n        output: (val) => toBase64(new Uint8Array(val))\n      })\n    ),\n    dependencies: bcs.vector(Address)\n  }),\n  // /**\n  //  * Build a vector of objects using the input arguments.\n  //  * It is impossible to export construct a `vector<T: key>` otherwise,\n  //  * so this call serves a utility function.\n  //  */\n  MakeMoveVec: bcs.struct(\"MakeMoveVec\", {\n    type: optionEnum(TypeTag).transform({\n      input: (val) => val === null ? {\n        None: true\n      } : {\n        Some: val\n      },\n      output: (val) => val.Some ?? null\n    }),\n    elements: bcs.vector(Argument)\n  }),\n  Upgrade: bcs.struct(\"Upgrade\", {\n    modules: bcs.vector(\n      bcs.vector(bcs.u8()).transform({\n        input: (val) => typeof val === \"string\" ? fromBase64(val) : val,\n        output: (val) => toBase64(new Uint8Array(val))\n      })\n    ),\n    dependencies: bcs.vector(Address),\n    package: Address,\n    ticket: Argument\n  })\n});\nconst ProgrammableTransaction = bcs.struct(\"ProgrammableTransaction\", {\n  inputs: bcs.vector(CallArg),\n  commands: bcs.vector(Command)\n});\nconst TransactionKind = bcs.enum(\"TransactionKind\", {\n  ProgrammableTransaction,\n  ChangeEpoch: null,\n  Genesis: null,\n  ConsensusCommitPrologue: null\n});\nconst TransactionExpiration = bcs.enum(\"TransactionExpiration\", {\n  None: null,\n  Epoch: unsafe_u64()\n});\nconst StructTag = bcs.struct(\"StructTag\", {\n  address: Address,\n  module: bcs.string(),\n  name: bcs.string(),\n  typeParams: bcs.vector(InnerTypeTag)\n});\nconst GasData = bcs.struct(\"GasData\", {\n  payment: bcs.vector(SuiObjectRef),\n  owner: Address,\n  price: bcs.u64(),\n  budget: bcs.u64()\n});\nconst TransactionDataV1 = bcs.struct(\"TransactionDataV1\", {\n  kind: TransactionKind,\n  sender: Address,\n  gasData: GasData,\n  expiration: TransactionExpiration\n});\nconst TransactionData = bcs.enum(\"TransactionData\", {\n  V1: TransactionDataV1\n});\nconst IntentScope = bcs.enum(\"IntentScope\", {\n  TransactionData: null,\n  TransactionEffects: null,\n  CheckpointSummary: null,\n  PersonalMessage: null\n});\nconst IntentVersion = bcs.enum(\"IntentVersion\", {\n  V0: null\n});\nconst AppId = bcs.enum(\"AppId\", {\n  Sui: null\n});\nconst Intent = bcs.struct(\"Intent\", {\n  scope: IntentScope,\n  version: IntentVersion,\n  appId: AppId\n});\nfunction IntentMessage(T) {\n  return bcs.struct(`IntentMessage<${T.name}>`, {\n    intent: Intent,\n    value: T\n  });\n}\nconst CompressedSignature = bcs.enum(\"CompressedSignature\", {\n  ED25519: bcs.fixedArray(64, bcs.u8()),\n  Secp256k1: bcs.fixedArray(64, bcs.u8()),\n  Secp256r1: bcs.fixedArray(64, bcs.u8()),\n  ZkLogin: bcs.vector(bcs.u8())\n});\nconst PublicKey = bcs.enum(\"PublicKey\", {\n  ED25519: bcs.fixedArray(32, bcs.u8()),\n  Secp256k1: bcs.fixedArray(33, bcs.u8()),\n  Secp256r1: bcs.fixedArray(33, bcs.u8()),\n  ZkLogin: bcs.vector(bcs.u8())\n});\nconst MultiSigPkMap = bcs.struct(\"MultiSigPkMap\", {\n  pubKey: PublicKey,\n  weight: bcs.u8()\n});\nconst MultiSigPublicKey = bcs.struct(\"MultiSigPublicKey\", {\n  pk_map: bcs.vector(MultiSigPkMap),\n  threshold: bcs.u16()\n});\nconst MultiSig = bcs.struct(\"MultiSig\", {\n  sigs: bcs.vector(CompressedSignature),\n  bitmap: bcs.u16(),\n  multisig_pk: MultiSigPublicKey\n});\nconst base64String = bcs.vector(bcs.u8()).transform({\n  input: (val) => typeof val === \"string\" ? fromBase64(val) : val,\n  output: (val) => toBase64(new Uint8Array(val))\n});\nconst SenderSignedTransaction = bcs.struct(\"SenderSignedTransaction\", {\n  intentMessage: IntentMessage(TransactionData),\n  txSignatures: bcs.vector(base64String)\n});\nconst SenderSignedData = bcs.vector(SenderSignedTransaction, {\n  name: \"SenderSignedData\"\n});\nconst PasskeyAuthenticator = bcs.struct(\"PasskeyAuthenticator\", {\n  authenticatorData: bcs.vector(bcs.u8()),\n  clientDataJson: bcs.string(),\n  userSignature: bcs.vector(bcs.u8())\n});\nexport {\n  Address,\n  AppId,\n  Argument,\n  CallArg,\n  Command,\n  CompressedSignature,\n  GasData,\n  Intent,\n  IntentMessage,\n  IntentScope,\n  IntentVersion,\n  MultiSig,\n  MultiSigPkMap,\n  MultiSigPublicKey,\n  ObjectArg,\n  ObjectDigest,\n  Owner,\n  PasskeyAuthenticator,\n  ProgrammableMoveCall,\n  ProgrammableTransaction,\n  PublicKey,\n  SenderSignedData,\n  SenderSignedTransaction,\n  SharedObjectRef,\n  StructTag,\n  SuiObjectRef,\n  TransactionData,\n  TransactionDataV1,\n  TransactionExpiration,\n  TransactionKind,\n  TypeTag,\n  base64String\n};\n//# sourceMappingURL=bcs.js.map\n","import { bcs } from \"@mysten/bcs\";\nimport { Address, ObjectDigest, Owner, SuiObjectRef } from \"./bcs.js\";\nconst PackageUpgradeError = bcs.enum(\"PackageUpgradeError\", {\n  UnableToFetchPackage: bcs.struct(\"UnableToFetchPackage\", { packageId: Address }),\n  NotAPackage: bcs.struct(\"NotAPackage\", { objectId: Address }),\n  IncompatibleUpgrade: null,\n  DigestDoesNotMatch: bcs.struct(\"DigestDoesNotMatch\", { digest: bcs.vector(bcs.u8()) }),\n  UnknownUpgradePolicy: bcs.struct(\"UnknownUpgradePolicy\", { policy: bcs.u8() }),\n  PackageIDDoesNotMatch: bcs.struct(\"PackageIDDoesNotMatch\", {\n    packageId: Address,\n    ticketId: Address\n  })\n});\nconst ModuleId = bcs.struct(\"ModuleId\", {\n  address: Address,\n  name: bcs.string()\n});\nconst MoveLocation = bcs.struct(\"MoveLocation\", {\n  module: ModuleId,\n  function: bcs.u16(),\n  instruction: bcs.u16(),\n  functionName: bcs.option(bcs.string())\n});\nconst CommandArgumentError = bcs.enum(\"CommandArgumentError\", {\n  TypeMismatch: null,\n  InvalidBCSBytes: null,\n  InvalidUsageOfPureArg: null,\n  InvalidArgumentToPrivateEntryFunction: null,\n  IndexOutOfBounds: bcs.struct(\"IndexOutOfBounds\", { idx: bcs.u16() }),\n  SecondaryIndexOutOfBounds: bcs.struct(\"SecondaryIndexOutOfBounds\", {\n    resultIdx: bcs.u16(),\n    secondaryIdx: bcs.u16()\n  }),\n  InvalidResultArity: bcs.struct(\"InvalidResultArity\", { resultIdx: bcs.u16() }),\n  InvalidGasCoinUsage: null,\n  InvalidValueUsage: null,\n  InvalidObjectByValue: null,\n  InvalidObjectByMutRef: null,\n  SharedObjectOperationNotAllowed: null\n});\nconst TypeArgumentError = bcs.enum(\"TypeArgumentError\", {\n  TypeNotFound: null,\n  ConstraintNotSatisfied: null\n});\nconst ExecutionFailureStatus = bcs.enum(\"ExecutionFailureStatus\", {\n  InsufficientGas: null,\n  InvalidGasObject: null,\n  InvariantViolation: null,\n  FeatureNotYetSupported: null,\n  MoveObjectTooBig: bcs.struct(\"MoveObjectTooBig\", {\n    objectSize: bcs.u64(),\n    maxObjectSize: bcs.u64()\n  }),\n  MovePackageTooBig: bcs.struct(\"MovePackageTooBig\", {\n    objectSize: bcs.u64(),\n    maxObjectSize: bcs.u64()\n  }),\n  CircularObjectOwnership: bcs.struct(\"CircularObjectOwnership\", { object: Address }),\n  InsufficientCoinBalance: null,\n  CoinBalanceOverflow: null,\n  PublishErrorNonZeroAddress: null,\n  SuiMoveVerificationError: null,\n  MovePrimitiveRuntimeError: bcs.option(MoveLocation),\n  MoveAbort: bcs.tuple([MoveLocation, bcs.u64()]),\n  VMVerificationOrDeserializationError: null,\n  VMInvariantViolation: null,\n  FunctionNotFound: null,\n  ArityMismatch: null,\n  TypeArityMismatch: null,\n  NonEntryFunctionInvoked: null,\n  CommandArgumentError: bcs.struct(\"CommandArgumentError\", {\n    argIdx: bcs.u16(),\n    kind: CommandArgumentError\n  }),\n  TypeArgumentError: bcs.struct(\"TypeArgumentError\", {\n    argumentIdx: bcs.u16(),\n    kind: TypeArgumentError\n  }),\n  UnusedValueWithoutDrop: bcs.struct(\"UnusedValueWithoutDrop\", {\n    resultIdx: bcs.u16(),\n    secondaryIdx: bcs.u16()\n  }),\n  InvalidPublicFunctionReturnType: bcs.struct(\"InvalidPublicFunctionReturnType\", {\n    idx: bcs.u16()\n  }),\n  InvalidTransferObject: null,\n  EffectsTooLarge: bcs.struct(\"EffectsTooLarge\", { currentSize: bcs.u64(), maxSize: bcs.u64() }),\n  PublishUpgradeMissingDependency: null,\n  PublishUpgradeDependencyDowngrade: null,\n  PackageUpgradeError: bcs.struct(\"PackageUpgradeError\", { upgradeError: PackageUpgradeError }),\n  WrittenObjectsTooLarge: bcs.struct(\"WrittenObjectsTooLarge\", {\n    currentSize: bcs.u64(),\n    maxSize: bcs.u64()\n  }),\n  CertificateDenied: null,\n  SuiMoveVerificationTimedout: null,\n  SharedObjectOperationNotAllowed: null,\n  InputObjectDeleted: null,\n  ExecutionCancelledDueToSharedObjectCongestion: bcs.struct(\n    \"ExecutionCancelledDueToSharedObjectCongestion\",\n    {\n      congestedObjects: bcs.vector(Address)\n    }\n  ),\n  AddressDeniedForCoin: bcs.struct(\"AddressDeniedForCoin\", {\n    address: Address,\n    coinType: bcs.string()\n  }),\n  CoinTypeGlobalPause: bcs.struct(\"CoinTypeGlobalPause\", { coinType: bcs.string() }),\n  ExecutionCancelledDueToRandomnessUnavailable: null\n});\nconst ExecutionStatus = bcs.enum(\"ExecutionStatus\", {\n  Success: null,\n  Failed: bcs.struct(\"ExecutionFailed\", {\n    error: ExecutionFailureStatus,\n    command: bcs.option(bcs.u64())\n  })\n});\nconst GasCostSummary = bcs.struct(\"GasCostSummary\", {\n  computationCost: bcs.u64(),\n  storageCost: bcs.u64(),\n  storageRebate: bcs.u64(),\n  nonRefundableStorageFee: bcs.u64()\n});\nconst TransactionEffectsV1 = bcs.struct(\"TransactionEffectsV1\", {\n  status: ExecutionStatus,\n  executedEpoch: bcs.u64(),\n  gasUsed: GasCostSummary,\n  modifiedAtVersions: bcs.vector(bcs.tuple([Address, bcs.u64()])),\n  sharedObjects: bcs.vector(SuiObjectRef),\n  transactionDigest: ObjectDigest,\n  created: bcs.vector(bcs.tuple([SuiObjectRef, Owner])),\n  mutated: bcs.vector(bcs.tuple([SuiObjectRef, Owner])),\n  unwrapped: bcs.vector(bcs.tuple([SuiObjectRef, Owner])),\n  deleted: bcs.vector(SuiObjectRef),\n  unwrappedThenDeleted: bcs.vector(SuiObjectRef),\n  wrapped: bcs.vector(SuiObjectRef),\n  gasObject: bcs.tuple([SuiObjectRef, Owner]),\n  eventsDigest: bcs.option(ObjectDigest),\n  dependencies: bcs.vector(ObjectDigest)\n});\nconst VersionDigest = bcs.tuple([bcs.u64(), ObjectDigest]);\nconst ObjectIn = bcs.enum(\"ObjectIn\", {\n  NotExist: null,\n  Exist: bcs.tuple([VersionDigest, Owner])\n});\nconst ObjectOut = bcs.enum(\"ObjectOut\", {\n  NotExist: null,\n  ObjectWrite: bcs.tuple([ObjectDigest, Owner]),\n  PackageWrite: VersionDigest\n});\nconst IDOperation = bcs.enum(\"IDOperation\", {\n  None: null,\n  Created: null,\n  Deleted: null\n});\nconst EffectsObjectChange = bcs.struct(\"EffectsObjectChange\", {\n  inputState: ObjectIn,\n  outputState: ObjectOut,\n  idOperation: IDOperation\n});\nconst UnchangedSharedKind = bcs.enum(\"UnchangedSharedKind\", {\n  ReadOnlyRoot: VersionDigest,\n  MutateDeleted: bcs.u64(),\n  ReadDeleted: bcs.u64(),\n  Cancelled: bcs.u64(),\n  PerEpochConfig: null\n});\nconst TransactionEffectsV2 = bcs.struct(\"TransactionEffectsV2\", {\n  status: ExecutionStatus,\n  executedEpoch: bcs.u64(),\n  gasUsed: GasCostSummary,\n  transactionDigest: ObjectDigest,\n  gasObjectIndex: bcs.option(bcs.u32()),\n  eventsDigest: bcs.option(ObjectDigest),\n  dependencies: bcs.vector(ObjectDigest),\n  lamportVersion: bcs.u64(),\n  changedObjects: bcs.vector(bcs.tuple([Address, EffectsObjectChange])),\n  unchangedSharedObjects: bcs.vector(bcs.tuple([Address, UnchangedSharedKind])),\n  auxDataDigest: bcs.option(ObjectDigest)\n});\nconst TransactionEffects = bcs.enum(\"TransactionEffects\", {\n  V1: TransactionEffectsV1,\n  V2: TransactionEffectsV2\n});\nexport {\n  TransactionEffects\n};\n//# sourceMappingURL=effects.js.map\n","import { bcs } from \"@mysten/bcs\";\nimport { Address } from \"./bcs.js\";\nfunction pureBcsSchemaFromTypeName(name) {\n  switch (name) {\n    case \"u8\":\n      return bcs.u8();\n    case \"u16\":\n      return bcs.u16();\n    case \"u32\":\n      return bcs.u32();\n    case \"u64\":\n      return bcs.u64();\n    case \"u128\":\n      return bcs.u128();\n    case \"u256\":\n      return bcs.u256();\n    case \"bool\":\n      return bcs.bool();\n    case \"string\":\n      return bcs.string();\n    case \"id\":\n    case \"address\":\n      return Address;\n  }\n  const generic = name.match(/^(vector|option)<(.+)>$/);\n  if (generic) {\n    const [kind, inner] = generic.slice(1);\n    if (kind === \"vector\") {\n      return bcs.vector(pureBcsSchemaFromTypeName(inner));\n    } else {\n      return bcs.option(pureBcsSchemaFromTypeName(inner));\n    }\n  }\n  throw new Error(`Invalid Pure type name: ${name}`);\n}\nexport {\n  pureBcsSchemaFromTypeName\n};\n//# sourceMappingURL=pure.js.map\n","import { bcs } from \"@mysten/bcs\";\nimport {\n  Address,\n  AppId,\n  Argument,\n  CallArg,\n  Command,\n  CompressedSignature,\n  GasData,\n  Intent,\n  IntentMessage,\n  IntentScope,\n  IntentVersion,\n  MultiSig,\n  MultiSigPkMap,\n  MultiSigPublicKey,\n  ObjectArg,\n  ObjectDigest,\n  Owner,\n  PasskeyAuthenticator,\n  ProgrammableMoveCall,\n  ProgrammableTransaction,\n  PublicKey,\n  SenderSignedData,\n  SenderSignedTransaction,\n  SharedObjectRef,\n  StructTag,\n  SuiObjectRef,\n  TransactionData,\n  TransactionDataV1,\n  TransactionExpiration,\n  TransactionKind,\n  TypeTag\n} from \"./bcs.js\";\nimport { TransactionEffects } from \"./effects.js\";\nimport { TypeTagSerializer } from \"./type-tag-serializer.js\";\nimport { BcsType } from \"@mysten/bcs\";\nconst suiBcs = {\n  ...bcs,\n  U8: bcs.u8(),\n  U16: bcs.u16(),\n  U32: bcs.u32(),\n  U64: bcs.u64(),\n  U128: bcs.u128(),\n  U256: bcs.u256(),\n  ULEB128: bcs.uleb128(),\n  Bool: bcs.bool(),\n  String: bcs.string(),\n  Address,\n  AppId,\n  Argument,\n  CallArg,\n  Command,\n  CompressedSignature,\n  GasData,\n  Intent,\n  IntentMessage,\n  IntentScope,\n  IntentVersion,\n  MultiSig,\n  MultiSigPkMap,\n  MultiSigPublicKey,\n  ObjectArg,\n  ObjectDigest,\n  Owner,\n  PasskeyAuthenticator,\n  ProgrammableMoveCall,\n  ProgrammableTransaction,\n  PublicKey,\n  SenderSignedData,\n  SenderSignedTransaction,\n  SharedObjectRef,\n  StructTag,\n  SuiObjectRef,\n  TransactionData,\n  TransactionDataV1,\n  TransactionEffects,\n  TransactionExpiration,\n  TransactionKind,\n  TypeTag\n};\nimport {\n  pureBcsSchemaFromTypeName\n} from \"./pure.js\";\nexport {\n  BcsType,\n  TypeTagSerializer,\n  suiBcs as bcs,\n  pureBcsSchemaFromTypeName\n};\n//# sourceMappingURL=index.js.map\n","import { Transaction } from \"@mysten/sui/transactions\";\nimport { SUI_TYPE_ARG } from \"@mysten/sui/utils\";\nconst suiEndPoint = \"https://fullnode.mainnet.sui.io:443\";\nexport const SUI_TOKEN_ADDRESS = SUI_TYPE_ARG;\nlet suiClient;\nconst getSuiClient = async () => {\n    if (suiClient) {\n        return suiClient;\n    }\n    const client = await import(\"@mysten/sui/client\");\n    suiClient = new client.SuiClient({ url: suiEndPoint });\n    return suiClient;\n};\nexport const sendSuiTx = async ({ bytes, signature, }) => {\n    const suiClient = await getSuiClient();\n    const res = await suiClient.executeTransactionBlock({\n        transactionBlock: bytes,\n        signature: signature,\n    });\n    return res;\n};\nexport const getTransactionBlockBytes = async ({ transaction, txRaw, address, }) => {\n    let tx;\n    let transactionBlockBytes;\n    const suiClient = await getSuiClient();\n    try {\n        tx = Transaction.from(transaction);\n        if (!JSON.parse(transaction).sender) {\n            tx.setSender(address);\n        }\n        transactionBlockBytes = await tx.build({ client: suiClient });\n    }\n    catch (error) {\n        txRaw.setSenderIfNotSet(address);\n        transactionBlockBytes = await txRaw.build({ client: suiClient });\n    }\n    return transactionBlockBytes;\n};\n","import { constructSignReq, constructSuiTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { suiSignPersonalMessage, suiSignTransaction } from \"../../utils/apiUtils\";\nimport { toBase64 } from \"@mysten/sui/utils\";\nimport { getTransactionBlockBytes, sendSuiTx } from \"../../utils/sui\";\nimport { Transaction } from \"@mysten/sui/transactions\";\nexport class SuiProvider {\n    address;\n    core = null;\n    constructor() { }\n    async getAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.suiAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.suiAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    }\n    setCore(core) {\n        this.core = core;\n    }\n    signTransaction = async (input) => {\n        try {\n            if (!this.address) {\n                await this.getAddress();\n            }\n            let transaction = await input.transaction.toJSON();\n            try {\n                if (!JSON.parse(transaction).sender) {\n                    const txb = Transaction.from(transaction);\n                    txb.setSender(this.address);\n                    transaction = await txb.toJSON();\n                }\n            }\n            catch (error) {\n                console.error(\"Error setting sender:\", error);\n            }\n            const request = constructSuiTxReq(this.core.clientId, {\n                reqType: RequestTypes.signTx,\n                address: this.address,\n                params: {\n                    type: \"sign\",\n                    transaction,\n                },\n            });\n            const data = await signRequest(request, this.core);\n            if (!data || data.toLowerCase() === \"cancel\")\n                throw \"user cancel\";\n            const signRes = await suiSignTransaction({\n                tx: transaction,\n                url: \"https://fullnode.mainnet.sui.io:443\",\n                mfa: data,\n            });\n            const { result: signature } = signRes;\n            const transactionBlockBytes = await getTransactionBlockBytes({\n                transaction,\n                address: this.address,\n                // @ts-expect-error input.transaction\n                txRaw: input.transaction,\n            });\n            return { bytes: toBase64(transactionBlockBytes), signature };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    };\n    signAndExecuteTransaction = async (input) => {\n        try {\n            const signRes = await this.signTransaction(input);\n            const transaction = await input.transaction.toJSON();\n            const transactionBlockBytes = await getTransactionBlockBytes({\n                transaction,\n                address: this.address,\n                // @ts-expect-error input.transaction\n                txRaw: input.transaction,\n            });\n            const sendParam = {\n                bytes: transactionBlockBytes,\n                signature: signRes.signature,\n            };\n            const sendRes = await sendSuiTx(sendParam);\n            const json = JSON.stringify(sendRes.effects);\n            const effectsBytes = new TextEncoder().encode(json);\n            return {\n                digest: sendRes.digest,\n                effects: btoa(String.fromCharCode(...effectsBytes)),\n                ...signRes,\n            };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    };\n    async signMessage(_input) {\n        return await this.signPersonalMessage(_input);\n    }\n    async signPersonalMessage(_input) {\n        try {\n            const message = new TextDecoder().decode(_input.message);\n            const request = constructSignReq(this.core.clientId, {\n                chainType: \"sui\",\n                reqType: RequestTypes.signMessage,\n                address: this.address,\n                message,\n            });\n            const data = await signRequest(request, this.core);\n            if (!data || data.toLowerCase() === \"cancel\") {\n                return \"user cancel\";\n            }\n            const signMsgRes = await suiSignPersonalMessage({ message, mfa: data });\n            /** bytes: Base64 encoded message bytes */\n            return { bytes: toBase64(_input.message), signature: signMsgRes.result };\n        }\n        catch (e) {\n            console.error(e);\n            throw e;\n        }\n    }\n}\n","import { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { constructSignReq, constructTronTxReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nexport class TronProvider {\n    address = null;\n    tronWeb;\n    tronWebPromise;\n    core = null;\n    constructor() { }\n    setCore(sdk) {\n        this.core = sdk;\n    }\n    async getAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.tronAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.tronAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    }\n    async signMessage(message, privateKey) {\n        // const messageStr = new TextDecoder().decode(message);\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"tron\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            message,\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n    async signTransaction(transaction) {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const request = constructTronTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.address,\n            params: {\n                type: \"sign\",\n                transaction,\n            },\n        });\n        const data = await signRequest(request, this.core);\n        return data;\n    }\n}\n","// import { singMovementTx } from \"./apiUtils\";\nexport const movementScanUrl = \"https://explorer.movementnetwork.xyz/txn/\";\nexport const movementScanAddressUrl = \"https://explorer.movementnetwork.xyz/account/\";\nexport const mockMovementChainId = 126;\nconst rpcUrl = \"https://mainnet.movementnetwork.xyz/v1\";\nconst testnetRpcUrl = \"https://testnet.bardock.movementnetwork.xyz/v1\";\n// const rpcUrl: string = 'https://rpc.sentio.xyz/movement/v1'\n// const APTOS_COIN = '0x1::aptos_coin::AptosCoin'\n// const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n// const DEFAULT_GAS_USED = 1200;\n// const GAS_PRICE = 100;\nexport async function getAptos() {\n    const { AccountAddress, Aptos, APTOS_COIN, AptosConfig, Serializer, SimpleTransaction, Ed25519Signature, Ed25519PublicKey, AccountAuthenticatorEd25519, Network, AccountAuthenticator, } = await import(\"@aptos-labs/ts-sdk\");\n    return {\n        AccountAddress,\n        Aptos,\n        APTOS_COIN,\n        AptosConfig,\n        Serializer,\n        SimpleTransaction,\n        Ed25519Signature,\n        Ed25519PublicKey,\n        AccountAuthenticatorEd25519,\n        Network,\n        AccountAuthenticator,\n    };\n}\nexport const getAptosClient = (() => {\n    let client = null;\n    return async (isTestnet = false) => {\n        if (!client) {\n            // Setup the client\n            const { AptosConfig, Aptos, Network } = await getAptos();\n            const config = new AptosConfig(isTestnet\n                ? {\n                    fullnode: testnetRpcUrl,\n                    faucet: \"https://faucet.testnet.bardock.movementnetwork.xyz/\",\n                }\n                : {\n                    fullnode: rpcUrl,\n                    network: Network.CUSTOM,\n                });\n            client = new Aptos(config);\n        }\n        return client;\n    };\n})();\nexport const getRawTransactionFromTxn = async (txn) => {\n    const { Serializer } = await getAptos();\n    const serializer = new Serializer();\n    txn.serialize(serializer);\n    const serializedData = serializer.toUint8Array();\n    const data = Buffer.from(serializedData).toString(\"hex\");\n    return data;\n};\n/** send tx */\nexport const sendMovementTx = async ({ txn, senderAuthenticator, isTestnet = false, }) => {\n    const client = await getAptosClient(isTestnet);\n    const committedTxn = await client.transaction.submit.simple({\n        transaction: txn,\n        senderAuthenticator,\n    });\n    return committedTxn;\n};\nexport const buildAptosSignTransactionOutput = async (signRes) => {\n    try {\n        const { Ed25519Signature, Ed25519PublicKey, AccountAuthenticatorEd25519 } = await getAptos();\n        const signResObj = JSON.parse(signRes);\n        const { publicKey: publicKeyStr, sig } = signResObj;\n        const signature = new Ed25519Signature(sig);\n        const publicKey = new Ed25519PublicKey(publicKeyStr);\n        const senderAuthenticator = new AccountAuthenticatorEd25519(publicKey, signature);\n        return senderAuthenticator;\n    }\n    catch (error) {\n        throw Error(\"sign error\");\n    }\n};\n/** get tx status */\nexport const getMovementTransactionStatus = async (hash, isTestnet = false) => {\n    const client = await getAptosClient(isTestnet);\n    const executedTransaction = await client.waitForTransaction({\n        transactionHash: hash,\n    });\n    return executedTransaction;\n};\n","import { constructMovementTxReq, constructSignReq, getUserInfoFromLocalFirst } from \"../../utils/utils\";\nimport { RequestTypes } from \"../../constant\";\nimport { signRequest } from \"../../utils/communicator\";\nimport { movementSignMessage, signMovementTx } from \"../../utils/apiUtils\";\nimport { buildAptosSignTransactionOutput, getAptos, getAptosClient, getMovementTransactionStatus, getRawTransactionFromTxn, sendMovementTx, } from \"../../utils/movement\";\nvar UserResponseStatus;\n(function (UserResponseStatus) {\n    UserResponseStatus[\"APPROVED\"] = \"Approved\";\n    UserResponseStatus[\"REJECTED\"] = \"Rejected\";\n})(UserResponseStatus || (UserResponseStatus = {}));\nexport class MovementProvider {\n    address = null;\n    publicKey = null;\n    connected = false;\n    isConnected = false;\n    connection;\n    core = null;\n    chainId = 126;\n    constructor() { }\n    setCore(core) {\n        this.core = core;\n    }\n    signTransaction = async (transaction, asFeePayer) => {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const rawTransaction = await getRawTransactionFromTxn(transaction);\n        const request = constructMovementTxReq(this.core.clientId, {\n            reqType: RequestTypes.sendTx,\n            address: this.address,\n            params: {\n                type: \"sign\",\n                transaction,\n                rawTransaction,\n            },\n        });\n        const data = (await signRequest(request, this.core));\n        if (!data || data.toLowerCase() === \"cancel\") {\n            throw new Error(\"Sign transaction failed.\");\n        }\n        const signRes = await signMovementTx({ rawTransaction, mfa: data });\n        console.log(\"signRes>>>\", signRes);\n        const signedTransaction = await buildAptosSignTransactionOutput(signRes.result);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: signedTransaction,\n        };\n    };\n    signMessage = async (input) => {\n        const { message, nonce } = input;\n        const fullMessage = `${message}${nonce}`;\n        // const signature = await this.signTransaction(fullMessage);\n        const request = constructSignReq(this.core.clientId, {\n            chainType: \"movement\",\n            reqType: RequestTypes.signMessage,\n            address: this.address,\n            message,\n        });\n        const data = await signRequest(request, this.core);\n        if (!data || data.toLowerCase() === \"cancel\") {\n            return {\n                status: UserResponseStatus.REJECTED,\n            };\n        }\n        const signMsgRes = await movementSignMessage({ message: fullMessage, mfa: data });\n        console.log(\"signature\", signMsgRes);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: {\n                address: this.address,\n                fullMessage: fullMessage,\n                message,\n                nonce,\n                prefix: \"APTOS\",\n                signature: signMsgRes.result,\n            },\n        };\n    };\n    signAndSubmitTransaction = async (transaction) => {\n        if (!this.address) {\n            await this.getAddress();\n        }\n        const data = transaction.payload;\n        const isTestnet = this.chainId === 250;\n        const client = await getAptosClient(isTestnet);\n        const { AccountAddress } = await getAptos();\n        const txn = await client.transaction.build.simple({\n            sender: AccountAddress.fromString(this.address),\n            data,\n        });\n        const senderAuthenticator = await this.signTransaction(txn);\n        const sendTx = await sendMovementTx({\n            txn,\n            senderAuthenticator: senderAuthenticator.args,\n            isTestnet: isTestnet,\n        });\n        await getMovementTransactionStatus(sendTx.hash, isTestnet);\n        return {\n            status: UserResponseStatus.APPROVED,\n            args: sendTx,\n        };\n    };\n    getAddress = async () => {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.core.clientId);\n            if (!data.result || !data.result.movementAddress) {\n                throw new Error(\"Get address key failed.\");\n            }\n            this.address = data.result.movementAddress;\n            return this.address;\n        }\n        catch (error) {\n            console.error(\"Error getting address:\", error);\n            throw error;\n        }\n    };\n    switchChain = async (chainId) => {\n        this.chainId = chainId;\n    };\n    connect = async () => {\n        // TODO: connect\n    };\n    disconnect = async () => { };\n}\n","import { EthereumProvider } from \"../provider/ethereum/EthereumProvider\";\nexport var LoginAction;\n(function (LoginAction) {\n    LoginAction[\"Login\"] = \"login\";\n    LoginAction[\"Link\"] = \"link\";\n})(LoginAction || (LoginAction = {}));\nexport { EthereumProvider };\n","import axios from \"axios\";\nimport querystring from \"querystring\";\nimport { EventNames, kakaoJsKey, kakaoRedirectUri } from \"../constant\";\nimport { setXEvents, xEvents } from \"./existedEvents\";\nimport { tomoLog } from \"./log\";\nimport { LoginAction } from \"../types/types\";\nfunction shouldHandle(eventId) {\n    if (xEvents.includes(eventId))\n        return false;\n    xEvents.push(eventId);\n    return true;\n}\nfunction removeEvent(removeEventId) {\n    setXEvents(xEvents.filter((eventId) => eventId !== removeEventId));\n}\nexport const handleSignReq = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.signReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleMfaCreate = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.mfaReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleNormalReq = ({ data }, core) => {\n    if (!shouldHandle(data.eventId))\n        return;\n    core.events.emit(`${EventNames.normalReq}#${data.eventId}`, data);\n    removeEvent(data.eventId);\n};\nexport const handleTelegramAuth = async ({ data, action }, core) => {\n    if (!data)\n        return;\n    if (!shouldHandle(core.telegramAuthEventId))\n        return;\n    console.log(\"log in with telegram auth info\", data);\n    try {\n        let result;\n        if (action === LoginAction.Link) {\n            result = await core.linkTelegram(data);\n        }\n        else {\n            result = await core.loginByTelegram(data);\n        }\n        core.events.emit(`${EventNames.telegramAuth}#${core.telegramAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.telegramAuth}#${core.telegramAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.telegramAuthEventId);\n    }\n};\nexport const handleGoogleAuth = async ({ data, action }, core) => {\n    if (!data?.code)\n        return;\n    if (!shouldHandle(core.googleAuthEventId))\n        return;\n    try {\n        let result;\n        if (action === LoginAction.Link) {\n            result = await core.linkGoogle(data.code);\n        }\n        else {\n            result = await core.loginByGoogle(data.code);\n        }\n        core.events.emit(`${EventNames.googleAuth}#${core.googleAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.googleAuth}#${core.googleAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.googleAuthEventId);\n    }\n};\nexport const handleTwitterAuth = async ({ data, action }, core) => {\n    if (!data)\n        return;\n    if (!shouldHandle(data.eventId))\n        return;\n    tomoLog.debug(\"xEvents:\", xEvents);\n    try {\n        if (data?.code) {\n            let result;\n            if (action === LoginAction.Link) {\n                result = await core.linkTwitter(data.code);\n            }\n            else {\n                result = await core.loginByTwitter(data.code);\n            }\n            core.events.emit(`${EventNames.xAuth}#${data.eventId}`, result);\n        }\n        else if (data?.error) {\n            core.events.emit(`${EventNames.xAuth}#${data.eventId}`, false);\n        }\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.xAuth}#${data.eventId}`, false);\n    }\n    finally {\n        removeEvent(data.eventId);\n    }\n};\nexport const handleKakaoAuth = async ({ data }, core) => {\n    if (!data.code)\n        return;\n    if (!shouldHandle(core.kakaoAuthEventId))\n        return;\n    const postData = querystring.stringify({\n        grant_type: \"authorization_code\",\n        client_id: kakaoJsKey,\n        redirect_uri: kakaoRedirectUri,\n        code: data.code,\n    });\n    try {\n        const resp = await axios.post(\"https://kauth.kakao.com/oauth/token\", postData, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        });\n        if (!resp?.data?.access_token) {\n            console.error(\"kakao access_token is empty\");\n            throw new Error(\"access_token is empty\");\n        }\n        console.log(\"log in with kakao code\");\n        const result = await core.loginByKakao(resp.data.access_token);\n        core.events.emit(`${EventNames.kakaoAuth}#${core.kakaoAuthEventId}`, result);\n    }\n    catch (error) {\n        core.events.emit(`${EventNames.kakaoAuth}#${core.kakaoAuthEventId}`, false);\n    }\n    finally {\n        removeEvent(core.kakaoAuthEventId);\n    }\n};\n","import { relayMessageTypes, relayOrigin } from \"../constant\";\nimport { tomoLog } from \"./log\";\nimport { handleGoogleAuth, handleKakaoAuth, handleMfaCreate, handleNormalReq, handleSignReq, handleTelegramAuth, handleTwitterAuth, } from \"./handlerMessage\";\nconst handlerMap = {\n    [relayMessageTypes.signReq]: handleSignReq,\n    [relayMessageTypes.mfaCreate]: handleMfaCreate,\n    [relayMessageTypes.normalReq]: handleNormalReq,\n    [relayMessageTypes.telegramAuth]: handleTelegramAuth,\n    [relayMessageTypes.googleAuth]: handleGoogleAuth,\n    [relayMessageTypes.xAuth]: handleTwitterAuth,\n    [relayMessageTypes.kakaoAuth]: handleKakaoAuth,\n};\nexport const messageProcessor = ({ origin, data: { type, data, action } }, core) => {\n    tomoLog.debug(\"messageProcessor:\", origin, type, data, action, core.relayBase);\n    if (origin !== core.relayBase && origin !== relayOrigin) {\n        return;\n    }\n    const handler = handlerMap[type];\n    if (handler) {\n        handler({ data, action }, core);\n    }\n};\n","import { Connection, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, createAssociatedTokenAccountInstruction, createTransferInstruction, getAccount, getAssociatedTokenAddress, TOKEN_PROGRAM_ID, TokenAccountNotFoundError, TokenInvalidAccountOwnerError, } from \"@solana/spl-token\";\nimport BN from \"bn.js\";\nlet connection;\nexport const solDecimals = 9;\nexport const solTokenName = \"SOL\";\nexport const solEndpoint = \"https://rpc.ankr.com/solana/c2d7e8a3db5dce62e202db3d28cca25e74da5028abbf20764e2961918ba34dfc\";\nexport function getConnection() {\n    if (connection) {\n        return connection;\n    }\n    connection = new Connection(solEndpoint, \"finalized\");\n    return connection;\n}\nexport async function getSolFees() {\n    try {\n        const conn = getConnection();\n        const { feeCalculator } = await conn.getLatestBlockhash();\n        return { totalFee: feeCalculator.lamportsPerSignature.toString() };\n    }\n    catch (e) {\n        return { totalFee: \"0\" };\n    }\n}\nexport async function createSolTx(fromAddress, toAddress, amount, mintAddress) {\n    try {\n        getConnection();\n        const tx = new Transaction();\n        const fromPublicKey = new PublicKey(fromAddress);\n        const toPublicKey = new PublicKey(toAddress);\n        if (!tx.feePayer) {\n            tx.feePayer = fromPublicKey;\n        }\n        if (mintAddress) {\n            const tokenPublicKey = new PublicKey(mintAddress);\n            const fromTokenPubKey = await getAssociatedTokenAddress(tokenPublicKey, new PublicKey(fromAddress));\n            const toTokenPubKey = await getAssociatedTokenAddress(tokenPublicKey, new PublicKey(toAddress));\n            tx.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n            let account;\n            try {\n                account = await getAccount(connection, toTokenPubKey);\n            }\n            catch (error) {\n                if (error instanceof TokenAccountNotFoundError || error instanceof TokenInvalidAccountOwnerError) {\n                    try {\n                        tx.add(createAssociatedTokenAccountInstruction(fromPublicKey, toTokenPubKey, toPublicKey, tokenPublicKey));\n                    }\n                    catch (error) { }\n                }\n                else {\n                    throw error;\n                }\n            }\n            console.log(\"account\", account);\n            tx.add(createTransferInstruction(fromTokenPubKey, toTokenPubKey, fromPublicKey, amount, [], TOKEN_PROGRAM_ID));\n        }\n        else {\n            tx.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n            tx.add(SystemProgram.transfer({\n                fromPubkey: fromPublicKey,\n                toPubkey: toPublicKey,\n                lamports: amount,\n            }));\n        }\n        return tx;\n    }\n    catch (e) {\n        return null;\n    }\n}\n/**\n * Parses a Solana transaction and extracts relevant information.\n *\n * @param transaction The Solana transaction to parse.\n * @returns An object containing the transaction's from address, to address, amount, and mint address (if applicable).\n */\nexport async function parseSolTx(transaction) {\n    let from = \"\";\n    let to = \"\";\n    let value = 0;\n    let mintAddress;\n    const connection = getConnection();\n    console.log(\"parseSolTx\", transaction);\n    // 优先处理代币转账指令\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(TOKEN_PROGRAM_ID) && instruction.data[0] === 3) {\n            const amountData = instruction.data.slice(1, 9);\n            value = Number(new BN(amountData, \"le\"));\n            // 获取源和目标代币账户\n            const fromTokenAccount = instruction.keys[0]?.pubkey;\n            const toTokenAccount = instruction.keys[1]?.pubkey;\n            try {\n                // 查询目标代币账户信息\n                const toAccount = await getAccount(connection, toTokenAccount);\n                mintAddress = toAccount.mint.toString();\n                to = toAccount.owner.toString(); // 实际接收方钱包地址\n            }\n            catch (error) {\n                console.warn(\"Failed to get token account:\", error);\n            }\n            // 查询源代币账户信息（备用）\n            if (!from && fromTokenAccount) {\n                try {\n                    const fromAccount = await getAccount(connection, fromTokenAccount);\n                    from = fromAccount.owner.toString();\n                }\n                catch (error) {\n                    console.warn(\"Failed to get source token account:\", error);\n                }\n            }\n        }\n    }\n    // 处理关联账户创建指令\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(ASSOCIATED_TOKEN_PROGRAM_ID)) {\n            const mintKey = instruction.keys[3]?.pubkey;\n            const ownerKey = instruction.keys[2]?.pubkey;\n            if (mintKey && ownerKey) {\n                mintAddress = mintKey.toString();\n                to = ownerKey.toString();\n            }\n        }\n    }\n    // 处理SOL转账\n    for (const instruction of transaction.instructions) {\n        if (instruction.programId.equals(SystemProgram.programId) && instruction.data[0] === 2) {\n            const fromPubkey = instruction.keys[0]?.pubkey.toString();\n            const toPubkey = instruction.keys[1]?.pubkey.toString();\n            const lamportsData = instruction.data.slice(4);\n            value = Number(new BN(lamportsData, \"le\"));\n            from = fromPubkey;\n            to = toPubkey;\n        }\n    }\n    console.log(\"parseSolTx.result\", { from, to, value, mintAddress });\n    return { from, to, value, mintAddress };\n}\n","import EventEmitter from \"eventemitter3\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { mainnet } from \"viem/chains\";\nimport { EventNames, kakaoJsKey, kakaoRedirectUri, redirectUri, redirectUriForX, relayOrigin, relayOriginDev, xLoaderUrl, } from \"./constant\";\nimport { BitcoinProvider } from \"./provider/bitcoin/BitcoinProvider\";\nimport { EthereumProvider } from \"./provider/ethereum/EthereumProvider\";\nimport { SolanaProvider } from \"./provider/solana/SolanaProvider\";\nimport { SuiProvider } from \"./provider/sui/SuiProvider\";\n// import { TonProvider } from \"./provider/ton/TonProvider\";\nimport { TronProvider } from \"./provider/tron/TronProvider\";\nimport { MovementProvider } from \"./provider/movement/MovementProvider\";\nimport { LoginAction, } from \"./types/types\";\nimport { addUserWalletToken, BASE_PROD_URL, BASE_TEST_URL, bindEmailCode, bindEmailCodeVerify, bindInviter, dashboardTokens, defaultTokens, emailCheck, getCustomization, getLinkSocialInfo, getPrice, getSocialInfo, getSwapTokenList, getUserIdWithClientId, hasEmail, holdEvmTokens, holdSolTokens, linkSocialAccount, loginByGmail, loginByKakao, loginByTelegram, loginByX, loginCode, loginVerify, mfaPKExisted, removeUserWalletToken, sendRegister, setApi, tokenSearch, tradePaswordStatus, updateUserWalletTokens, userWalletTokens, verifyRegister, } from \"./utils/apiUtils\";\nimport { checkPopupClosed, mfaRequest, normalRequest, setIframeToken, walletRequest } from \"./utils/communicator\";\nimport getFaviconUrl from \"./utils/getFaviconUrl\";\nimport { getEmailReq, getLocalPasskey, getLocalToken, removeEmailReq, removeLocalLoginType, removeLocalToken, removeLocalUserId, setEmailReq, setLocalLoginType, setLocalToken, setLocalUserId, } from \"./utils/LocalstorageUtils\";\nimport { setLogLevel, tomoLog } from \"./utils/log\";\nimport { messageProcessor } from \"./utils/messageProcessor\";\nimport { clearUserInfo, getUserInfoFromLocalFirst } from \"./utils/utils\";\nimport { openWindow, relayWindowList } from \"./utils/windowUtils\";\nimport { WebWalletInvokeType } from \"@tomo-inc/shared-type\";\nimport * as sharedType from \"@tomo-inc/shared-type\";\nexport { BitcoinProvider } from \"./provider/bitcoin/BitcoinProvider\";\nexport * from \"./types/types\";\nexport { EthereumProvider } from \"./provider/ethereum/EthereumProvider\";\nconst BASE_RELAY_TEST_URL = relayOriginDev;\nconst BASE_RELAY_PROD_URL = relayOrigin;\nexport { BASE_PROD_URL, BASE_RELAY_PROD_URL, BASE_RELAY_TEST_URL, BASE_TEST_URL };\nexport { SolanaProvider } from \"./provider/solana/SolanaProvider\";\nexport { SuiProvider } from \"./provider/sui/SuiProvider\";\n// export { TonProvider } from \"./provider/ton/TonProvider\";\nexport { TronProvider } from \"./provider/tron/TronProvider\";\nexport { MovementProvider } from \"./provider/movement/MovementProvider\";\nexport { setHeaders } from \"./utils/apiUtils\";\nexport { createSolTx, getConnection as getSolConnection, parseSolTx } from \"./utils/sol\";\nconst loginTypes = [\"google\", \"twitter\", \"kakao\", \"telegram\"];\nconst walletDomainProd = \"https://tomotg.tomo.inc\";\nexport class TomoSDK {\n    connectUrl = BASE_PROD_URL;\n    relayBase = relayOrigin;\n    events = new EventEmitter();\n    clientId = \"\";\n    chainConfig = {\n        chainId: 1,\n        rpcUrl: mainnet.rpcUrls.default.http[0],\n    };\n    ethereumProvider;\n    bitcoinProvider;\n    solanaProvider;\n    // tonProvider: TonProvider;\n    // suiProvider: SuiProvider;\n    tronProvider;\n    movementProvider;\n    suiProvider;\n    googleAuthEventId = \"\" + Date.now();\n    kakaoAuthEventId = \"\" + Date.now();\n    telegramAuthEventId = \"\" + Date.now();\n    walletDomain;\n    constructor({ clientId, connect, relayBase, ethereumProvider, walletDomain }) {\n        if (!clientId) {\n            throw new Error(\"clientId is required\");\n        }\n        this.clientId = clientId;\n        this.connectUrl = connect || BASE_PROD_URL;\n        this.relayBase = relayBase || relayOrigin;\n        this.walletDomain = walletDomain || walletDomainProd;\n        if (ethereumProvider) {\n            this.ethereumProvider = ethereumProvider;\n            this.ethereumProvider.setCore(this);\n        }\n        this._initialize();\n        if (typeof window !== \"undefined\")\n            window.onmessage = this.msgProcessor.bind(this);\n    }\n    _initialize() {\n        setApi(this);\n        setLogLevel(\"silent\");\n        tomoLog.debug(\"relay base url:\", this.relayBase);\n        this.solanaProvider = new SolanaProvider();\n        this.solanaProvider.setCore(this);\n        this.tronProvider = new TronProvider();\n        this.tronProvider.setCore(this);\n        this.movementProvider = new MovementProvider();\n        this.movementProvider.setCore(this);\n        this.suiProvider = new SuiProvider();\n        this.suiProvider.setCore(this);\n        this.bitcoinProvider = new BitcoinProvider();\n        this.bitcoinProvider.setCore(this);\n        if (!this.ethereumProvider) {\n            this.ethereumProvider = new EthereumProvider();\n            this.ethereumProvider.setCore(this);\n        }\n    }\n    msgProcessor({ origin, data: { type, data, action } }) {\n        console.log(\"msgProcessor\", { origin, data: { type, data, action } });\n        return messageProcessor({ origin, data: { type, data, action } }, this);\n    }\n    login(type, options = {}) {\n        if (!loginTypes.includes(type)) {\n            throw new Error(`Unsupported login type: ${type}`);\n        }\n        const action = options?.action || LoginAction.Login;\n        const origin = window.location.origin;\n        if (type === \"google\") {\n            return new Promise((resolve, reject) => {\n                const stateParam = JSON.stringify({ origin, action });\n                const encodedState = encodeURIComponent(stateParam);\n                const popup = openWindow({\n                    url: `https://accounts.google.com/o/oauth2/v2/auth?response_type=id_token&client_id=479465761311-5da6b2ic7io7odr9jnrldai20046vk4t.apps.googleusercontent.com&scope=openid&access_type=offline&state=${encodedState}&nonce=testnonce&prompt=select_account&redirect_uri=${redirectUri}`,\n                    name: action === LoginAction.Link ? \"Link Google\" : \"Google login\",\n                });\n                const googleAuthListener = async (data) => {\n                    tomoLog.debug(\"google login data:\", data, action);\n                    console.log(\"google login dataqqq:\", data, action);\n                    if (data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                };\n                this.googleAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.googleAuth, this.googleAuthEventId);\n                this.events.once(`${EventNames.googleAuth}#${this.googleAuthEventId}`, googleAuthListener);\n            });\n        }\n        if (type === \"twitter\") {\n            return new Promise((resolve, reject) => {\n                const xAuthListener = (data) => {\n                    if (data) {\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                };\n                const name = action === LoginAction.Link ? \"Link X\" : \"X login\";\n                const eventName = EventNames.xAuth;\n                const listenerFn = xAuthListener;\n                const eventId = uuidv4();\n                const popup = openWindow({\n                    url: `${xLoaderUrl}?target=${origin}&eventId=${eventId}&action=${action}`,\n                    name,\n                    // width: 800,\n                });\n                checkPopupClosed(popup, this.events, eventName, eventId);\n                this.events.once(`${eventName}#${eventId}`, listenerFn);\n            });\n        }\n        if (type === \"kakao\") {\n            return new Promise((resolve, reject) => {\n                const popup = openWindow({\n                    url: `https://kauth.kakao.com/oauth/authorize?client_id=${kakaoJsKey}&redirect_uri=${encodeURIComponent(kakaoRedirectUri)}&response_type=code`,\n                    name: \"Kakao Login\",\n                    width: 800,\n                });\n                this.kakaoAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.kakaoAuth, this.kakaoAuthEventId);\n                this.events.once(`${EventNames.kakaoAuth}#${this.kakaoAuthEventId}`, (data) => {\n                    tomoLog.debug(\"kakao login data:\", data);\n                    if (data)\n                        resolve(true);\n                    else\n                        reject(false);\n                });\n            });\n        }\n        if (type === \"telegram\") {\n            return new Promise((resolve, reject) => {\n                const popup = openWindow({\n                    url: `${this.relayBase}/telegram?action=${action}`,\n                    name: action === LoginAction.Link ? \"Link Telegram\" : \"Telegram Login\",\n                });\n                this.telegramAuthEventId = \"\" + Date.now();\n                checkPopupClosed(popup, this.events, EventNames.telegramAuth, this.telegramAuthEventId);\n                this.events.once(`${EventNames.telegramAuth}#${this.telegramAuthEventId}`, (data) => {\n                    tomoLog.debug(\"telegram login data:\", data);\n                    if (data)\n                        resolve(true);\n                    else\n                        reject(false);\n                });\n            });\n        }\n    }\n    linkSocial(type) {\n        return this.login(type, { action: LoginAction.Link });\n    }\n    async getLinkSocialInfo() {\n        const data = await getLinkSocialInfo();\n        if (!data.result) {\n            throw new Error(\"get linked social info failed\");\n        }\n        return data.result;\n    }\n    async loginByGoogle(code) {\n        try {\n            const data = await loginByGmail(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"google\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkGoogle(code) {\n        try {\n            const data = await linkSocialAccount({ googleCode: code });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByKakao(code) {\n        try {\n            const data = await loginByKakao(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"kakao\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByTelegram(authData) {\n        try {\n            const data = await loginByTelegram(authData, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"telegram\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkTelegram(authData) {\n        try {\n            const data = await linkSocialAccount({ telegramAuthData: authData });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async loginByTwitter(code) {\n        try {\n            const data = await loginByX(code, this.clientId);\n            const token = data.result.token;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            const userId = data.result?.userInfoDTO?.id;\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"twitter\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async linkTwitter(code) {\n        try {\n            const data = await linkSocialAccount({ twitterCode: code, twitterRedirectUri: redirectUriForX });\n            if (!data.result) {\n                throw new Error(\"Link failed\");\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async sendCode(email) {\n        try {\n            const checkResp = await emailCheck(email);\n            if (checkResp.result) {\n                // sign up\n                await sendRegister(email, this.clientId);\n                const req = {\n                    type: \"signup\",\n                    email,\n                };\n                setEmailReq(JSON.stringify(req));\n            }\n            else {\n                // sign in\n                await loginCode(email, this.clientId);\n                const req = {\n                    type: \"signin\",\n                    email,\n                };\n                setEmailReq(JSON.stringify(req));\n            }\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async verifyCode(code) {\n        try {\n            const req = getEmailReq();\n            if (!req || !req.email || (req.type !== \"signup\" && req.type !== \"signin\")) {\n                throw new Error(\"Invalid request\");\n            }\n            let resp;\n            if (req.type === \"signup\") {\n                resp = await verifyRegister(req.email, code, this.clientId);\n            }\n            else {\n                resp = await loginVerify(req.email, code, this.clientId);\n            }\n            const token = resp.result.token;\n            const userId = resp.result?.userInfoDTO?.id;\n            if (!token) {\n                throw new Error(\"Login failed\");\n            }\n            setLocalToken(this.clientId, token);\n            setLocalUserId(this.clientId, \"\" + userId);\n            setLocalLoginType(this.clientId, \"email\");\n            removeEmailReq();\n            clearUserInfo();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    handleLoginByEmailSuccess(token) {\n        setLocalToken(this.clientId, token);\n        removeEmailReq();\n        clearUserInfo();\n    }\n    async getEthAddress() {\n        try {\n            const data = await getUserInfoFromLocalFirst(this.clientId);\n            if (!data.result) {\n                throw new Error(\"Get address failed.\");\n            }\n            return data.result.evmAddress;\n        }\n        catch (e) {\n            console.error(e);\n            return null;\n        }\n    }\n    async getPrices(tokenSymbols) {\n        try {\n            const data = await getPrice(tokenSymbols);\n            return data.result;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    async logout() {\n        removeLocalToken(this.clientId);\n        removeLocalUserId(this.clientId);\n        removeLocalLoginType(this.clientId);\n        removeEmailReq();\n        clearUserInfo();\n    }\n    async tradePaswordStatus() {\n        try {\n            const data = await tradePaswordStatus();\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to send bind email code\");\n        }\n    }\n    async requestAccounts(chainType) {\n        try {\n            const dashboardConfig = await this.getCustomization();\n            const projectName = dashboardConfig?.theme?.projectName;\n            const icon = getFaviconUrl();\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                icon,\n                projectName,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"requestAccounts\",\n                chainType: chainType || \"evm\",\n            };\n            const result = await normalRequest(req, this);\n            await setIframeToken(this);\n            return result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to request accounts\", e);\n        }\n    }\n    async verifyLoginEmail(email) {\n        const sendReq = getEmailReq();\n        if (!sendReq || !sendReq.email || (sendReq.type !== \"signup\" && sendReq.type !== \"signin\")) {\n            throw new Error(\"Invalid request\");\n        }\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"verifyLoginEmail\",\n                email: email,\n                clientId: this.clientId,\n                type: sendReq.type,\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to get code\");\n        }\n    }\n    async setPayPinAndEmail() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"setPayPinAndEmail\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to set pay pin\");\n        }\n    }\n    async setPayPin() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"setPayPin\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to set pay pin\");\n        }\n    }\n    async changePayPin() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"changePayPin\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to change pay pin\");\n        }\n    }\n    async bindEmail() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"bindEmail\",\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to bind Email\");\n        }\n    }\n    async addRecoveryEmail(type) {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"addRecoveryEmail\",\n                type,\n            };\n            return await normalRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to add recovery Email\");\n        }\n    }\n    async hasEmail() {\n        try {\n            const data = await hasEmail();\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get result\");\n        }\n    }\n    async bindEmailCode(email) {\n        try {\n            const data = await bindEmailCode(email);\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to send bind email code\");\n        }\n    }\n    async bindEmailCodeVerify(email, code) {\n        try {\n            const data = await bindEmailCodeVerify(email, code);\n            return !!data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to verify bind email code\");\n        }\n    }\n    async getDefaultTokens() {\n        try {\n            const data = await defaultTokens();\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get default tokens\");\n        }\n    }\n    async getDashboardTokens(clientId, chainId) {\n        try {\n            const data = await dashboardTokens(clientId, chainId);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get default tokens\");\n        }\n    }\n    async searchToken(content) {\n        try {\n            const data = await tokenSearch(content);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to search token\");\n        }\n    }\n    async getHoldEvmTokens(address) {\n        try {\n            const data = await holdEvmTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get hold evm tokens\");\n        }\n    }\n    async getHoldSolTokens(address) {\n        try {\n            const data = await holdSolTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get hold solana tokens\");\n        }\n    }\n    async getUserWalletTokens(address) {\n        try {\n            const data = await userWalletTokens(address);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get tokens\");\n        }\n    }\n    async userWalletTokensUpdate(tokens) {\n        try {\n            const data = await updateUserWalletTokens(tokens);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to update tokens\");\n        }\n    }\n    async userWalletTokenAdd(token, walletAddress) {\n        try {\n            const data = await addUserWalletToken(token, walletAddress);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to add token\");\n        }\n    }\n    async userWalletTokenRemove(token, walletAddress) {\n        try {\n            const data = await removeUserWalletToken(token, walletAddress);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to remove token\");\n        }\n    }\n    async createPasskey() {\n        try {\n            const req = {\n                eventId: uuidv4(),\n                origin: window.location.origin,\n                accessToken: getLocalToken(this.clientId),\n                reqType: \"passkey\",\n            };\n            return await mfaRequest(req, this);\n        }\n        catch (e) {\n            throw new Error(\"Failed to create passkey\");\n        }\n    }\n    async getPasskeyStatus() {\n        try {\n            const evmAddress = await this.getEthAddress();\n            const localPasskeyStatus = getLocalPasskey(evmAddress);\n            const existedRomte = await mfaPKExisted();\n            return {\n                localCreated: localPasskeyStatus,\n                remoteExised: existedRomte.result,\n            };\n        }\n        catch (e) {\n            throw new Error(\"Failed to get passkey status\");\n        }\n    }\n    async getJwtToken() {\n        try {\n            const result = await getAuth(this);\n            return result;\n        }\n        catch (error) {\n            throw new Error(\"Failed to get jwt token\");\n        }\n    }\n    async getUserSocialInfo() {\n        try {\n            const ret = await getSocialInfo();\n            // create in 3 min and inviterBound is false\n            const inviterBound = ret.result?.inviterBound;\n            const currentTime = Date.now();\n            const threeMinutes = 3 * 60 * 1000;\n            const isInThreeMinutes = currentTime - ret?.result?.createTime <= threeMinutes;\n            const isNewUser = !inviterBound && isInThreeMinutes;\n            if (isNewUser) {\n                const ownerUid = await getUserIdWithClientId(this.clientId);\n                !!ownerUid.result && bindInviter(ownerUid.result);\n            }\n            return ret.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get user social info\");\n        }\n    }\n    // deprecated\n    // async twitterBind(): Promise<boolean> {\n    //   try {\n    //     const { code, callback } = await this.login(\"twitter\", { isXBind: true });\n    //     const res = await bindX(code);\n    //     if (typeof callback === \"function\") callback();\n    //     return res.result;\n    //   } catch (e) {\n    //     throw new Error(\"Failed to twitter bind\");\n    //   }\n    // }\n    async getSwapTokens(chain) {\n        try {\n            const data = await getSwapTokenList(chain);\n            return data.result;\n        }\n        catch (e) {\n            throw new Error(\"Failed to get swap tokens\");\n        }\n    }\n    async getCustomization() {\n        const checkResp = await getCustomization(this.clientId);\n        return checkResp.result;\n    }\n    static async getCustomization(clientId) {\n        const checkResp = await getCustomization(clientId);\n        return checkResp.result;\n    }\n    async onboarding(params) {\n        try {\n            console.log(\"sharedType.WebWalletInvokeType\", sharedType.WebWalletInvokeType);\n            console.log(\"WebWalletInvokeType\", WebWalletInvokeType);\n            return await walletRequest(WebWalletInvokeType.ONBOARDING, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to onboarding: \" + e);\n        }\n    }\n    async openSwap(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.SWAP, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to swap: \" + e);\n        }\n    }\n    async openChangePayPin(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.CHANGE_PAY_PIN, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to change pay pin: \" + e);\n        }\n    }\n    async openOnramp(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.ONRAMP, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to onramp: \" + e);\n        }\n    }\n    async openSend(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.SEND, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to send: \" + e);\n        }\n    }\n    async openReceive(params) {\n        try {\n            return await walletRequest(WebWalletInvokeType.RECEIVE, this, params);\n        }\n        catch (e) {\n            throw new Error(\"Failed to receive: \" + e);\n        }\n    }\n    closeAllRelayWindow() {\n        relayWindowList.forEach((win) => win?.close());\n        relayWindowList.length = 0;\n    }\n    handleWebWalletInvoke = async (type, params) => {\n        try {\n            this.closeAllRelayWindow();\n            switch (type) {\n                case WebWalletInvokeType.ONRAMP:\n                    this.openOnramp(params);\n                    break;\n                case WebWalletInvokeType.SWAP:\n                    this.openSwap(params);\n                    break;\n                case WebWalletInvokeType.SEND:\n                    this.openSend(params);\n                    break;\n                case WebWalletInvokeType.RECEIVE:\n                    this.openReceive(params);\n                    break;\n                case WebWalletInvokeType.CHANGE_PAY_PIN:\n                    this.openChangePayPin(params);\n                    break;\n            }\n        }\n        catch (e) {\n            console.log(\"handleAction error:\", e);\n        }\n    };\n}\n","function getFaviconUrl() {\n    const links = document.getElementsByTagName(\"link\");\n    for (let i = 0; i < links.length; i++) {\n        if (links[i].rel === \"icon\" || links[i].rel === \"shortcut icon\") {\n            return links[i].href;\n        }\n    }\n    return null;\n}\nexport default getFaviconUrl;\n","const PACKAGE_VERSION = \"1.30.2\";\nconst TARGETED_RPC_VERSION = \"1.50.0\";\nexport {\n  PACKAGE_VERSION,\n  TARGETED_RPC_VERSION\n};\n//# sourceMappingURL=version.js.map\n","const CODE_TO_ERROR_TYPE = {\n  \"-32700\": \"ParseError\",\n  \"-32701\": \"OversizedRequest\",\n  \"-32702\": \"OversizedResponse\",\n  \"-32600\": \"InvalidRequest\",\n  \"-32601\": \"MethodNotFound\",\n  \"-32602\": \"InvalidParams\",\n  \"-32603\": \"InternalError\",\n  \"-32604\": \"ServerBusy\",\n  \"-32000\": \"CallExecutionFailed\",\n  \"-32001\": \"UnknownError\",\n  \"-32003\": \"SubscriptionClosed\",\n  \"-32004\": \"SubscriptionClosedWithError\",\n  \"-32005\": \"BatchesNotSupported\",\n  \"-32006\": \"TooManySubscriptions\",\n  \"-32050\": \"TransientError\",\n  \"-32002\": \"TransactionExecutionClientError\"\n};\nclass SuiHTTPTransportError extends Error {\n}\nclass JsonRpcError extends SuiHTTPTransportError {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n    this.type = CODE_TO_ERROR_TYPE[code] ?? \"ServerError\";\n  }\n}\nclass SuiHTTPStatusError extends SuiHTTPTransportError {\n  constructor(message, status, statusText) {\n    super(message);\n    this.status = status;\n    this.statusText = statusText;\n  }\n}\nexport {\n  JsonRpcError,\n  SuiHTTPStatusError,\n  SuiHTTPTransportError\n};\n//# sourceMappingURL=errors.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _requestId, _disconnects, _webSocket, _connectionPromise, _subscriptions, _pendingRequests, _WebsocketClient_instances, setupWebSocket_fn, reconnect_fn;\nimport { JsonRpcError } from \"./errors.js\";\nfunction getWebsocketUrl(httpUrl) {\n  const url = new URL(httpUrl);\n  url.protocol = url.protocol.replace(\"http\", \"ws\");\n  return url.toString();\n}\nconst DEFAULT_CLIENT_OPTIONS = {\n  // We fudge the typing because we also check for undefined in the constructor:\n  WebSocketConstructor: typeof WebSocket !== \"undefined\" ? WebSocket : void 0,\n  callTimeout: 3e4,\n  reconnectTimeout: 3e3,\n  maxReconnects: 5\n};\nclass WebsocketClient {\n  constructor(endpoint, options = {}) {\n    __privateAdd(this, _WebsocketClient_instances);\n    __privateAdd(this, _requestId, 0);\n    __privateAdd(this, _disconnects, 0);\n    __privateAdd(this, _webSocket, null);\n    __privateAdd(this, _connectionPromise, null);\n    __privateAdd(this, _subscriptions, /* @__PURE__ */ new Set());\n    __privateAdd(this, _pendingRequests, /* @__PURE__ */ new Map());\n    this.endpoint = endpoint;\n    this.options = { ...DEFAULT_CLIENT_OPTIONS, ...options };\n    if (!this.options.WebSocketConstructor) {\n      throw new Error(\"Missing WebSocket constructor\");\n    }\n    if (this.endpoint.startsWith(\"http\")) {\n      this.endpoint = getWebsocketUrl(this.endpoint);\n    }\n  }\n  async makeRequest(method, params, signal) {\n    const webSocket = await __privateMethod(this, _WebsocketClient_instances, setupWebSocket_fn).call(this);\n    return new Promise((resolve, reject) => {\n      __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);\n      __privateGet(this, _pendingRequests).set(__privateGet(this, _requestId), {\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          __privateGet(this, _pendingRequests).delete(__privateGet(this, _requestId));\n          reject(new Error(`Request timeout: ${method}`));\n        }, this.options.callTimeout)\n      });\n      signal?.addEventListener(\"abort\", () => {\n        __privateGet(this, _pendingRequests).delete(__privateGet(this, _requestId));\n        reject(signal.reason);\n      });\n      webSocket.send(JSON.stringify({ jsonrpc: \"2.0\", id: __privateGet(this, _requestId), method, params }));\n    }).then(({ error, result }) => {\n      if (error) {\n        throw new JsonRpcError(error.message, error.code);\n      }\n      return result;\n    });\n  }\n  async subscribe(input) {\n    const subscription = new RpcSubscription(input);\n    __privateGet(this, _subscriptions).add(subscription);\n    await subscription.subscribe(this);\n    return () => subscription.unsubscribe(this);\n  }\n}\n_requestId = new WeakMap();\n_disconnects = new WeakMap();\n_webSocket = new WeakMap();\n_connectionPromise = new WeakMap();\n_subscriptions = new WeakMap();\n_pendingRequests = new WeakMap();\n_WebsocketClient_instances = new WeakSet();\nsetupWebSocket_fn = function() {\n  if (__privateGet(this, _connectionPromise)) {\n    return __privateGet(this, _connectionPromise);\n  }\n  __privateSet(this, _connectionPromise, new Promise((resolve) => {\n    __privateGet(this, _webSocket)?.close();\n    __privateSet(this, _webSocket, new this.options.WebSocketConstructor(this.endpoint));\n    __privateGet(this, _webSocket).addEventListener(\"open\", () => {\n      __privateSet(this, _disconnects, 0);\n      resolve(__privateGet(this, _webSocket));\n    });\n    __privateGet(this, _webSocket).addEventListener(\"close\", () => {\n      __privateWrapper(this, _disconnects)._++;\n      if (__privateGet(this, _disconnects) <= this.options.maxReconnects) {\n        setTimeout(() => {\n          __privateMethod(this, _WebsocketClient_instances, reconnect_fn).call(this);\n        }, this.options.reconnectTimeout);\n      }\n    });\n    __privateGet(this, _webSocket).addEventListener(\"message\", ({ data }) => {\n      let json;\n      try {\n        json = JSON.parse(data);\n      } catch (error) {\n        console.error(new Error(`Failed to parse RPC message: ${data}`, { cause: error }));\n        return;\n      }\n      if (\"id\" in json && json.id != null && __privateGet(this, _pendingRequests).has(json.id)) {\n        const { resolve: resolve2, timeout } = __privateGet(this, _pendingRequests).get(json.id);\n        clearTimeout(timeout);\n        resolve2(json);\n      } else if (\"params\" in json) {\n        const { params } = json;\n        __privateGet(this, _subscriptions).forEach((subscription) => {\n          if (subscription.subscriptionId === params.subscription) {\n            if (params.subscription === subscription.subscriptionId) {\n              subscription.onMessage(params.result);\n            }\n          }\n        });\n      }\n    });\n  }));\n  return __privateGet(this, _connectionPromise);\n};\nreconnect_fn = async function() {\n  __privateGet(this, _webSocket)?.close();\n  __privateSet(this, _connectionPromise, null);\n  return Promise.allSettled(\n    [...__privateGet(this, _subscriptions)].map((subscription) => subscription.subscribe(this))\n  );\n};\nclass RpcSubscription {\n  constructor(input) {\n    this.subscriptionId = null;\n    this.subscribed = false;\n    this.input = input;\n  }\n  onMessage(message) {\n    if (this.subscribed) {\n      this.input.onMessage(message);\n    }\n  }\n  async unsubscribe(client) {\n    const { subscriptionId } = this;\n    this.subscribed = false;\n    if (subscriptionId == null) return false;\n    this.subscriptionId = null;\n    return client.makeRequest(this.input.unsubscribe, [subscriptionId]);\n  }\n  async subscribe(client) {\n    this.subscriptionId = null;\n    this.subscribed = true;\n    const newSubscriptionId = await client.makeRequest(\n      this.input.method,\n      this.input.params,\n      this.input.signal\n    );\n    if (this.subscribed) {\n      this.subscriptionId = newSubscriptionId;\n    }\n  }\n}\nexport {\n  DEFAULT_CLIENT_OPTIONS,\n  WebsocketClient\n};\n//# sourceMappingURL=rpc-websocket-client.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\nvar _requestId, _options, _websocketClient, _SuiHTTPTransport_instances, getWebsocketClient_fn;\nimport { PACKAGE_VERSION, TARGETED_RPC_VERSION } from \"../version.js\";\nimport { JsonRpcError, SuiHTTPStatusError } from \"./errors.js\";\nimport { WebsocketClient } from \"./rpc-websocket-client.js\";\nclass SuiHTTPTransport {\n  constructor(options) {\n    __privateAdd(this, _SuiHTTPTransport_instances);\n    __privateAdd(this, _requestId, 0);\n    __privateAdd(this, _options);\n    __privateAdd(this, _websocketClient);\n    __privateSet(this, _options, options);\n  }\n  fetch(input, init) {\n    const fetchFn = __privateGet(this, _options).fetch ?? fetch;\n    if (!fetchFn) {\n      throw new Error(\n        \"The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.\"\n      );\n    }\n    return fetchFn(input, init);\n  }\n  async request(input) {\n    __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);\n    const res = await this.fetch(__privateGet(this, _options).rpc?.url ?? __privateGet(this, _options).url, {\n      method: \"POST\",\n      signal: input.signal,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Client-Sdk-Type\": \"typescript\",\n        \"Client-Sdk-Version\": PACKAGE_VERSION,\n        \"Client-Target-Api-Version\": TARGETED_RPC_VERSION,\n        \"Client-Request-Method\": input.method,\n        ...__privateGet(this, _options).rpc?.headers\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: __privateGet(this, _requestId),\n        method: input.method,\n        params: input.params\n      })\n    });\n    if (!res.ok) {\n      throw new SuiHTTPStatusError(\n        `Unexpected status code: ${res.status}`,\n        res.status,\n        res.statusText\n      );\n    }\n    const data = await res.json();\n    if (\"error\" in data && data.error != null) {\n      throw new JsonRpcError(data.error.message, data.error.code);\n    }\n    return data.result;\n  }\n  async subscribe(input) {\n    const unsubscribe = await __privateMethod(this, _SuiHTTPTransport_instances, getWebsocketClient_fn).call(this).subscribe(input);\n    if (input.signal) {\n      input.signal.throwIfAborted();\n      input.signal.addEventListener(\"abort\", () => {\n        unsubscribe();\n      });\n    }\n    return async () => !!await unsubscribe();\n  }\n}\n_requestId = new WeakMap();\n_options = new WeakMap();\n_websocketClient = new WeakMap();\n_SuiHTTPTransport_instances = new WeakSet();\ngetWebsocketClient_fn = function() {\n  if (!__privateGet(this, _websocketClient)) {\n    const WebSocketConstructor = __privateGet(this, _options).WebSocketConstructor ?? WebSocket;\n    if (!WebSocketConstructor) {\n      throw new Error(\n        \"The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.\"\n      );\n    }\n    __privateSet(this, _websocketClient, new WebsocketClient(\n      __privateGet(this, _options).websocket?.url ?? __privateGet(this, _options).url,\n      {\n        WebSocketConstructor,\n        ...__privateGet(this, _options).websocket\n      }\n    ));\n  }\n  return __privateGet(this, _websocketClient);\n};\nexport {\n  SuiHTTPTransport\n};\n//# sourceMappingURL=http-transport.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _prefix, _cache;\nconst _ClientCache = class _ClientCache {\n  constructor({ prefix, cache } = {}) {\n    __privateAdd(this, _prefix);\n    __privateAdd(this, _cache);\n    __privateSet(this, _prefix, prefix ?? []);\n    __privateSet(this, _cache, cache ?? /* @__PURE__ */ new Map());\n  }\n  read(key, load) {\n    const cacheKey = [__privateGet(this, _prefix), ...key].join(\":\");\n    if (__privateGet(this, _cache).has(cacheKey)) {\n      return __privateGet(this, _cache).get(cacheKey);\n    }\n    const result = load();\n    __privateGet(this, _cache).set(cacheKey, result);\n    if (typeof result === \"object\" && result !== null && \"then\" in result) {\n      return Promise.resolve(result).then((v) => {\n        __privateGet(this, _cache).set(cacheKey, v);\n        return v;\n      }).catch((err) => {\n        __privateGet(this, _cache).delete(cacheKey);\n        throw err;\n      });\n    }\n    return result;\n  }\n  clear(prefix) {\n    const prefixKey = [...__privateGet(this, _prefix), ...prefix ?? []].join(\":\");\n    if (!prefixKey) {\n      __privateGet(this, _cache).clear();\n      return;\n    }\n    for (const key of __privateGet(this, _cache).keys()) {\n      if (key.startsWith(prefixKey)) {\n        __privateGet(this, _cache).delete(key);\n      }\n    }\n  }\n  scope(prefix) {\n    return new _ClientCache({\n      prefix: [...__privateGet(this, _prefix), ...Array.isArray(prefix) ? prefix : [prefix]],\n      cache: __privateGet(this, _cache)\n    });\n  }\n};\n_prefix = new WeakMap();\n_cache = new WeakMap();\nlet ClientCache = _ClientCache;\nexport {\n  ClientCache\n};\n//# sourceMappingURL=cache.js.map\n","import { ClientCache } from \"./cache.js\";\nclass Experimental_BaseClient {\n  constructor({ network }) {\n    this.cache = new ClientCache();\n    this.network = network;\n  }\n  $extend(...registrations) {\n    return Object.create(\n      this,\n      Object.fromEntries(\n        registrations.map((registration) => {\n          if (\"experimental_asClientExtension\" in registration) {\n            const { name, register } = registration.experimental_asClientExtension();\n            return [name, { value: register(this) }];\n          }\n          return [registration.name, { value: registration.register(this) }];\n        })\n      )\n    );\n  }\n}\nexport {\n  Experimental_BaseClient\n};\n//# sourceMappingURL=client.js.map\n","// src/actions/await/awaitAsync.ts\nfunction awaitAsync() {\n  return {\n    kind: \"transformation\",\n    type: \"await\",\n    reference: awaitAsync,\n    async: true,\n    async _run(dataset) {\n      dataset.value = await dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/regex.ts\nvar BIC_REGEX = /^[A-Z]{6}(?!00)[A-Z\\d]{2}(?:[A-Z\\d]{3})?$/u;\nvar CUID2_REGEX = /^[a-z][\\da-z]*$/u;\nvar DECIMAL_REGEX = /^\\d+$/u;\nvar EMAIL_REGEX = /^[\\w+-]+(?:\\.[\\w+-]+)*@[\\da-z]+(?:[.-][\\da-z]+)*\\.[a-z]{2,}$/iu;\nvar EMOJI_REGEX = /^[\\p{Extended_Pictographic}\\p{Emoji_Component}]+$/u;\nvar HEXADECIMAL_REGEX = /^(?:0h|0x)?[\\da-f]+$/iu;\nvar HEX_COLOR_REGEX = /^#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/iu;\nvar IMEI_REGEX = /^\\d{15}$|^\\d{2}-\\d{6}-\\d{6}-\\d$/u;\nvar IPV4_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive\n  /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$/u\n);\nvar IPV6_REGEX = /^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar IP_REGEX = /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$|^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar ISO_DATE_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])$/u;\nvar ISO_DATE_TIME_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_REGEX = /^(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_SECOND_REGEX = /^(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}$/u;\nvar ISO_TIMESTAMP_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}(?:\\.\\d{1,9})?(?:Z|[+-](?:0\\d|1\\d|2[0-3])(?::?[0-5]\\d)?)$/u;\nvar ISO_WEEK_REGEX = /^\\d{4}-W(?:0[1-9]|[1-4]\\d|5[0-3])$/u;\nvar MAC48_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$/iu;\nvar MAC64_REGEX = /^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar MAC_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$|^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar OCTAL_REGEX = /^(?:0o)?[0-7]+$/iu;\nvar ULID_REGEX = /^[\\da-hjkmnp-tv-z]{26}$/iu;\nvar UUID_REGEX = /^[\\da-f]{8}(?:-[\\da-f]{4}){3}-[\\da-f]{12}$/iu;\n\n// src/storages/globalConfig/globalConfig.ts\nvar store;\nfunction setGlobalConfig(config2) {\n  store = { ...store, ...config2 };\n}\nfunction getGlobalConfig(config2) {\n  return {\n    lang: config2?.lang ?? store?.lang,\n    message: config2?.message,\n    abortEarly: config2?.abortEarly ?? store?.abortEarly,\n    abortPipeEarly: config2?.abortPipeEarly ?? store?.abortPipeEarly\n  };\n}\nfunction deleteGlobalConfig() {\n  store = void 0;\n}\n\n// src/storages/globalMessage/globalMessage.ts\nvar store2;\nfunction setGlobalMessage(message, lang) {\n  if (!store2) store2 = /* @__PURE__ */ new Map();\n  store2.set(lang, message);\n}\nfunction getGlobalMessage(lang) {\n  return store2?.get(lang);\n}\nfunction deleteGlobalMessage(lang) {\n  store2?.delete(lang);\n}\n\n// src/storages/schemaMessage/schemaMessage.ts\nvar store3;\nfunction setSchemaMessage(message, lang) {\n  if (!store3) store3 = /* @__PURE__ */ new Map();\n  store3.set(lang, message);\n}\nfunction getSchemaMessage(lang) {\n  return store3?.get(lang);\n}\nfunction deleteSchemaMessage(lang) {\n  store3?.delete(lang);\n}\n\n// src/storages/specificMessage/specificMessage.ts\nvar store4;\nfunction setSpecificMessage(reference, message, lang) {\n  if (!store4) store4 = /* @__PURE__ */ new Map();\n  if (!store4.get(reference)) store4.set(reference, /* @__PURE__ */ new Map());\n  store4.get(reference).set(lang, message);\n}\nfunction getSpecificMessage(reference, lang) {\n  return store4?.get(reference)?.get(lang);\n}\nfunction deleteSpecificMessage(reference, lang) {\n  store4?.get(reference)?.delete(lang);\n}\n\n// src/utils/_stringify/_stringify.ts\nfunction _stringify(input) {\n  const type = typeof input;\n  if (type === \"string\") {\n    return `\"${input}\"`;\n  }\n  if (type === \"number\" || type === \"bigint\" || type === \"boolean\") {\n    return `${input}`;\n  }\n  if (type === \"object\" || type === \"function\") {\n    return (input && Object.getPrototypeOf(input)?.constructor?.name) ?? \"null\";\n  }\n  return type;\n}\n\n// src/utils/_addIssue/_addIssue.ts\nfunction _addIssue(context, label, dataset, config2, other) {\n  const input = other && \"input\" in other ? other.input : dataset.value;\n  const expected = other?.expected ?? context.expects ?? null;\n  const received = other?.received ?? _stringify(input);\n  const issue = {\n    kind: context.kind,\n    type: context.type,\n    input,\n    expected,\n    received,\n    message: `Invalid ${label}: ${expected ? `Expected ${expected} but r` : \"R\"}eceived ${received}`,\n    // @ts-expect-error\n    requirement: context.requirement,\n    path: other?.path,\n    issues: other?.issues,\n    lang: config2.lang,\n    abortEarly: config2.abortEarly,\n    abortPipeEarly: config2.abortPipeEarly\n  };\n  const isSchema = context.kind === \"schema\";\n  const message = other?.message ?? // @ts-expect-error\n  context.message ?? getSpecificMessage(context.reference, issue.lang) ?? (isSchema ? getSchemaMessage(issue.lang) : null) ?? config2.message ?? getGlobalMessage(issue.lang);\n  if (message) {\n    issue.message = typeof message === \"function\" ? message(issue) : message;\n  }\n  if (isSchema) {\n    dataset.typed = false;\n  }\n  if (dataset.issues) {\n    dataset.issues.push(issue);\n  } else {\n    dataset.issues = [issue];\n  }\n}\n\n// src/utils/_isLuhnAlgo/_isLuhnAlgo.ts\nvar NON_DIGIT_REGEX = /\\D/gu;\nfunction _isLuhnAlgo(input) {\n  const number2 = input.replace(NON_DIGIT_REGEX, \"\");\n  let length2 = number2.length;\n  let bit = 1;\n  let sum = 0;\n  while (length2) {\n    const value2 = +number2[--length2];\n    bit ^= 1;\n    sum += bit ? [0, 2, 4, 6, 8, 1, 3, 5, 7, 9][value2] : value2;\n  }\n  return sum % 10 === 0;\n}\n\n// src/utils/_isValidObjectKey/_isValidObjectKey.ts\nfunction _isValidObjectKey(object2, key) {\n  return Object.hasOwn(object2, key) && key !== \"__proto__\" && key !== \"prototype\" && key !== \"constructor\";\n}\n\n// src/utils/entriesFromList/entriesFromList.ts\nfunction entriesFromList(list, schema) {\n  const entries = {};\n  for (const key of list) {\n    entries[key] = schema;\n  }\n  return entries;\n}\n\n// src/utils/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  if (issue.path) {\n    let key = \"\";\n    for (const item of issue.path) {\n      if (typeof item.key === \"string\" || typeof item.key === \"number\") {\n        if (key) {\n          key += `.${item.key}`;\n        } else {\n          key += item.key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return key;\n  }\n  return null;\n}\n\n// src/utils/isOfKind/isOfKind.ts\nfunction isOfKind(kind, object2) {\n  return object2.kind === kind;\n}\n\n// src/utils/isOfType/isOfType.ts\nfunction isOfType(type, object2) {\n  return object2.type === type;\n}\n\n// src/utils/isValiError/isValiError.ts\nfunction isValiError(error) {\n  return error instanceof ValiError;\n}\n\n// src/utils/ValiError/ValiError.ts\nvar ValiError = class extends Error {\n  /**\n   * The error issues.\n   */\n  issues;\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"ValiError\";\n    this.issues = issues;\n  }\n};\n\n// src/actions/bic/bic.ts\nfunction bic(message) {\n  return {\n    kind: \"validation\",\n    type: \"bic\",\n    reference: bic,\n    async: false,\n    expects: null,\n    requirement: BIC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"BIC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/brand/brand.ts\nfunction brand(name) {\n  return {\n    kind: \"transformation\",\n    type: \"brand\",\n    reference: brand,\n    async: false,\n    name,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/bytes/bytes.ts\nfunction bytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"bytes\",\n    reference: bytes,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 !== this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/check.ts\nfunction check(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: check,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/checkAsync.ts\nfunction checkAsync(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: checkAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.typed && !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/checkItems/checkItems.ts\nfunction checkItems(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check_items\",\n    reference: checkItems,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        for (let index = 0; index < dataset.value.length; index++) {\n          const item = dataset.value[index];\n          if (!this.requirement(item, index, dataset.value)) {\n            _addIssue(this, \"item\", dataset, config2, {\n              input: item,\n              path: [\n                {\n                  type: \"array\",\n                  origin: \"value\",\n                  input: dataset.value,\n                  key: index,\n                  value: item\n                }\n              ]\n            });\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/creditCard/creditCard.ts\nvar CREDIT_CARD_REGEX = /^(?:\\d{14,19}|\\d{4}(?: \\d{3,6}){2,4}|\\d{4}(?:-\\d{3,6}){2,4})$/u;\nvar SANITIZE_REGEX = /[- ]/gu;\nvar PROVIDER_REGEX_LIST = [\n  // American Express\n  /^3[47]\\d{13}$/u,\n  // Diners Club\n  /^3(?:0[0-5]|[68]\\d)\\d{11,13}$/u,\n  // Discover\n  /^6(?:011|5\\d{2})\\d{12,15}$/u,\n  // JCB\n  /^(?:2131|1800|35\\d{3})\\d{11}$/u,\n  // Mastercard\n  /^5[1-5]\\d{2}|(?:222\\d|22[3-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)\\d{12}$/u,\n  // UnionPay\n  /^(?:6[27]\\d{14,17}|81\\d{14,17})$/u,\n  // Visa\n  /^4\\d{12}(?:\\d{3,6})?$/u\n];\nfunction creditCard(message) {\n  return {\n    kind: \"validation\",\n    type: \"credit_card\",\n    reference: creditCard,\n    async: false,\n    expects: null,\n    requirement(input) {\n      let sanitized;\n      return CREDIT_CARD_REGEX.test(input) && // Remove any hyphens and blanks\n      (sanitized = input.replace(SANITIZE_REGEX, \"\")) && // Check if it matches a provider\n      PROVIDER_REGEX_LIST.some((regex2) => regex2.test(sanitized)) && // Check if passes luhn algorithm\n      _isLuhnAlgo(sanitized);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"credit card\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/cuid2/cuid2.ts\nfunction cuid2(message) {\n  return {\n    kind: \"validation\",\n    type: \"cuid2\",\n    reference: cuid2,\n    async: false,\n    expects: null,\n    requirement: CUID2_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"Cuid2\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/decimal/decimal.ts\nfunction decimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"decimal\",\n    reference: decimal,\n    async: false,\n    expects: null,\n    requirement: DECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"decimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/email/email.ts\nfunction email(message) {\n  return {\n    kind: \"validation\",\n    type: \"email\",\n    reference: email,\n    expects: null,\n    async: false,\n    requirement: EMAIL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"email\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/emoji/emoji.ts\nfunction emoji(message) {\n  return {\n    kind: \"validation\",\n    type: \"emoji\",\n    reference: emoji,\n    async: false,\n    expects: null,\n    requirement: EMOJI_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"emoji\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/empty/empty.ts\nfunction empty(message) {\n  return {\n    kind: \"validation\",\n    type: \"empty\",\n    reference: empty,\n    async: false,\n    expects: \"0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/endsWith/endsWith.ts\nfunction endsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"ends_with\",\n    reference: endsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.endsWith(this.requirement)) {\n        _addIssue(this, \"end\", dataset, config2, {\n          received: `\"${dataset.value.slice(-this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/everyItem/everyItem.ts\nfunction everyItem(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"every_item\",\n    reference: everyItem,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.every(this.requirement)) {\n        _addIssue(this, \"item\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/excludes/excludes.ts\nfunction excludes(requirement, message) {\n  const received = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"excludes\",\n    reference: excludes,\n    async: false,\n    expects: `!${received}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, { received });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/filterItems/filterItems.ts\nfunction filterItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"filter_items\",\n    reference: filterItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.filter(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/findItem/findItem.ts\nfunction findItem(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"find_item\",\n    reference: findItem,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.find(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/finite/finite.ts\nfunction finite(message) {\n  return {\n    kind: \"validation\",\n    type: \"finite\",\n    reference: finite,\n    async: false,\n    expects: null,\n    requirement: Number.isFinite,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"finite\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hash/hash.ts\nvar HASH_LENGTHS = {\n  md4: 32,\n  md5: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n  adler32: 8\n};\nfunction hash(types, message) {\n  return {\n    kind: \"validation\",\n    type: \"hash\",\n    reference: hash,\n    expects: null,\n    async: false,\n    requirement: RegExp(\n      types.map((type) => `^[a-f0-9]{${HASH_LENGTHS[type]}}$`).join(\"|\"),\n      \"iu\"\n    ),\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hash\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexadecimal/hexadecimal.ts\nfunction hexadecimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"hexadecimal\",\n    reference: hexadecimal,\n    async: false,\n    expects: null,\n    requirement: HEXADECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hexadecimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexColor/hexColor.ts\nfunction hexColor(message) {\n  return {\n    kind: \"validation\",\n    type: \"hex_color\",\n    reference: hexColor,\n    async: false,\n    expects: null,\n    requirement: HEX_COLOR_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hex color\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/imei/imei.ts\nfunction imei(message) {\n  return {\n    kind: \"validation\",\n    type: \"imei\",\n    reference: imei,\n    async: false,\n    expects: null,\n    requirement(input) {\n      return IMEI_REGEX.test(input) && _isLuhnAlgo(input);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"IMEI\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/includes/includes.ts\nfunction includes(requirement, message) {\n  const expects = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"includes\",\n    reference: includes,\n    async: false,\n    expects,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, {\n          received: `!${expects}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/integer/integer.ts\nfunction integer(message) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: integer,\n    async: false,\n    expects: null,\n    requirement: Number.isInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ip/ip.ts\nfunction ip(message) {\n  return {\n    kind: \"validation\",\n    type: \"ip\",\n    reference: ip,\n    async: false,\n    expects: null,\n    requirement: IP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IP\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv4/ipv4.ts\nfunction ipv4(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv4\",\n    reference: ipv4,\n    async: false,\n    expects: null,\n    requirement: IPV4_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv4\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv6/ipv6.ts\nfunction ipv6(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv6\",\n    reference: ipv6,\n    async: false,\n    expects: null,\n    requirement: IPV6_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv6\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDate/isoDate.ts\nfunction isoDate(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date\",\n    reference: isoDate,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDateTime/isoDateTime.ts\nfunction isoDateTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date_time\",\n    reference: isoDateTime,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date-time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTime/isoTime.ts\nfunction isoTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time\",\n    reference: isoTime,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimeSecond/isoTimeSecond.ts\nfunction isoTimeSecond(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time_second\",\n    reference: isoTimeSecond,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_SECOND_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time-second\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimestamp/isoTimestamp.ts\nfunction isoTimestamp(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_timestamp\",\n    reference: isoTimestamp,\n    async: false,\n    expects: null,\n    requirement: ISO_TIMESTAMP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"timestamp\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoWeek/isoWeek.ts\nfunction isoWeek(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_week\",\n    reference: isoWeek,\n    async: false,\n    expects: null,\n    requirement: ISO_WEEK_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"week\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/length/length.ts\nfunction length(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"length\",\n    reference: length,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length !== this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac/mac.ts\nfunction mac(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac\",\n    reference: mac,\n    async: false,\n    expects: null,\n    requirement: MAC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac48/mac48.ts\nfunction mac48(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac48\",\n    reference: mac48,\n    async: false,\n    expects: null,\n    requirement: MAC48_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"48-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac64/mac64.ts\nfunction mac64(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac64\",\n    reference: mac64,\n    async: false,\n    expects: null,\n    requirement: MAC64_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"64-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mapItems/mapItems.ts\nfunction mapItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"map_items\",\n    reference: mapItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.map(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxBytes/maxBytes.ts\nfunction maxBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_bytes\",\n    reference: maxBytes,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 > this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxLength/maxLength.ts\nfunction maxLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_length\",\n    reference: maxLength,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxSize/maxSize.ts\nfunction maxSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_size\",\n    reference: maxSize,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size > this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxValue/maxValue.ts\nfunction maxValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_value\",\n    reference: maxValue,\n    async: false,\n    expects: `<=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value > this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mimeType/mimeType.ts\nfunction mimeType(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"mime_type\",\n    reference: mimeType,\n    async: false,\n    expects: requirement.map((option) => `\"${option}\"`).join(\" | \") || \"never\",\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.includes(dataset.value.type)) {\n        _addIssue(this, \"MIME type\", dataset, config2, {\n          received: `\"${dataset.value.type}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minBytes/minBytes.ts\nfunction minBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_bytes\",\n    reference: minBytes,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 < this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minLength/minLength.ts\nfunction minLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_length\",\n    reference: minLength,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length < this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minSize/minSize.ts\nfunction minSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_size\",\n    reference: minSize,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size < this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minValue/minValue.ts\nfunction minValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_value\",\n    reference: minValue,\n    async: false,\n    expects: `>=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value < this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/multipleOf/multipleOf.ts\nfunction multipleOf(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"multiple_of\",\n    reference: multipleOf,\n    async: false,\n    expects: `%${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value % this.requirement !== 0) {\n        _addIssue(this, \"multiple\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/nonEmpty/nonEmpty.ts\nfunction nonEmpty(message) {\n  return {\n    kind: \"validation\",\n    type: \"non_empty\",\n    reference: nonEmpty,\n    async: false,\n    expects: \"!0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: \"0\"\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/normalize/normalize.ts\nfunction normalize(form) {\n  return {\n    kind: \"transformation\",\n    type: \"normalize\",\n    reference: normalize,\n    async: false,\n    form,\n    _run(dataset) {\n      dataset.value = dataset.value.normalize(this.form);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notBytes/notBytes.ts\nfunction notBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_bytes\",\n    reference: notBytes,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 === this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notLength/notLength.ts\nfunction notLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_length\",\n    reference: notLength,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notSize/notSize.ts\nfunction notSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_size\",\n    reference: notSize,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size === this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notValue/notValue.ts\nfunction notValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_value\",\n    reference: notValue,\n    async: false,\n    expects: requirement instanceof Date ? `!${requirement.toJSON()}` : `!${_stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && this.requirement <= dataset.value && this.requirement >= dataset.value) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/octal/octal.ts\nfunction octal(message) {\n  return {\n    kind: \"validation\",\n    type: \"octal\",\n    reference: octal,\n    async: false,\n    expects: null,\n    requirement: OCTAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"octal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/partialCheck/utils/_isPartiallyTyped/_isPartiallyTyped.ts\nfunction _isPartiallyTyped(dataset, pathList) {\n  if (dataset.issues) {\n    for (const path of pathList) {\n      for (const issue of dataset.issues) {\n        let typed = false;\n        const bound = Math.min(path.length, issue.path?.length ?? 0);\n        for (let index = 0; index < bound; index++) {\n          if (path[index] !== issue.path[index].key) {\n            typed = true;\n            break;\n          }\n        }\n        if (!typed) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n// src/actions/partialCheck/partialCheck.ts\nfunction partialCheck(pathList, requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"partial_check\",\n    reference: partialCheck,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (_isPartiallyTyped(dataset, pathList) && // @ts-expect-error\n      !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/partialCheck/partialCheckAsync.ts\nfunction partialCheckAsync(pathList, requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"partial_check\",\n    reference: partialCheckAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (_isPartiallyTyped(dataset, pathList) && // @ts-expect-error\n      !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawCheck/rawCheck.ts\nfunction rawCheck(action) {\n  return {\n    kind: \"validation\",\n    type: \"raw_check\",\n    reference: rawCheck,\n    async: false,\n    expects: null,\n    _run(dataset, config2) {\n      action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info)\n      });\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawCheck/rawCheckAsync.ts\nfunction rawCheckAsync(action) {\n  return {\n    kind: \"validation\",\n    type: \"raw_check\",\n    reference: rawCheckAsync,\n    async: true,\n    expects: null,\n    async _run(dataset, config2) {\n      await action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info)\n      });\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawTransform/rawTransform.ts\nfunction rawTransform(action) {\n  return {\n    kind: \"transformation\",\n    type: \"raw_transform\",\n    reference: rawTransform,\n    async: false,\n    _run(dataset, config2) {\n      const output = action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info),\n        NEVER: null\n      });\n      if (dataset.issues) {\n        dataset.typed = false;\n      } else {\n        dataset.value = output;\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawTransform/rawTransformAsync.ts\nfunction rawTransformAsync(action) {\n  return {\n    kind: \"transformation\",\n    type: \"raw_transform\",\n    reference: rawTransformAsync,\n    async: true,\n    async _run(dataset, config2) {\n      const output = await action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info),\n        NEVER: null\n      });\n      if (dataset.issues) {\n        dataset.typed = false;\n      } else {\n        dataset.value = output;\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/readonly/readonly.ts\nfunction readonly() {\n  return {\n    kind: \"transformation\",\n    type: \"readonly\",\n    reference: readonly,\n    async: false,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/reduceItems/reduceItems.ts\nfunction reduceItems(operation, initial) {\n  return {\n    kind: \"transformation\",\n    type: \"reduce_items\",\n    reference: reduceItems,\n    async: false,\n    operation,\n    initial,\n    _run(dataset) {\n      dataset.value = dataset.value.reduce(this.operation, this.initial);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/regex/regex.ts\nfunction regex(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"regex\",\n    reference: regex,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"format\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/safeInteger/safeInteger.ts\nfunction safeInteger(message) {\n  return {\n    kind: \"validation\",\n    type: \"safe_integer\",\n    reference: safeInteger,\n    async: false,\n    expects: null,\n    requirement: Number.isSafeInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"safe integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/size/size.ts\nfunction size(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"size\",\n    reference: size,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size !== this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/someItem/someItem.ts\nfunction someItem(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"some_item\",\n    reference: someItem,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.some(this.requirement)) {\n        _addIssue(this, \"item\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/sortItems/sortItems.ts\nfunction sortItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"sort_items\",\n    reference: sortItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.sort(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/startsWith/startsWith.ts\nfunction startsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"starts_with\",\n    reference: startsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.startsWith(this.requirement)) {\n        _addIssue(this, \"start\", dataset, config2, {\n          received: `\"${dataset.value.slice(0, this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toLowerCase/toLowerCase.ts\nfunction toLowerCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_lower_case\",\n    reference: toLowerCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toLowerCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMaxValue/toMaxValue.ts\nfunction toMaxValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_max_value\",\n    reference: toMaxValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value > this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMinValue/toMinValue.ts\nfunction toMinValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_min_value\",\n    reference: toMinValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value < this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toUpperCase/toUpperCase.ts\nfunction toUpperCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_upper_case\",\n    reference: toUpperCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toUpperCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transform.ts\nfunction transform(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transform,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = this.operation(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transformAsync.ts\nfunction transformAsync(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transformAsync,\n    async: true,\n    operation,\n    async _run(dataset) {\n      dataset.value = await this.operation(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trim/trim.ts\nfunction trim() {\n  return {\n    kind: \"transformation\",\n    type: \"trim\",\n    reference: trim,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trim();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimEnd/trimEnd.ts\nfunction trimEnd() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_end\",\n    reference: trimEnd,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimEnd();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimStart/trimStart.ts\nfunction trimStart() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_start\",\n    reference: trimStart,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimStart();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ulid/ulid.ts\nfunction ulid(message) {\n  return {\n    kind: \"validation\",\n    type: \"ulid\",\n    reference: ulid,\n    async: false,\n    expects: null,\n    requirement: ULID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"ULID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/url/url.ts\nfunction url(message) {\n  return {\n    kind: \"validation\",\n    type: \"url\",\n    reference: url,\n    async: false,\n    expects: null,\n    requirement(input) {\n      try {\n        new URL(input);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"URL\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/uuid/uuid.ts\nfunction uuid(message) {\n  return {\n    kind: \"validation\",\n    type: \"uuid\",\n    reference: uuid,\n    async: false,\n    expects: null,\n    requirement: UUID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"UUID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/value/value.ts\nfunction value(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"value\",\n    reference: value,\n    async: false,\n    expects: requirement instanceof Date ? requirement.toJSON() : _stringify(requirement),\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !(this.requirement <= dataset.value && this.requirement >= dataset.value)) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/config/config.ts\nfunction config(schema, config2) {\n  return {\n    ...schema,\n    _run(dataset, config_) {\n      return schema._run(dataset, { ...config_, ...config2 });\n    }\n  };\n}\n\n// src/methods/getFallback/getFallback.ts\nfunction getFallback(schema, dataset, config2) {\n  return typeof schema.fallback === \"function\" ? (\n    // @ts-expect-error\n    schema.fallback(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.fallback\n  );\n}\n\n// src/methods/fallback/fallback.ts\nfunction fallback(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? { typed: true, value: getFallback(this, dataset, config2) } : dataset;\n    }\n  };\n}\n\n// src/methods/fallback/fallbackAsync.ts\nfunction fallbackAsync(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    async: true,\n    async _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? (\n        // @ts-expect-error\n        { typed: true, value: await getFallback(this, dataset, config2) }\n      ) : dataset;\n    }\n  };\n}\n\n// src/methods/flatten/flatten.ts\nfunction flatten(issues) {\n  const flatErrors = {};\n  for (const issue of issues) {\n    if (issue.path) {\n      const dotPath = getDotPath(issue);\n      if (dotPath) {\n        if (!flatErrors.nested) {\n          flatErrors.nested = {};\n        }\n        if (flatErrors.nested[dotPath]) {\n          flatErrors.nested[dotPath].push(issue.message);\n        } else {\n          flatErrors.nested[dotPath] = [issue.message];\n        }\n      } else {\n        if (flatErrors.other) {\n          flatErrors.other.push(issue.message);\n        } else {\n          flatErrors.other = [issue.message];\n        }\n      }\n    } else {\n      if (flatErrors.root) {\n        flatErrors.root.push(issue.message);\n      } else {\n        flatErrors.root = [issue.message];\n      }\n    }\n  }\n  return flatErrors;\n}\n\n// src/methods/forward/forward.ts\nfunction forward(action, pathKeys) {\n  return {\n    ...action,\n    _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/forward/forwardAsync.ts\nfunction forwardAsync(action, pathKeys) {\n  return {\n    ...action,\n    async: true,\n    async _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      await action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/getDefault/getDefault.ts\nfunction getDefault(schema, dataset, config2) {\n  return typeof schema.default === \"function\" ? (\n    // @ts-expect-error\n    schema.default(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.default\n  );\n}\n\n// src/methods/getDefaults/getDefaults.ts\nfunction getDefaults(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getDefaults(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getDefaults);\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getDefaults/getDefaultsAsync.ts\nasync function getDefaultsAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getDefaultsAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getDefaultsAsync));\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getFallbacks/getFallbacks.ts\nfunction getFallbacks(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getFallbacks(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getFallbacks);\n  }\n  return getFallback(schema);\n}\n\n// src/methods/getFallbacks/getFallbacksAsync.ts\nasync function getFallbacksAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getFallbacksAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getFallbacksAsync));\n  }\n  return getFallback(schema);\n}\n\n// src/methods/is/is.ts\nfunction is(schema, input) {\n  return !schema._run({ typed: false, value: input }, { abortEarly: true }).issues;\n}\n\n// src/schemas/any/any.ts\nfunction any() {\n  return {\n    kind: \"schema\",\n    type: \"any\",\n    reference: any,\n    expects: \"any\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/array.ts\nfunction array(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: array,\n    expects: \"Array\",\n    async: false,\n    item,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < input.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.item._run({ typed: false, value: value2 }, config2);\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/arrayAsync.ts\nfunction arrayAsync(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: arrayAsync,\n    expects: \"Array\",\n    async: true,\n    item,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          input.map((value2) => this.item._run({ typed: false, value: value2 }, config2))\n        );\n        for (let key = 0; key < itemDatasets.length; key++) {\n          const itemDataset = itemDatasets[key];\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: input[key]\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/bigint/bigint.ts\nfunction bigint(message) {\n  return {\n    kind: \"schema\",\n    type: \"bigint\",\n    reference: bigint,\n    expects: \"bigint\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"bigint\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/blob/blob.ts\nfunction blob(message) {\n  return {\n    kind: \"schema\",\n    type: \"blob\",\n    reference: blob,\n    expects: \"Blob\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Blob) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/boolean/boolean.ts\nfunction boolean(message) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: boolean,\n    expects: \"boolean\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"boolean\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/custom.ts\nfunction custom(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: custom,\n    expects: \"unknown\",\n    async: false,\n    check: check2,\n    message,\n    _run(dataset, config2) {\n      if (this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/customAsync.ts\nfunction customAsync(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: customAsync,\n    expects: \"unknown\",\n    async: true,\n    check: check2,\n    message,\n    async _run(dataset, config2) {\n      if (await this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/date/date.ts\nfunction date(message) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: date,\n    expects: \"Date\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Date) {\n        if (!isNaN(dataset.value)) {\n          dataset.typed = true;\n        } else {\n          _addIssue(this, \"type\", dataset, config2, {\n            received: '\"Invalid Date\"'\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/enum/enum.ts\nfunction enum_(enum__, message) {\n  const options = Object.entries(enum__).filter(([key]) => isNaN(+key)).map(([, value2]) => value2);\n  return {\n    kind: \"schema\",\n    type: \"enum\",\n    reference: enum_,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    enum: enum__,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/file/file.ts\nfunction file(message) {\n  return {\n    kind: \"schema\",\n    type: \"file\",\n    reference: file,\n    expects: \"File\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof File) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/function/function.ts\nfunction function_(message) {\n  return {\n    kind: \"schema\",\n    type: \"function\",\n    reference: function_,\n    expects: \"Function\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"function\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/instance/instance.ts\nfunction instance(class_, message) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: instance,\n    expects: class_.name,\n    async: false,\n    class: class_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof this.class) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/utils/_merge/_merge.ts\nfunction _merge(value1, value2) {\n  if (typeof value1 === typeof value2) {\n    if (value1 === value2 || value1 instanceof Date && value2 instanceof Date && +value1 === +value2) {\n      return { value: value1 };\n    }\n    if (value1 && value2 && value1.constructor === Object && value2.constructor === Object) {\n      for (const key in value2) {\n        if (key in value1) {\n          const dataset = _merge(value1[key], value2[key]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[key] = dataset.value;\n        } else {\n          value1[key] = value2[key];\n        }\n      }\n      return { value: value1 };\n    }\n    if (Array.isArray(value1) && Array.isArray(value2)) {\n      if (value1.length === value2.length) {\n        for (let index = 0; index < value1.length; index++) {\n          const dataset = _merge(value1[index], value2[index]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[index] = dataset.value;\n        }\n        return { value: value1 };\n      }\n    }\n  }\n  return { issue: true };\n}\n\n// src/schemas/intersect/intersect.ts\nfunction intersect(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersect,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        for (const schema of this.options) {\n          const optionDataset = schema._run(\n            { typed: false, value: input },\n            config2\n          );\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/intersectAsync.ts\nfunction intersectAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersectAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        const optionDatasets = await Promise.all(\n          this.options.map(\n            (schema) => schema._run({ typed: false, value: input }, config2)\n          )\n        );\n        for (const optionDataset of optionDatasets) {\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/lazy/lazy.ts\nfunction lazy(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazy,\n    expects: \"unknown\",\n    async: false,\n    getter,\n    _run(dataset, config2) {\n      return this.getter(dataset.value)._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/lazy/lazyAsync.ts\nfunction lazyAsync(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazyAsync,\n    expects: \"unknown\",\n    async: true,\n    getter,\n    async _run(dataset, config2) {\n      return (await this.getter(dataset.value))._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/literal/literal.ts\nfunction literal(literal_, message) {\n  return {\n    kind: \"schema\",\n    type: \"literal\",\n    reference: literal,\n    expects: _stringify(literal_),\n    async: false,\n    literal: literal_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === this.literal) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObject.ts\nfunction looseObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObjectAsync.ts\nfunction looseObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTuple.ts\nfunction looseTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTupleAsync.ts\nfunction looseTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/map.ts\nfunction map(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: map,\n    expects: \"Map\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        for (const [inputKey, inputValue] of input) {\n          const keyDataset = this.key._run(\n            { typed: false, value: inputKey },\n            config2\n          );\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/mapAsync.ts\nfunction mapAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: mapAsync,\n    expects: \"Map\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        const datasets = await Promise.all(\n          [...input].map(\n            ([inputKey, inputValue]) => Promise.all([\n              inputKey,\n              inputValue,\n              this.key._run({ typed: false, value: inputKey }, config2),\n              this.value._run({ typed: false, value: inputValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          inputKey,\n          inputValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nan/nan.ts\nfunction nan(message) {\n  return {\n    kind: \"schema\",\n    type: \"nan\",\n    reference: nan,\n    expects: \"NaN\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (Number.isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/never/never.ts\nfunction never(message) {\n  return {\n    kind: \"schema\",\n    type: \"never\",\n    reference: never,\n    expects: \"never\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      _addIssue(this, \"type\", dataset, config2);\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullable.ts\nfunction nonNullable(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullable,\n    expects: \"!null\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullableAsync.ts\nfunction nonNullableAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullableAsync,\n    expects: \"!null\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullish.ts\nfunction nonNullish(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullish,\n    expects: \"!null & !undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullishAsync.ts\nfunction nonNullishAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullishAsync,\n    expects: \"!null & !undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptional.ts\nfunction nonOptional(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptional,\n    expects: \"!undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptionalAsync.ts\nfunction nonOptionalAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptionalAsync,\n    expects: \"!undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/null/null.ts\nfunction null_(message) {\n  return {\n    kind: \"schema\",\n    type: \"null\",\n    reference: null_,\n    expects: \"null\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nullable/nullable.ts\nfunction nullable(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullable,\n    expects: `${wrapped.expects} | null`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullable/nullableAsync.ts\nfunction nullableAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullableAsync,\n    expects: `${wrapped.expects} | null`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullish.ts\nfunction nullish(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullish,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullishAsync.ts\nfunction nullishAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullishAsync,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/number/number.ts\nfunction number(message) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: number,\n    expects: \"number\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"number\" && !isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/object.ts\nfunction object(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: object,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/objectAsync.ts\nfunction objectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: objectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRest.ts\nfunction objectWithRest(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRest,\n    expects: \"Object\",\n    async: false,\n    entries,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              const value2 = input[key];\n              const valueDataset = this.rest._run(\n                { typed: false, value: value2 },\n                config2\n              );\n              if (valueDataset.issues) {\n                const pathItem = {\n                  type: \"object\",\n                  origin: \"value\",\n                  input,\n                  key,\n                  value: value2\n                };\n                for (const issue of valueDataset.issues) {\n                  if (issue.path) {\n                    issue.path.unshift(pathItem);\n                  } else {\n                    issue.path = [pathItem];\n                  }\n                  dataset.issues?.push(issue);\n                }\n                if (!dataset.issues) {\n                  dataset.issues = valueDataset.issues;\n                }\n                if (config2.abortEarly) {\n                  dataset.typed = false;\n                  break;\n                }\n              }\n              if (!valueDataset.typed) {\n                dataset.typed = false;\n              }\n              dataset.value[key] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRestAsync.ts\nfunction objectWithRestAsync(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRestAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal entry\n          Promise.all(\n            Object.entries(this.entries).map(async ([key, schema]) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await schema._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other entries with rest schema\n          Promise.all(\n            Object.entries(input).filter(\n              ([key]) => _isValidObjectKey(input, key) && !(key in this.entries)\n            ).map(\n              async ([key, value2]) => [\n                key,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ]\n            )\n          )\n        ]);\n        for (const [key, value2, valueDataset] of normalDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, valueDataset] of restDatasets) {\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!valueDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/optional/optional.ts\nfunction optional(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optional,\n    expects: `${wrapped.expects} | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/optional/optionalAsync.ts\nfunction optionalAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optionalAsync,\n    expects: `${wrapped.expects} | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/picklist/picklist.ts\nfunction picklist(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"picklist\",\n    reference: picklist,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/promise/promise.ts\nfunction promise(message) {\n  return {\n    kind: \"schema\",\n    type: \"promise\",\n    reference: promise,\n    expects: \"Promise\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Promise) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/record.ts\nfunction record(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: record,\n    expects: \"Object\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const entryKey in input) {\n          if (_isValidObjectKey(input, entryKey)) {\n            const entryValue = input[entryKey];\n            const keyDataset = this.key._run(\n              { typed: false, value: entryKey },\n              config2\n            );\n            if (keyDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"key\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of keyDataset.issues) {\n                issue.path = [pathItem];\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = keyDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            const valueDataset = this.value._run(\n              { typed: false, value: entryValue },\n              config2\n            );\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!keyDataset.typed || !valueDataset.typed) {\n              dataset.typed = false;\n            }\n            if (keyDataset.typed) {\n              dataset.value[keyDataset.value] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/recordAsync.ts\nfunction recordAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: recordAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const datasets = await Promise.all(\n          Object.entries(input).filter(([key2]) => _isValidObjectKey(input, key2)).map(\n            ([entryKey, entryValue]) => Promise.all([\n              entryKey,\n              entryValue,\n              this.key._run({ typed: false, value: entryKey }, config2),\n              this.value._run({ typed: false, value: entryValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          entryKey,\n          entryValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"key\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of keyDataset.issues) {\n              issue.path = [pathItem];\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (keyDataset.typed) {\n            dataset.value[keyDataset.value] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/set.ts\nfunction set(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: set,\n    expects: \"Set\",\n    async: false,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        for (const inputValue of input) {\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              key: null,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/setAsync.ts\nfunction setAsync(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: setAsync,\n    expects: \"Set\",\n    async: true,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        const valueDatasets = await Promise.all(\n          [...input].map(\n            async (inputValue) => [\n              inputValue,\n              await this.value._run(\n                { typed: false, value: inputValue },\n                config2\n              )\n            ]\n          )\n        );\n        for (const [inputValue, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              key: null,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObject.ts\nfunction strictObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObjectAsync.ts\nfunction strictObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTuple.ts\nfunction strictTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && this.items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key: this.items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTupleAsync.ts\nfunction strictTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && this.items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key: this.items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/string/string.ts\nfunction string(message) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: string,\n    expects: \"string\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"string\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/symbol/symbol.ts\nfunction symbol(message) {\n  return {\n    kind: \"schema\",\n    type: \"symbol\",\n    reference: symbol,\n    expects: \"symbol\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"symbol\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tuple.ts\nfunction tuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tupleAsync.ts\nfunction tupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRest.ts\nfunction tupleWithRest(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRest,\n    expects: \"Array\",\n    async: false,\n    items,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            const value2 = input[key];\n            const itemDataset = this.rest._run({ typed: false, value: value2 }, config2);\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRestAsync.ts\nfunction tupleWithRestAsync(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRestAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal item\n          Promise.all(\n            this.items.map(async (item, key) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await item._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other items with rest schema\n          Promise.all(\n            input.slice(this.items.length).map(async (value2, key) => {\n              return [\n                key + this.items.length,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          )\n        ]);\n        for (const [key, value2, itemDataset] of normalDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, itemDataset] of restDatasets) {\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/undefined/undefined.ts\nfunction undefined_(message) {\n  return {\n    kind: \"schema\",\n    type: \"undefined\",\n    reference: undefined_,\n    expects: \"undefined\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/utils/_subIssues/_subIssues.ts\nfunction _subIssues(datasets) {\n  let issues;\n  if (datasets) {\n    for (const dataset of datasets) {\n      if (issues) {\n        issues.push(...dataset.issues);\n      } else {\n        issues = dataset.issues;\n      }\n    }\n  }\n  return issues;\n}\n\n// src/schemas/union/union.ts\nfunction union(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: union,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/unionAsync.ts\nfunction unionAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: unionAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = await schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/unknown/unknown.ts\nfunction unknown() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: unknown,\n    expects: \"unknown\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/utils/_discriminators/_discriminators.ts\nfunction _discriminators(key, options, set2 = /* @__PURE__ */ new Set()) {\n  for (const schema of options) {\n    if (schema.type === \"variant\") {\n      _discriminators(key, schema.options, set2);\n    } else {\n      set2.add(schema.entries[key].expects);\n    }\n  }\n  return set2;\n}\n\n// src/schemas/variant/variant.ts\nfunction variant(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variant,\n    expects: \"Object\",\n    async: false,\n    key,\n    options,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            ).issues) {\n              const optionDataset = schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/variantAsync.ts\nfunction variantAsync(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variantAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    options,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !(await schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            )).issues) {\n              const optionDataset = await schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/void/void.ts\nfunction void_(message) {\n  return {\n    kind: \"schema\",\n    type: \"void\",\n    reference: void_,\n    expects: \"void\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/keyof/keyof.ts\nfunction keyof(schema, message) {\n  return picklist(Object.keys(schema.entries), message);\n}\n\n// src/methods/omit/omit.ts\nfunction omit(schema, keys) {\n  const entries = {\n    ...schema.entries\n  };\n  for (const key of keys) {\n    delete entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/parse/parse.ts\nfunction parse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parse/parseAsync.ts\nasync function parseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parser/parser.ts\nfunction parser(schema, config2) {\n  const func = (input) => parse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/parser/parserAsync.ts\nfunction parserAsync(schema, config2) {\n  const func = (input) => parseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/partial/partial.ts\nfunction partial(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optional(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/partial/partialAsync.ts\nfunction partialAsync(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optionalAsync(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pick/pick.ts\nfunction pick(schema, keys) {\n  const entries = {};\n  for (const key of keys) {\n    entries[key] = schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pipe/pipe.ts\nfunction pipe(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        if (dataset.issues && (pipe2[index].kind === \"schema\" || pipe2[index].kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n        if (!dataset.issues || !config2.abortEarly && !config2.abortPipeEarly) {\n          dataset = pipe2[index]._run(dataset, config2);\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/pipe/pipeAsync.ts\nfunction pipeAsync(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    async: true,\n    async _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        if (dataset.issues && (pipe2[index].kind === \"schema\" || pipe2[index].kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n        if (!dataset.issues || !config2.abortEarly && !config2.abortPipeEarly) {\n          dataset = await pipe2[index]._run(dataset, config2);\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/required/required.ts\nfunction required(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptional(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/required/requiredAsync.ts\nfunction requiredAsync(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptionalAsync(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/safeParse/safeParse.ts\nfunction safeParse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParse/safeParseAsync.ts\nasync function safeParseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParser/safeParser.ts\nfunction safeParser(schema, config2) {\n  const func = (input) => safeParse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/safeParser/safeParserAsync.ts\nfunction safeParserAsync(schema, config2) {\n  const func = (input) => safeParseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/unwrap/unwrap.ts\nfunction unwrap(schema) {\n  return schema.wrapped;\n}\nexport {\n  BIC_REGEX,\n  CUID2_REGEX,\n  DECIMAL_REGEX,\n  EMAIL_REGEX,\n  EMOJI_REGEX,\n  HEXADECIMAL_REGEX,\n  HEX_COLOR_REGEX,\n  IMEI_REGEX,\n  IPV4_REGEX,\n  IPV6_REGEX,\n  IP_REGEX,\n  ISO_DATE_REGEX,\n  ISO_DATE_TIME_REGEX,\n  ISO_TIMESTAMP_REGEX,\n  ISO_TIME_REGEX,\n  ISO_TIME_SECOND_REGEX,\n  ISO_WEEK_REGEX,\n  MAC48_REGEX,\n  MAC64_REGEX,\n  MAC_REGEX,\n  OCTAL_REGEX,\n  ULID_REGEX,\n  UUID_REGEX,\n  ValiError,\n  _addIssue,\n  _isLuhnAlgo,\n  _isValidObjectKey,\n  _stringify,\n  any,\n  array,\n  arrayAsync,\n  awaitAsync,\n  bic,\n  bigint,\n  blob,\n  boolean,\n  brand,\n  bytes,\n  check,\n  checkAsync,\n  checkItems,\n  config,\n  creditCard,\n  cuid2,\n  custom,\n  customAsync,\n  date,\n  decimal,\n  deleteGlobalConfig,\n  deleteGlobalMessage,\n  deleteSchemaMessage,\n  deleteSpecificMessage,\n  email,\n  emoji,\n  empty,\n  endsWith,\n  entriesFromList,\n  enum_ as enum,\n  enum_,\n  everyItem,\n  excludes,\n  fallback,\n  fallbackAsync,\n  file,\n  filterItems,\n  findItem,\n  finite,\n  flatten,\n  forward,\n  forwardAsync,\n  function_ as function,\n  function_,\n  getDefault,\n  getDefaults,\n  getDefaultsAsync,\n  getDotPath,\n  getFallback,\n  getFallbacks,\n  getFallbacksAsync,\n  getGlobalConfig,\n  getGlobalMessage,\n  getSchemaMessage,\n  getSpecificMessage,\n  hash,\n  hexColor,\n  hexadecimal,\n  imei,\n  includes,\n  instance,\n  integer,\n  intersect,\n  intersectAsync,\n  ip,\n  ipv4,\n  ipv6,\n  is,\n  isOfKind,\n  isOfType,\n  isValiError,\n  isoDate,\n  isoDateTime,\n  isoTime,\n  isoTimeSecond,\n  isoTimestamp,\n  isoWeek,\n  keyof,\n  lazy,\n  lazyAsync,\n  length,\n  literal,\n  looseObject,\n  looseObjectAsync,\n  looseTuple,\n  looseTupleAsync,\n  mac,\n  mac48,\n  mac64,\n  map,\n  mapAsync,\n  mapItems,\n  maxBytes,\n  maxLength,\n  maxSize,\n  maxValue,\n  mimeType,\n  minBytes,\n  minLength,\n  minSize,\n  minValue,\n  multipleOf,\n  nan,\n  never,\n  nonEmpty,\n  nonNullable,\n  nonNullableAsync,\n  nonNullish,\n  nonNullishAsync,\n  nonOptional,\n  nonOptionalAsync,\n  normalize,\n  notBytes,\n  notLength,\n  notSize,\n  notValue,\n  null_ as null,\n  null_,\n  nullable,\n  nullableAsync,\n  nullish,\n  nullishAsync,\n  number,\n  object,\n  objectAsync,\n  objectWithRest,\n  objectWithRestAsync,\n  octal,\n  omit,\n  optional,\n  optionalAsync,\n  parse,\n  parseAsync,\n  parser,\n  parserAsync,\n  partial,\n  partialAsync,\n  partialCheck,\n  partialCheckAsync,\n  pick,\n  picklist,\n  pipe,\n  pipeAsync,\n  promise,\n  rawCheck,\n  rawCheckAsync,\n  rawTransform,\n  rawTransformAsync,\n  readonly,\n  record,\n  recordAsync,\n  reduceItems,\n  regex,\n  required,\n  requiredAsync,\n  safeInteger,\n  safeParse,\n  safeParseAsync,\n  safeParser,\n  safeParserAsync,\n  set,\n  setAsync,\n  setGlobalConfig,\n  setGlobalMessage,\n  setSchemaMessage,\n  setSpecificMessage,\n  size,\n  someItem,\n  sortItems,\n  startsWith,\n  strictObject,\n  strictObjectAsync,\n  strictTuple,\n  strictTupleAsync,\n  string,\n  symbol,\n  toLowerCase,\n  toMaxValue,\n  toMinValue,\n  toUpperCase,\n  transform,\n  transformAsync,\n  trim,\n  trimEnd,\n  trimStart,\n  tuple,\n  tupleAsync,\n  tupleWithRest,\n  tupleWithRestAsync,\n  ulid,\n  undefined_ as undefined,\n  undefined_,\n  union,\n  unionAsync,\n  unknown,\n  unwrap,\n  url,\n  uuid,\n  value,\n  variant,\n  variantAsync,\n  void_ as void,\n  void_\n};\n","import {\n  array,\n  boolean,\n  check,\n  integer,\n  lazy,\n  literal,\n  nullable,\n  nullish,\n  number,\n  object,\n  optional,\n  pipe,\n  record,\n  string,\n  transform,\n  tuple,\n  union,\n  unknown\n} from \"valibot\";\nimport { isValidSuiAddress, normalizeSuiAddress } from \"../../utils/sui-types.js\";\nfunction safeEnum(options) {\n  const unionOptions = Object.entries(options).map(([key, value]) => object({ [key]: value }));\n  return pipe(\n    union(unionOptions),\n    transform((value) => ({\n      ...value,\n      $kind: Object.keys(value)[0]\n    }))\n  );\n}\nconst SuiAddress = pipe(\n  string(),\n  transform((value) => normalizeSuiAddress(value)),\n  check(isValidSuiAddress)\n);\nconst ObjectID = SuiAddress;\nconst BCSBytes = string();\nconst JsonU64 = pipe(\n  union([string(), pipe(number(), integer())]),\n  check((val) => {\n    try {\n      BigInt(val);\n      return BigInt(val) >= 0 && BigInt(val) <= 18446744073709551615n;\n    } catch {\n      return false;\n    }\n  }, \"Invalid u64\")\n);\nconst ObjectRef = object({\n  objectId: SuiAddress,\n  version: JsonU64,\n  digest: string()\n});\nconst Argument = pipe(\n  union([\n    object({ GasCoin: literal(true) }),\n    object({ Input: pipe(number(), integer()), type: optional(literal(\"pure\")) }),\n    object({ Input: pipe(number(), integer()), type: optional(literal(\"object\")) }),\n    object({ Result: pipe(number(), integer()) }),\n    object({ NestedResult: tuple([pipe(number(), integer()), pipe(number(), integer())]) })\n  ]),\n  transform((value) => ({\n    ...value,\n    $kind: Object.keys(value)[0]\n  }))\n  // Defined manually to add `type?: 'pure' | 'object'` to Input\n);\nconst GasData = object({\n  budget: nullable(JsonU64),\n  price: nullable(JsonU64),\n  owner: nullable(SuiAddress),\n  payment: nullable(array(ObjectRef))\n});\nconst StructTag = object({\n  address: string(),\n  module: string(),\n  name: string(),\n  // type_params in rust, should be updated to use camelCase\n  typeParams: array(string())\n});\nconst OpenMoveTypeSignatureBody = union([\n  literal(\"address\"),\n  literal(\"bool\"),\n  literal(\"u8\"),\n  literal(\"u16\"),\n  literal(\"u32\"),\n  literal(\"u64\"),\n  literal(\"u128\"),\n  literal(\"u256\"),\n  object({ vector: lazy(() => OpenMoveTypeSignatureBody) }),\n  object({\n    datatype: object({\n      package: string(),\n      module: string(),\n      type: string(),\n      typeParameters: array(lazy(() => OpenMoveTypeSignatureBody))\n    })\n  }),\n  object({ typeParameter: pipe(number(), integer()) })\n]);\nconst OpenMoveTypeSignature = object({\n  ref: nullable(union([literal(\"&\"), literal(\"&mut\")])),\n  body: OpenMoveTypeSignatureBody\n});\nconst ProgrammableMoveCall = object({\n  package: ObjectID,\n  module: string(),\n  function: string(),\n  // snake case in rust\n  typeArguments: array(string()),\n  arguments: array(Argument),\n  _argumentTypes: optional(nullable(array(OpenMoveTypeSignature)))\n});\nconst $Intent = object({\n  name: string(),\n  inputs: record(string(), union([Argument, array(Argument)])),\n  data: record(string(), unknown())\n});\nconst Command = safeEnum({\n  MoveCall: ProgrammableMoveCall,\n  TransferObjects: object({\n    objects: array(Argument),\n    address: Argument\n  }),\n  SplitCoins: object({\n    coin: Argument,\n    amounts: array(Argument)\n  }),\n  MergeCoins: object({\n    destination: Argument,\n    sources: array(Argument)\n  }),\n  Publish: object({\n    modules: array(BCSBytes),\n    dependencies: array(ObjectID)\n  }),\n  MakeMoveVec: object({\n    type: nullable(string()),\n    elements: array(Argument)\n  }),\n  Upgrade: object({\n    modules: array(BCSBytes),\n    dependencies: array(ObjectID),\n    package: ObjectID,\n    ticket: Argument\n  }),\n  $Intent\n});\nconst ObjectArg = safeEnum({\n  ImmOrOwnedObject: ObjectRef,\n  SharedObject: object({\n    objectId: ObjectID,\n    // snake case in rust\n    initialSharedVersion: JsonU64,\n    mutable: boolean()\n  }),\n  Receiving: ObjectRef\n});\nconst CallArg = safeEnum({\n  Object: ObjectArg,\n  Pure: object({\n    bytes: BCSBytes\n  }),\n  UnresolvedPure: object({\n    value: unknown()\n  }),\n  UnresolvedObject: object({\n    objectId: ObjectID,\n    version: optional(nullable(JsonU64)),\n    digest: optional(nullable(string())),\n    initialSharedVersion: optional(nullable(JsonU64))\n  })\n});\nconst NormalizedCallArg = safeEnum({\n  Object: ObjectArg,\n  Pure: object({\n    bytes: BCSBytes\n  })\n});\nconst TransactionExpiration = safeEnum({\n  None: literal(true),\n  Epoch: JsonU64\n});\nconst TransactionData = object({\n  version: literal(2),\n  sender: nullish(SuiAddress),\n  expiration: nullish(TransactionExpiration),\n  gasData: GasData,\n  inputs: array(CallArg),\n  commands: array(Command)\n});\nexport {\n  $Intent,\n  Argument,\n  BCSBytes,\n  Command,\n  GasData,\n  JsonU64,\n  NormalizedCallArg,\n  ObjectArg,\n  ObjectID,\n  ObjectRef,\n  OpenMoveTypeSignature,\n  OpenMoveTypeSignatureBody,\n  StructTag,\n  SuiAddress,\n  TransactionData,\n  TransactionExpiration,\n  safeEnum\n};\n//# sourceMappingURL=internal.js.map\n","import { toBase64 } from \"@mysten/bcs\";\nimport { parse } from \"valibot\";\nimport { normalizeSuiObjectId } from \"../utils/sui-types.js\";\nimport { Argument } from \"./data/internal.js\";\nvar UpgradePolicy = /* @__PURE__ */ ((UpgradePolicy2) => {\n  UpgradePolicy2[UpgradePolicy2[\"COMPATIBLE\"] = 0] = \"COMPATIBLE\";\n  UpgradePolicy2[UpgradePolicy2[\"ADDITIVE\"] = 128] = \"ADDITIVE\";\n  UpgradePolicy2[UpgradePolicy2[\"DEP_ONLY\"] = 192] = \"DEP_ONLY\";\n  return UpgradePolicy2;\n})(UpgradePolicy || {});\nconst Commands = {\n  MoveCall(input) {\n    const [pkg, mod = \"\", fn = \"\"] = \"target\" in input ? input.target.split(\"::\") : [input.package, input.module, input.function];\n    return {\n      $kind: \"MoveCall\",\n      MoveCall: {\n        package: pkg,\n        module: mod,\n        function: fn,\n        typeArguments: input.typeArguments ?? [],\n        arguments: input.arguments ?? []\n      }\n    };\n  },\n  TransferObjects(objects, address) {\n    return {\n      $kind: \"TransferObjects\",\n      TransferObjects: {\n        objects: objects.map((o) => parse(Argument, o)),\n        address: parse(Argument, address)\n      }\n    };\n  },\n  SplitCoins(coin, amounts) {\n    return {\n      $kind: \"SplitCoins\",\n      SplitCoins: {\n        coin: parse(Argument, coin),\n        amounts: amounts.map((o) => parse(Argument, o))\n      }\n    };\n  },\n  MergeCoins(destination, sources) {\n    return {\n      $kind: \"MergeCoins\",\n      MergeCoins: {\n        destination: parse(Argument, destination),\n        sources: sources.map((o) => parse(Argument, o))\n      }\n    };\n  },\n  Publish({\n    modules,\n    dependencies\n  }) {\n    return {\n      $kind: \"Publish\",\n      Publish: {\n        modules: modules.map(\n          (module) => typeof module === \"string\" ? module : toBase64(new Uint8Array(module))\n        ),\n        dependencies: dependencies.map((dep) => normalizeSuiObjectId(dep))\n      }\n    };\n  },\n  Upgrade({\n    modules,\n    dependencies,\n    package: packageId,\n    ticket\n  }) {\n    return {\n      $kind: \"Upgrade\",\n      Upgrade: {\n        modules: modules.map(\n          (module) => typeof module === \"string\" ? module : toBase64(new Uint8Array(module))\n        ),\n        dependencies: dependencies.map((dep) => normalizeSuiObjectId(dep)),\n        package: packageId,\n        ticket: parse(Argument, ticket)\n      }\n    };\n  },\n  MakeMoveVec({\n    type,\n    elements\n  }) {\n    return {\n      $kind: \"MakeMoveVec\",\n      MakeMoveVec: {\n        type: type ?? null,\n        elements: elements.map((o) => parse(Argument, o))\n      }\n    };\n  },\n  Intent({\n    name,\n    inputs = {},\n    data = {}\n  }) {\n    return {\n      $kind: \"$Intent\",\n      $Intent: {\n        name,\n        inputs: Object.fromEntries(\n          Object.entries(inputs).map(([key, value]) => [\n            key,\n            Array.isArray(value) ? value.map((o) => parse(Argument, o)) : parse(Argument, value)\n          ])\n        ),\n        data\n      }\n    };\n  }\n};\nexport {\n  Commands,\n  UpgradePolicy\n};\n//# sourceMappingURL=Commands.js.map\n","import { fromBase64, toBase64 } from \"@mysten/bcs\";\nimport {\n  array,\n  bigint,\n  boolean,\n  check,\n  integer,\n  is,\n  lazy,\n  literal,\n  nullable,\n  nullish,\n  number,\n  object,\n  optional,\n  parse,\n  pipe,\n  string,\n  union,\n  unknown\n} from \"valibot\";\nimport { TypeTagSerializer } from \"../../bcs/index.js\";\nimport { JsonU64, ObjectID, safeEnum, TransactionData } from \"./internal.js\";\nconst ObjectRef = object({\n  digest: string(),\n  objectId: string(),\n  version: union([pipe(number(), integer()), string(), bigint()])\n});\nconst ObjectArg = safeEnum({\n  ImmOrOwned: ObjectRef,\n  Shared: object({\n    objectId: ObjectID,\n    initialSharedVersion: JsonU64,\n    mutable: boolean()\n  }),\n  Receiving: ObjectRef\n});\nconst NormalizedCallArg = safeEnum({\n  Object: ObjectArg,\n  Pure: array(pipe(number(), integer()))\n});\nconst TransactionInput = union([\n  object({\n    kind: literal(\"Input\"),\n    index: pipe(number(), integer()),\n    value: unknown(),\n    type: optional(literal(\"object\"))\n  }),\n  object({\n    kind: literal(\"Input\"),\n    index: pipe(number(), integer()),\n    value: unknown(),\n    type: literal(\"pure\")\n  })\n]);\nconst TransactionExpiration = union([\n  object({ Epoch: pipe(number(), integer()) }),\n  object({ None: nullable(literal(true)) })\n]);\nconst StringEncodedBigint = pipe(\n  union([number(), string(), bigint()]),\n  check((val) => {\n    if (![\"string\", \"number\", \"bigint\"].includes(typeof val)) return false;\n    try {\n      BigInt(val);\n      return true;\n    } catch {\n      return false;\n    }\n  })\n);\nconst TypeTag = union([\n  object({ bool: nullable(literal(true)) }),\n  object({ u8: nullable(literal(true)) }),\n  object({ u64: nullable(literal(true)) }),\n  object({ u128: nullable(literal(true)) }),\n  object({ address: nullable(literal(true)) }),\n  object({ signer: nullable(literal(true)) }),\n  object({ vector: lazy(() => TypeTag) }),\n  object({ struct: lazy(() => StructTag) }),\n  object({ u16: nullable(literal(true)) }),\n  object({ u32: nullable(literal(true)) }),\n  object({ u256: nullable(literal(true)) })\n]);\nconst StructTag = object({\n  address: string(),\n  module: string(),\n  name: string(),\n  typeParams: array(TypeTag)\n});\nconst GasConfig = object({\n  budget: optional(StringEncodedBigint),\n  price: optional(StringEncodedBigint),\n  payment: optional(array(ObjectRef)),\n  owner: optional(string())\n});\nconst TransactionArgumentTypes = [\n  TransactionInput,\n  object({ kind: literal(\"GasCoin\") }),\n  object({ kind: literal(\"Result\"), index: pipe(number(), integer()) }),\n  object({\n    kind: literal(\"NestedResult\"),\n    index: pipe(number(), integer()),\n    resultIndex: pipe(number(), integer())\n  })\n];\nconst TransactionArgument = union([...TransactionArgumentTypes]);\nconst MoveCallTransaction = object({\n  kind: literal(\"MoveCall\"),\n  target: pipe(\n    string(),\n    check((target) => target.split(\"::\").length === 3)\n  ),\n  typeArguments: array(string()),\n  arguments: array(TransactionArgument)\n});\nconst TransferObjectsTransaction = object({\n  kind: literal(\"TransferObjects\"),\n  objects: array(TransactionArgument),\n  address: TransactionArgument\n});\nconst SplitCoinsTransaction = object({\n  kind: literal(\"SplitCoins\"),\n  coin: TransactionArgument,\n  amounts: array(TransactionArgument)\n});\nconst MergeCoinsTransaction = object({\n  kind: literal(\"MergeCoins\"),\n  destination: TransactionArgument,\n  sources: array(TransactionArgument)\n});\nconst MakeMoveVecTransaction = object({\n  kind: literal(\"MakeMoveVec\"),\n  type: union([object({ Some: TypeTag }), object({ None: nullable(literal(true)) })]),\n  objects: array(TransactionArgument)\n});\nconst PublishTransaction = object({\n  kind: literal(\"Publish\"),\n  modules: array(array(pipe(number(), integer()))),\n  dependencies: array(string())\n});\nconst UpgradeTransaction = object({\n  kind: literal(\"Upgrade\"),\n  modules: array(array(pipe(number(), integer()))),\n  dependencies: array(string()),\n  packageId: string(),\n  ticket: TransactionArgument\n});\nconst TransactionTypes = [\n  MoveCallTransaction,\n  TransferObjectsTransaction,\n  SplitCoinsTransaction,\n  MergeCoinsTransaction,\n  PublishTransaction,\n  UpgradeTransaction,\n  MakeMoveVecTransaction\n];\nconst TransactionType = union([...TransactionTypes]);\nconst SerializedTransactionDataV1 = object({\n  version: literal(1),\n  sender: optional(string()),\n  expiration: nullish(TransactionExpiration),\n  gasConfig: GasConfig,\n  inputs: array(TransactionInput),\n  transactions: array(TransactionType)\n});\nfunction serializeV1TransactionData(transactionData) {\n  const inputs = transactionData.inputs.map(\n    (input, index) => {\n      if (input.Object) {\n        return {\n          kind: \"Input\",\n          index,\n          value: {\n            Object: input.Object.ImmOrOwnedObject ? {\n              ImmOrOwned: input.Object.ImmOrOwnedObject\n            } : input.Object.Receiving ? {\n              Receiving: {\n                digest: input.Object.Receiving.digest,\n                version: input.Object.Receiving.version,\n                objectId: input.Object.Receiving.objectId\n              }\n            } : {\n              Shared: {\n                mutable: input.Object.SharedObject.mutable,\n                initialSharedVersion: input.Object.SharedObject.initialSharedVersion,\n                objectId: input.Object.SharedObject.objectId\n              }\n            }\n          },\n          type: \"object\"\n        };\n      }\n      if (input.Pure) {\n        return {\n          kind: \"Input\",\n          index,\n          value: {\n            Pure: Array.from(fromBase64(input.Pure.bytes))\n          },\n          type: \"pure\"\n        };\n      }\n      if (input.UnresolvedPure) {\n        return {\n          kind: \"Input\",\n          type: \"pure\",\n          index,\n          value: input.UnresolvedPure.value\n        };\n      }\n      if (input.UnresolvedObject) {\n        return {\n          kind: \"Input\",\n          type: \"object\",\n          index,\n          value: input.UnresolvedObject.objectId\n        };\n      }\n      throw new Error(\"Invalid input\");\n    }\n  );\n  return {\n    version: 1,\n    sender: transactionData.sender ?? void 0,\n    expiration: transactionData.expiration?.$kind === \"Epoch\" ? { Epoch: Number(transactionData.expiration.Epoch) } : transactionData.expiration ? { None: true } : null,\n    gasConfig: {\n      owner: transactionData.gasData.owner ?? void 0,\n      budget: transactionData.gasData.budget ?? void 0,\n      price: transactionData.gasData.price ?? void 0,\n      payment: transactionData.gasData.payment ?? void 0\n    },\n    inputs,\n    transactions: transactionData.commands.map((command) => {\n      if (command.MakeMoveVec) {\n        return {\n          kind: \"MakeMoveVec\",\n          type: command.MakeMoveVec.type === null ? { None: true } : { Some: TypeTagSerializer.parseFromStr(command.MakeMoveVec.type) },\n          objects: command.MakeMoveVec.elements.map(\n            (arg) => convertTransactionArgument(arg, inputs)\n          )\n        };\n      }\n      if (command.MergeCoins) {\n        return {\n          kind: \"MergeCoins\",\n          destination: convertTransactionArgument(command.MergeCoins.destination, inputs),\n          sources: command.MergeCoins.sources.map((arg) => convertTransactionArgument(arg, inputs))\n        };\n      }\n      if (command.MoveCall) {\n        return {\n          kind: \"MoveCall\",\n          target: `${command.MoveCall.package}::${command.MoveCall.module}::${command.MoveCall.function}`,\n          typeArguments: command.MoveCall.typeArguments,\n          arguments: command.MoveCall.arguments.map(\n            (arg) => convertTransactionArgument(arg, inputs)\n          )\n        };\n      }\n      if (command.Publish) {\n        return {\n          kind: \"Publish\",\n          modules: command.Publish.modules.map((mod) => Array.from(fromBase64(mod))),\n          dependencies: command.Publish.dependencies\n        };\n      }\n      if (command.SplitCoins) {\n        return {\n          kind: \"SplitCoins\",\n          coin: convertTransactionArgument(command.SplitCoins.coin, inputs),\n          amounts: command.SplitCoins.amounts.map((arg) => convertTransactionArgument(arg, inputs))\n        };\n      }\n      if (command.TransferObjects) {\n        return {\n          kind: \"TransferObjects\",\n          objects: command.TransferObjects.objects.map(\n            (arg) => convertTransactionArgument(arg, inputs)\n          ),\n          address: convertTransactionArgument(command.TransferObjects.address, inputs)\n        };\n      }\n      if (command.Upgrade) {\n        return {\n          kind: \"Upgrade\",\n          modules: command.Upgrade.modules.map((mod) => Array.from(fromBase64(mod))),\n          dependencies: command.Upgrade.dependencies,\n          packageId: command.Upgrade.package,\n          ticket: convertTransactionArgument(command.Upgrade.ticket, inputs)\n        };\n      }\n      throw new Error(`Unknown transaction ${Object.keys(command)}`);\n    })\n  };\n}\nfunction convertTransactionArgument(arg, inputs) {\n  if (arg.$kind === \"GasCoin\") {\n    return { kind: \"GasCoin\" };\n  }\n  if (arg.$kind === \"Result\") {\n    return { kind: \"Result\", index: arg.Result };\n  }\n  if (arg.$kind === \"NestedResult\") {\n    return { kind: \"NestedResult\", index: arg.NestedResult[0], resultIndex: arg.NestedResult[1] };\n  }\n  if (arg.$kind === \"Input\") {\n    return inputs[arg.Input];\n  }\n  throw new Error(`Invalid argument ${Object.keys(arg)}`);\n}\nfunction transactionDataFromV1(data) {\n  return parse(TransactionData, {\n    version: 2,\n    sender: data.sender ?? null,\n    expiration: data.expiration ? \"Epoch\" in data.expiration ? { Epoch: data.expiration.Epoch } : { None: true } : null,\n    gasData: {\n      owner: data.gasConfig.owner ?? null,\n      budget: data.gasConfig.budget?.toString() ?? null,\n      price: data.gasConfig.price?.toString() ?? null,\n      payment: data.gasConfig.payment?.map((ref) => ({\n        digest: ref.digest,\n        objectId: ref.objectId,\n        version: ref.version.toString()\n      })) ?? null\n    },\n    inputs: data.inputs.map((input) => {\n      if (input.kind === \"Input\") {\n        if (is(NormalizedCallArg, input.value)) {\n          const value = parse(NormalizedCallArg, input.value);\n          if (value.Object) {\n            if (value.Object.ImmOrOwned) {\n              return {\n                Object: {\n                  ImmOrOwnedObject: {\n                    objectId: value.Object.ImmOrOwned.objectId,\n                    version: String(value.Object.ImmOrOwned.version),\n                    digest: value.Object.ImmOrOwned.digest\n                  }\n                }\n              };\n            }\n            if (value.Object.Shared) {\n              return {\n                Object: {\n                  SharedObject: {\n                    mutable: value.Object.Shared.mutable ?? null,\n                    initialSharedVersion: value.Object.Shared.initialSharedVersion,\n                    objectId: value.Object.Shared.objectId\n                  }\n                }\n              };\n            }\n            if (value.Object.Receiving) {\n              return {\n                Object: {\n                  Receiving: {\n                    digest: value.Object.Receiving.digest,\n                    version: String(value.Object.Receiving.version),\n                    objectId: value.Object.Receiving.objectId\n                  }\n                }\n              };\n            }\n            throw new Error(\"Invalid object input\");\n          }\n          return {\n            Pure: {\n              bytes: toBase64(new Uint8Array(value.Pure))\n            }\n          };\n        }\n        if (input.type === \"object\") {\n          return {\n            UnresolvedObject: {\n              objectId: input.value\n            }\n          };\n        }\n        return {\n          UnresolvedPure: {\n            value: input.value\n          }\n        };\n      }\n      throw new Error(\"Invalid input\");\n    }),\n    commands: data.transactions.map((transaction) => {\n      switch (transaction.kind) {\n        case \"MakeMoveVec\":\n          return {\n            MakeMoveVec: {\n              type: \"Some\" in transaction.type ? TypeTagSerializer.tagToString(transaction.type.Some) : null,\n              elements: transaction.objects.map((arg) => parseV1TransactionArgument(arg))\n            }\n          };\n        case \"MergeCoins\": {\n          return {\n            MergeCoins: {\n              destination: parseV1TransactionArgument(transaction.destination),\n              sources: transaction.sources.map((arg) => parseV1TransactionArgument(arg))\n            }\n          };\n        }\n        case \"MoveCall\": {\n          const [pkg, mod, fn] = transaction.target.split(\"::\");\n          return {\n            MoveCall: {\n              package: pkg,\n              module: mod,\n              function: fn,\n              typeArguments: transaction.typeArguments,\n              arguments: transaction.arguments.map((arg) => parseV1TransactionArgument(arg))\n            }\n          };\n        }\n        case \"Publish\": {\n          return {\n            Publish: {\n              modules: transaction.modules.map((mod) => toBase64(Uint8Array.from(mod))),\n              dependencies: transaction.dependencies\n            }\n          };\n        }\n        case \"SplitCoins\": {\n          return {\n            SplitCoins: {\n              coin: parseV1TransactionArgument(transaction.coin),\n              amounts: transaction.amounts.map((arg) => parseV1TransactionArgument(arg))\n            }\n          };\n        }\n        case \"TransferObjects\": {\n          return {\n            TransferObjects: {\n              objects: transaction.objects.map((arg) => parseV1TransactionArgument(arg)),\n              address: parseV1TransactionArgument(transaction.address)\n            }\n          };\n        }\n        case \"Upgrade\": {\n          return {\n            Upgrade: {\n              modules: transaction.modules.map((mod) => toBase64(Uint8Array.from(mod))),\n              dependencies: transaction.dependencies,\n              package: transaction.packageId,\n              ticket: parseV1TransactionArgument(transaction.ticket)\n            }\n          };\n        }\n      }\n      throw new Error(`Unknown transaction ${Object.keys(transaction)}`);\n    })\n  });\n}\nfunction parseV1TransactionArgument(arg) {\n  switch (arg.kind) {\n    case \"GasCoin\": {\n      return { GasCoin: true };\n    }\n    case \"Result\":\n      return { Result: arg.index };\n    case \"NestedResult\": {\n      return { NestedResult: [arg.index, arg.resultIndex] };\n    }\n    case \"Input\": {\n      return { Input: arg.index };\n    }\n  }\n}\nexport {\n  NormalizedCallArg,\n  ObjectRef,\n  SerializedTransactionDataV1,\n  StructTag,\n  TransactionArgument,\n  TypeTag,\n  serializeV1TransactionData,\n  transactionDataFromV1\n};\n//# sourceMappingURL=v1.js.map\n","import {\n  array,\n  boolean,\n  integer,\n  literal,\n  nullable,\n  nullish,\n  number,\n  object,\n  optional,\n  pipe,\n  record,\n  string,\n  tuple,\n  union,\n  unknown\n} from \"valibot\";\nimport { BCSBytes, JsonU64, ObjectID, ObjectRef, SuiAddress } from \"./internal.js\";\nfunction enumUnion(options) {\n  return union(\n    Object.entries(options).map(([key, value]) => object({ [key]: value }))\n  );\n}\nconst Argument = enumUnion({\n  GasCoin: literal(true),\n  Input: pipe(number(), integer()),\n  Result: pipe(number(), integer()),\n  NestedResult: tuple([pipe(number(), integer()), pipe(number(), integer())])\n});\nconst GasData = object({\n  budget: nullable(JsonU64),\n  price: nullable(JsonU64),\n  owner: nullable(SuiAddress),\n  payment: nullable(array(ObjectRef))\n});\nconst ProgrammableMoveCall = object({\n  package: ObjectID,\n  module: string(),\n  function: string(),\n  // snake case in rust\n  typeArguments: array(string()),\n  arguments: array(Argument)\n});\nconst $Intent = object({\n  name: string(),\n  inputs: record(string(), union([Argument, array(Argument)])),\n  data: record(string(), unknown())\n});\nconst Command = enumUnion({\n  MoveCall: ProgrammableMoveCall,\n  TransferObjects: object({\n    objects: array(Argument),\n    address: Argument\n  }),\n  SplitCoins: object({\n    coin: Argument,\n    amounts: array(Argument)\n  }),\n  MergeCoins: object({\n    destination: Argument,\n    sources: array(Argument)\n  }),\n  Publish: object({\n    modules: array(BCSBytes),\n    dependencies: array(ObjectID)\n  }),\n  MakeMoveVec: object({\n    type: nullable(string()),\n    elements: array(Argument)\n  }),\n  Upgrade: object({\n    modules: array(BCSBytes),\n    dependencies: array(ObjectID),\n    package: ObjectID,\n    ticket: Argument\n  }),\n  $Intent\n});\nconst ObjectArg = enumUnion({\n  ImmOrOwnedObject: ObjectRef,\n  SharedObject: object({\n    objectId: ObjectID,\n    // snake case in rust\n    initialSharedVersion: JsonU64,\n    mutable: boolean()\n  }),\n  Receiving: ObjectRef\n});\nconst CallArg = enumUnion({\n  Object: ObjectArg,\n  Pure: object({\n    bytes: BCSBytes\n  }),\n  UnresolvedPure: object({\n    value: unknown()\n  }),\n  UnresolvedObject: object({\n    objectId: ObjectID,\n    version: optional(nullable(JsonU64)),\n    digest: optional(nullable(string())),\n    initialSharedVersion: optional(nullable(JsonU64))\n  })\n});\nconst TransactionExpiration = enumUnion({\n  None: literal(true),\n  Epoch: JsonU64\n});\nconst SerializedTransactionDataV2 = object({\n  version: literal(2),\n  sender: nullish(SuiAddress),\n  expiration: nullish(TransactionExpiration),\n  gasData: GasData,\n  inputs: array(CallArg),\n  commands: array(Command)\n});\nexport {\n  SerializedTransactionDataV2\n};\n//# sourceMappingURL=v2.js.map\n","import { toBase64 } from \"@mysten/bcs\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nfunction Pure(data) {\n  return {\n    $kind: \"Pure\",\n    Pure: {\n      bytes: data instanceof Uint8Array ? toBase64(data) : data.toBase64()\n    }\n  };\n}\nconst Inputs = {\n  Pure,\n  ObjectRef({ objectId, digest, version }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"ImmOrOwnedObject\",\n        ImmOrOwnedObject: {\n          digest,\n          version,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  },\n  SharedObjectRef({\n    objectId,\n    mutable,\n    initialSharedVersion\n  }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"SharedObject\",\n        SharedObject: {\n          mutable,\n          initialSharedVersion,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  },\n  ReceivingRef({ objectId, digest, version }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"Receiving\",\n        Receiving: {\n          digest,\n          version,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  }\n};\nexport {\n  Inputs\n};\n//# sourceMappingURL=Inputs.js.map\n","import { Inputs } from \"./Inputs.js\";\nimport { bcs } from \"../bcs/index.js\";\nfunction needsTransactionResolution(data, options) {\n  if (data.inputs.some((input) => {\n    return input.UnresolvedObject || input.UnresolvedPure;\n  })) {\n    return true;\n  }\n  if (!options.onlyTransactionKind) {\n    if (!data.gasConfig.price || !data.gasConfig.budget || !data.gasConfig.payment) {\n      return true;\n    }\n  }\n  return false;\n}\nasync function resolveTransactionPlugin(transactionData, options, next) {\n  normalizeRawArguments(transactionData);\n  if (!needsTransactionResolution(transactionData, options)) {\n    await validate(transactionData);\n    return next();\n  }\n  const client = getClient(options);\n  const plugin = client.core.resolveTransactionPlugin();\n  return plugin(transactionData, options, async () => {\n    await validate(transactionData);\n    await next();\n  });\n}\nfunction validate(transactionData) {\n  transactionData.inputs.forEach((input, index) => {\n    if (input.$kind !== \"Object\" && input.$kind !== \"Pure\") {\n      throw new Error(\n        `Input at index ${index} has not been resolved.  Expected a Pure or Object input, but found ${JSON.stringify(\n          input\n        )}`\n      );\n    }\n  });\n}\nfunction getClient(options) {\n  if (!options.client) {\n    throw new Error(\n      `No sui client passed to Transaction#build, but transaction data was not sufficient to build offline.`\n    );\n  }\n  return options.client;\n}\nfunction normalizeRawArguments(transactionData) {\n  for (const command of transactionData.commands) {\n    switch (command.$kind) {\n      case \"SplitCoins\":\n        command.SplitCoins.amounts.forEach((amount) => {\n          normalizeRawArgument(amount, bcs.U64, transactionData);\n        });\n        break;\n      case \"TransferObjects\":\n        normalizeRawArgument(command.TransferObjects.address, bcs.Address, transactionData);\n        break;\n    }\n  }\n}\nfunction normalizeRawArgument(arg, schema, transactionData) {\n  if (arg.$kind !== \"Input\") {\n    return;\n  }\n  const input = transactionData.inputs[arg.Input];\n  if (input.$kind !== \"UnresolvedPure\") {\n    return;\n  }\n  transactionData.inputs[arg.Input] = Inputs.Pure(schema.serialize(input.UnresolvedPure.value));\n}\nexport {\n  getClient,\n  needsTransactionResolution,\n  resolveTransactionPlugin\n};\n//# sourceMappingURL=resolve.js.map\n","import { isSerializedBcs } from \"@mysten/bcs\";\nimport { bcs } from \"../bcs/index.js\";\nimport { pureBcsSchemaFromTypeName } from \"../bcs/pure.js\";\nfunction createPure(makePure) {\n  function pure(typeOrSerializedValue, value) {\n    if (typeof typeOrSerializedValue === \"string\") {\n      return makePure(pureBcsSchemaFromTypeName(typeOrSerializedValue).serialize(value));\n    }\n    if (typeOrSerializedValue instanceof Uint8Array || isSerializedBcs(typeOrSerializedValue)) {\n      return makePure(typeOrSerializedValue);\n    }\n    throw new Error(\"tx.pure must be called either a bcs type name, or a serialized bcs value\");\n  }\n  pure.u8 = (value) => makePure(bcs.U8.serialize(value));\n  pure.u16 = (value) => makePure(bcs.U16.serialize(value));\n  pure.u32 = (value) => makePure(bcs.U32.serialize(value));\n  pure.u64 = (value) => makePure(bcs.U64.serialize(value));\n  pure.u128 = (value) => makePure(bcs.U128.serialize(value));\n  pure.u256 = (value) => makePure(bcs.U256.serialize(value));\n  pure.bool = (value) => makePure(bcs.Bool.serialize(value));\n  pure.string = (value) => makePure(bcs.String.serialize(value));\n  pure.address = (value) => makePure(bcs.Address.serialize(value));\n  pure.id = pure.address;\n  pure.vector = (type, value) => {\n    return makePure(\n      bcs.vector(pureBcsSchemaFromTypeName(type)).serialize(value)\n    );\n  };\n  pure.option = (type, value) => {\n    return makePure(bcs.option(pureBcsSchemaFromTypeName(type)).serialize(value));\n  };\n  return pure;\n}\nexport {\n  createPure\n};\n//# sourceMappingURL=pure.js.map\n","import { toBase58 } from \"@mysten/bcs\";\nimport { parse } from \"valibot\";\nimport { bcs } from \"../bcs/index.js\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nimport { TransactionData } from \"./data/internal.js\";\nimport { transactionDataFromV1 } from \"./data/v1.js\";\nimport { hashTypedData } from \"./hash.js\";\nfunction prepareSuiAddress(address) {\n  return normalizeSuiAddress(address).replace(\"0x\", \"\");\n}\nclass TransactionDataBuilder {\n  constructor(clone) {\n    this.version = 2;\n    this.sender = clone?.sender ?? null;\n    this.expiration = clone?.expiration ?? null;\n    this.inputs = clone?.inputs ?? [];\n    this.commands = clone?.commands ?? [];\n    this.gasData = clone?.gasData ?? {\n      budget: null,\n      price: null,\n      owner: null,\n      payment: null\n    };\n  }\n  static fromKindBytes(bytes) {\n    const kind = bcs.TransactionKind.parse(bytes);\n    const programmableTx = kind.ProgrammableTransaction;\n    if (!programmableTx) {\n      throw new Error(\"Unable to deserialize from bytes.\");\n    }\n    return TransactionDataBuilder.restore({\n      version: 2,\n      sender: null,\n      expiration: null,\n      gasData: {\n        budget: null,\n        owner: null,\n        payment: null,\n        price: null\n      },\n      inputs: programmableTx.inputs,\n      commands: programmableTx.commands\n    });\n  }\n  static fromBytes(bytes) {\n    const rawData = bcs.TransactionData.parse(bytes);\n    const data = rawData?.V1;\n    const programmableTx = data.kind.ProgrammableTransaction;\n    if (!data || !programmableTx) {\n      throw new Error(\"Unable to deserialize from bytes.\");\n    }\n    return TransactionDataBuilder.restore({\n      version: 2,\n      sender: data.sender,\n      expiration: data.expiration,\n      gasData: data.gasData,\n      inputs: programmableTx.inputs,\n      commands: programmableTx.commands\n    });\n  }\n  static restore(data) {\n    if (data.version === 2) {\n      return new TransactionDataBuilder(parse(TransactionData, data));\n    } else {\n      return new TransactionDataBuilder(parse(TransactionData, transactionDataFromV1(data)));\n    }\n  }\n  /**\n   * Generate transaction digest.\n   *\n   * @param bytes BCS serialized transaction data\n   * @returns transaction digest.\n   */\n  static getDigestFromBytes(bytes) {\n    const hash = hashTypedData(\"TransactionData\", bytes);\n    return toBase58(hash);\n  }\n  // @deprecated use gasData instead\n  get gasConfig() {\n    return this.gasData;\n  }\n  // @deprecated use gasData instead\n  set gasConfig(value) {\n    this.gasData = value;\n  }\n  build({\n    maxSizeBytes = Infinity,\n    overrides,\n    onlyTransactionKind\n  } = {}) {\n    const inputs = this.inputs;\n    const commands = this.commands;\n    const kind = {\n      ProgrammableTransaction: {\n        inputs,\n        commands\n      }\n    };\n    if (onlyTransactionKind) {\n      return bcs.TransactionKind.serialize(kind, { maxSize: maxSizeBytes }).toBytes();\n    }\n    const expiration = overrides?.expiration ?? this.expiration;\n    const sender = overrides?.sender ?? this.sender;\n    const gasData = { ...this.gasData, ...overrides?.gasConfig, ...overrides?.gasData };\n    if (!sender) {\n      throw new Error(\"Missing transaction sender\");\n    }\n    if (!gasData.budget) {\n      throw new Error(\"Missing gas budget\");\n    }\n    if (!gasData.payment) {\n      throw new Error(\"Missing gas payment\");\n    }\n    if (!gasData.price) {\n      throw new Error(\"Missing gas price\");\n    }\n    const transactionData = {\n      sender: prepareSuiAddress(sender),\n      expiration: expiration ? expiration : { None: true },\n      gasData: {\n        payment: gasData.payment,\n        owner: prepareSuiAddress(this.gasData.owner ?? sender),\n        price: BigInt(gasData.price),\n        budget: BigInt(gasData.budget)\n      },\n      kind: {\n        ProgrammableTransaction: {\n          inputs,\n          commands\n        }\n      }\n    };\n    return bcs.TransactionData.serialize(\n      { V1: transactionData },\n      { maxSize: maxSizeBytes }\n    ).toBytes();\n  }\n  addInput(type, arg) {\n    const index = this.inputs.length;\n    this.inputs.push(arg);\n    return { Input: index, type, $kind: \"Input\" };\n  }\n  getInputUses(index, fn) {\n    this.mapArguments((arg, command) => {\n      if (arg.$kind === \"Input\" && arg.Input === index) {\n        fn(arg, command);\n      }\n      return arg;\n    });\n  }\n  mapCommandArguments(index, fn) {\n    const command = this.commands[index];\n    switch (command.$kind) {\n      case \"MoveCall\":\n        command.MoveCall.arguments = command.MoveCall.arguments.map(\n          (arg) => fn(arg, command, index)\n        );\n        break;\n      case \"TransferObjects\":\n        command.TransferObjects.objects = command.TransferObjects.objects.map(\n          (arg) => fn(arg, command, index)\n        );\n        command.TransferObjects.address = fn(command.TransferObjects.address, command, index);\n        break;\n      case \"SplitCoins\":\n        command.SplitCoins.coin = fn(command.SplitCoins.coin, command, index);\n        command.SplitCoins.amounts = command.SplitCoins.amounts.map(\n          (arg) => fn(arg, command, index)\n        );\n        break;\n      case \"MergeCoins\":\n        command.MergeCoins.destination = fn(command.MergeCoins.destination, command, index);\n        command.MergeCoins.sources = command.MergeCoins.sources.map(\n          (arg) => fn(arg, command, index)\n        );\n        break;\n      case \"MakeMoveVec\":\n        command.MakeMoveVec.elements = command.MakeMoveVec.elements.map(\n          (arg) => fn(arg, command, index)\n        );\n        break;\n      case \"Upgrade\":\n        command.Upgrade.ticket = fn(command.Upgrade.ticket, command, index);\n        break;\n      case \"$Intent\":\n        const inputs = command.$Intent.inputs;\n        command.$Intent.inputs = {};\n        for (const [key, value] of Object.entries(inputs)) {\n          command.$Intent.inputs[key] = Array.isArray(value) ? value.map((arg) => fn(arg, command, index)) : fn(value, command, index);\n        }\n        break;\n      case \"Publish\":\n        break;\n      default:\n        throw new Error(`Unexpected transaction kind: ${command.$kind}`);\n    }\n  }\n  mapArguments(fn) {\n    for (const commandIndex of this.commands.keys()) {\n      this.mapCommandArguments(commandIndex, fn);\n    }\n  }\n  replaceCommand(index, replacement, resultIndex = index) {\n    if (!Array.isArray(replacement)) {\n      this.commands[index] = replacement;\n      return;\n    }\n    const sizeDiff = replacement.length - 1;\n    this.commands.splice(index, 1, ...replacement);\n    if (sizeDiff !== 0) {\n      this.mapArguments((arg, _command, commandIndex) => {\n        if (commandIndex < index + replacement.length) {\n          return arg;\n        }\n        switch (arg.$kind) {\n          case \"Result\":\n            if (arg.Result === index) {\n              arg.Result = resultIndex;\n            }\n            if (arg.Result > index) {\n              arg.Result += sizeDiff;\n            }\n            break;\n          case \"NestedResult\":\n            if (arg.NestedResult[0] === index) {\n              arg.NestedResult[0] = resultIndex;\n            }\n            if (arg.NestedResult[0] > index) {\n              arg.NestedResult[0] += sizeDiff;\n            }\n            break;\n        }\n        return arg;\n      });\n    }\n  }\n  getDigest() {\n    const bytes = this.build({ onlyTransactionKind: false });\n    return TransactionDataBuilder.getDigestFromBytes(bytes);\n  }\n  snapshot() {\n    return parse(TransactionData, this);\n  }\n  shallowClone() {\n    return new TransactionDataBuilder({\n      version: this.version,\n      sender: this.sender,\n      expiration: this.expiration,\n      gasData: {\n        ...this.gasData\n      },\n      inputs: [...this.inputs],\n      commands: [...this.commands]\n    });\n  }\n}\nexport {\n  TransactionDataBuilder\n};\n//# sourceMappingURL=TransactionData.js.map\n","import { blake2b } from \"@noble/hashes/blake2b\";\nfunction hashTypedData(typeTag, data) {\n  const typeTagBytes = Array.from(`${typeTag}::`).map((e) => e.charCodeAt(0));\n  const dataWithTag = new Uint8Array(typeTagBytes.length + data.length);\n  dataWithTag.set(typeTagBytes);\n  dataWithTag.set(data, typeTagBytes.length);\n  return blake2b(dataWithTag, { dkLen: 32 });\n}\nexport {\n  hashTypedData\n};\n//# sourceMappingURL=hash.js.map\n","import { is } from \"valibot\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nimport { Argument } from \"./data/internal.js\";\nfunction extractMutableReference(normalizedType) {\n  return typeof normalizedType === \"object\" && \"MutableReference\" in normalizedType ? normalizedType.MutableReference : void 0;\n}\nfunction extractReference(normalizedType) {\n  return typeof normalizedType === \"object\" && \"Reference\" in normalizedType ? normalizedType.Reference : void 0;\n}\nfunction extractStructTag(normalizedType) {\n  if (typeof normalizedType === \"object\" && \"Struct\" in normalizedType) {\n    return normalizedType;\n  }\n  const ref = extractReference(normalizedType);\n  const mutRef = extractMutableReference(normalizedType);\n  if (typeof ref === \"object\" && \"Struct\" in ref) {\n    return ref;\n  }\n  if (typeof mutRef === \"object\" && \"Struct\" in mutRef) {\n    return mutRef;\n  }\n  return void 0;\n}\nfunction getIdFromCallArg(arg) {\n  if (typeof arg === \"string\") {\n    return normalizeSuiAddress(arg);\n  }\n  if (arg.Object) {\n    if (arg.Object.ImmOrOwnedObject) {\n      return normalizeSuiAddress(arg.Object.ImmOrOwnedObject.objectId);\n    }\n    if (arg.Object.Receiving) {\n      return normalizeSuiAddress(arg.Object.Receiving.objectId);\n    }\n    return normalizeSuiAddress(arg.Object.SharedObject.objectId);\n  }\n  if (arg.UnresolvedObject) {\n    return normalizeSuiAddress(arg.UnresolvedObject.objectId);\n  }\n  return void 0;\n}\nfunction isArgument(value) {\n  return is(Argument, value);\n}\nexport {\n  extractMutableReference,\n  extractReference,\n  extractStructTag,\n  getIdFromCallArg,\n  isArgument\n};\n//# sourceMappingURL=utils.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\nvar _serializationPlugins, _buildPlugins, _intentResolvers, _inputSection, _commandSection, _availableResults, _pendingPromises, _added, _data, _Transaction_instances, fork_fn, addCommand_fn, addInput_fn, normalizeTransactionArgument_fn, resolveArgument_fn, prepareBuild_fn, runPlugins_fn, waitForPendingTasks_fn, sortCommandsAndInputs_fn;\nimport { fromBase64, isSerializedBcs } from \"@mysten/bcs\";\nimport { is, parse } from \"valibot\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nimport { Commands } from \"./Commands.js\";\nimport { Argument, NormalizedCallArg, ObjectRef, TransactionExpiration } from \"./data/internal.js\";\nimport { serializeV1TransactionData } from \"./data/v1.js\";\nimport { SerializedTransactionDataV2 } from \"./data/v2.js\";\nimport { Inputs } from \"./Inputs.js\";\nimport { resolveTransactionPlugin } from \"./resolve.js\";\nimport { createObjectMethods } from \"./object.js\";\nimport { createPure } from \"./pure.js\";\nimport { TransactionDataBuilder } from \"./TransactionData.js\";\nimport { getIdFromCallArg } from \"./utils.js\";\nfunction createTransactionResult(index, length = Infinity) {\n  const baseResult = { $kind: \"Result\", Result: index };\n  const nestedResults = [];\n  const nestedResultFor = (resultIndex) => nestedResults[resultIndex] ?? (nestedResults[resultIndex] = {\n    $kind: \"NestedResult\",\n    NestedResult: [index, resultIndex]\n  });\n  return new Proxy(baseResult, {\n    set() {\n      throw new Error(\n        \"The transaction result is a proxy, and does not support setting properties directly\"\n      );\n    },\n    // TODO: Instead of making this return a concrete argument, we should ideally\n    // make it reference-based (so that this gets resolved at build-time), which\n    // allows re-ordering transactions.\n    get(target, property) {\n      if (property in target) {\n        return Reflect.get(target, property);\n      }\n      if (property === Symbol.iterator) {\n        return function* () {\n          let i = 0;\n          while (i < length) {\n            yield nestedResultFor(i);\n            i++;\n          }\n        };\n      }\n      if (typeof property === \"symbol\") return;\n      const resultIndex = parseInt(property, 10);\n      if (Number.isNaN(resultIndex) || resultIndex < 0) return;\n      return nestedResultFor(resultIndex);\n    }\n  });\n}\nconst TRANSACTION_BRAND = Symbol.for(\"@mysten/transaction\");\nfunction isTransaction(obj) {\n  return !!obj && typeof obj === \"object\" && obj[TRANSACTION_BRAND] === true;\n}\nconst modulePluginRegistry = {\n  buildPlugins: /* @__PURE__ */ new Map(),\n  serializationPlugins: /* @__PURE__ */ new Map()\n};\nconst TRANSACTION_REGISTRY_KEY = Symbol.for(\"@mysten/transaction/registry\");\nfunction getGlobalPluginRegistry() {\n  try {\n    const target = globalThis;\n    if (!target[TRANSACTION_REGISTRY_KEY]) {\n      target[TRANSACTION_REGISTRY_KEY] = modulePluginRegistry;\n    }\n    return target[TRANSACTION_REGISTRY_KEY];\n  } catch (e) {\n    return modulePluginRegistry;\n  }\n}\nconst _Transaction = class _Transaction {\n  constructor() {\n    __privateAdd(this, _Transaction_instances);\n    __privateAdd(this, _serializationPlugins);\n    __privateAdd(this, _buildPlugins);\n    __privateAdd(this, _intentResolvers, /* @__PURE__ */ new Map());\n    __privateAdd(this, _inputSection, []);\n    __privateAdd(this, _commandSection, []);\n    __privateAdd(this, _availableResults, /* @__PURE__ */ new Set());\n    __privateAdd(this, _pendingPromises, /* @__PURE__ */ new Set());\n    __privateAdd(this, _added, /* @__PURE__ */ new Map());\n    __privateAdd(this, _data);\n    /**\n     * Add a new object input to the transaction.\n     */\n    this.object = createObjectMethods(\n      (value) => {\n        if (typeof value === \"function\") {\n          return this.object(this.add(value));\n        }\n        if (typeof value === \"object\" && is(Argument, value)) {\n          return value;\n        }\n        const id = getIdFromCallArg(value);\n        const inserted = __privateGet(this, _data).inputs.find((i) => id === getIdFromCallArg(i));\n        if (inserted?.Object?.SharedObject && typeof value === \"object\" && value.Object?.SharedObject) {\n          inserted.Object.SharedObject.mutable = inserted.Object.SharedObject.mutable || value.Object.SharedObject.mutable;\n        }\n        return inserted ? { $kind: \"Input\", Input: __privateGet(this, _data).inputs.indexOf(inserted), type: \"object\" } : __privateMethod(this, _Transaction_instances, addInput_fn).call(this, \"object\", typeof value === \"string\" ? {\n          $kind: \"UnresolvedObject\",\n          UnresolvedObject: { objectId: normalizeSuiAddress(value) }\n        } : value);\n      }\n    );\n    const globalPlugins = getGlobalPluginRegistry();\n    __privateSet(this, _data, new TransactionDataBuilder());\n    __privateSet(this, _buildPlugins, [...globalPlugins.buildPlugins.values()]);\n    __privateSet(this, _serializationPlugins, [...globalPlugins.serializationPlugins.values()]);\n  }\n  /**\n   * Converts from a serialize transaction kind (built with `build({ onlyTransactionKind: true })`) to a `Transaction` class.\n   * Supports either a byte array, or base64-encoded bytes.\n   */\n  static fromKind(serialized) {\n    const tx = new _Transaction();\n    __privateSet(tx, _data, TransactionDataBuilder.fromKindBytes(\n      typeof serialized === \"string\" ? fromBase64(serialized) : serialized\n    ));\n    __privateSet(tx, _inputSection, __privateGet(tx, _data).inputs.slice());\n    __privateSet(tx, _commandSection, __privateGet(tx, _data).commands.slice());\n    return tx;\n  }\n  /**\n   * Converts from a serialized transaction format to a `Transaction` class.\n   * There are two supported serialized formats:\n   * - A string returned from `Transaction#serialize`. The serialized format must be compatible, or it will throw an error.\n   * - A byte array (or base64-encoded bytes) containing BCS transaction data.\n   */\n  static from(transaction) {\n    const newTransaction = new _Transaction();\n    if (isTransaction(transaction)) {\n      __privateSet(newTransaction, _data, new TransactionDataBuilder(transaction.getData()));\n    } else if (typeof transaction !== \"string\" || !transaction.startsWith(\"{\")) {\n      __privateSet(newTransaction, _data, TransactionDataBuilder.fromBytes(\n        typeof transaction === \"string\" ? fromBase64(transaction) : transaction\n      ));\n    } else {\n      __privateSet(newTransaction, _data, TransactionDataBuilder.restore(JSON.parse(transaction)));\n    }\n    __privateSet(newTransaction, _inputSection, __privateGet(newTransaction, _data).inputs.slice());\n    __privateSet(newTransaction, _commandSection, __privateGet(newTransaction, _data).commands.slice());\n    return newTransaction;\n  }\n  static registerGlobalSerializationPlugin(stepOrStep, step) {\n    getGlobalPluginRegistry().serializationPlugins.set(\n      stepOrStep,\n      step ?? stepOrStep\n    );\n  }\n  static unregisterGlobalSerializationPlugin(name) {\n    getGlobalPluginRegistry().serializationPlugins.delete(name);\n  }\n  static registerGlobalBuildPlugin(stepOrStep, step) {\n    getGlobalPluginRegistry().buildPlugins.set(\n      stepOrStep,\n      step ?? stepOrStep\n    );\n  }\n  static unregisterGlobalBuildPlugin(name) {\n    getGlobalPluginRegistry().buildPlugins.delete(name);\n  }\n  addSerializationPlugin(step) {\n    __privateGet(this, _serializationPlugins).push(step);\n  }\n  addBuildPlugin(step) {\n    __privateGet(this, _buildPlugins).push(step);\n  }\n  addIntentResolver(intent, resolver) {\n    if (__privateGet(this, _intentResolvers).has(intent) && __privateGet(this, _intentResolvers).get(intent) !== resolver) {\n      throw new Error(`Intent resolver for ${intent} already exists`);\n    }\n    __privateGet(this, _intentResolvers).set(intent, resolver);\n  }\n  setSender(sender) {\n    __privateGet(this, _data).sender = sender;\n  }\n  /**\n   * Sets the sender only if it has not already been set.\n   * This is useful for sponsored transaction flows where the sender may not be the same as the signer address.\n   */\n  setSenderIfNotSet(sender) {\n    if (!__privateGet(this, _data).sender) {\n      __privateGet(this, _data).sender = sender;\n    }\n  }\n  setExpiration(expiration) {\n    __privateGet(this, _data).expiration = expiration ? parse(TransactionExpiration, expiration) : null;\n  }\n  setGasPrice(price) {\n    __privateGet(this, _data).gasConfig.price = String(price);\n  }\n  setGasBudget(budget) {\n    __privateGet(this, _data).gasConfig.budget = String(budget);\n  }\n  setGasBudgetIfNotSet(budget) {\n    if (__privateGet(this, _data).gasData.budget == null) {\n      __privateGet(this, _data).gasConfig.budget = String(budget);\n    }\n  }\n  setGasOwner(owner) {\n    __privateGet(this, _data).gasConfig.owner = owner;\n  }\n  setGasPayment(payments) {\n    __privateGet(this, _data).gasConfig.payment = payments.map((payment) => parse(ObjectRef, payment));\n  }\n  /** @deprecated Use `getData()` instead. */\n  get blockData() {\n    return serializeV1TransactionData(__privateGet(this, _data).snapshot());\n  }\n  /** Get a snapshot of the transaction data, in JSON form: */\n  getData() {\n    return __privateGet(this, _data).snapshot();\n  }\n  // Used to brand transaction classes so that they can be identified, even between multiple copies\n  // of the builder.\n  get [TRANSACTION_BRAND]() {\n    return true;\n  }\n  // Temporary workaround for the wallet interface accidentally serializing transactions via postMessage\n  get pure() {\n    Object.defineProperty(this, \"pure\", {\n      enumerable: false,\n      value: createPure((value) => {\n        if (isSerializedBcs(value)) {\n          return __privateMethod(this, _Transaction_instances, addInput_fn).call(this, \"pure\", {\n            $kind: \"Pure\",\n            Pure: {\n              bytes: value.toBase64()\n            }\n          });\n        }\n        return __privateMethod(this, _Transaction_instances, addInput_fn).call(this, \"pure\", is(NormalizedCallArg, value) ? parse(NormalizedCallArg, value) : value instanceof Uint8Array ? Inputs.Pure(value) : { $kind: \"UnresolvedPure\", UnresolvedPure: { value } });\n      })\n    });\n    return this.pure;\n  }\n  /** Returns an argument for the gas coin, to be used in a transaction. */\n  get gas() {\n    return { $kind: \"GasCoin\", GasCoin: true };\n  }\n  /**\n   * Add a new object input to the transaction using the fully-resolved object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  objectRef(...args) {\n    return this.object(Inputs.ObjectRef(...args));\n  }\n  /**\n   * Add a new receiving input to the transaction using the fully-resolved object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  receivingRef(...args) {\n    return this.object(Inputs.ReceivingRef(...args));\n  }\n  /**\n   * Add a new shared object input to the transaction using the fully-resolved shared object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  sharedObjectRef(...args) {\n    return this.object(Inputs.SharedObjectRef(...args));\n  }\n  add(command) {\n    if (typeof command === \"function\") {\n      if (__privateGet(this, _added).has(command)) {\n        return __privateGet(this, _added).get(command);\n      }\n      const fork = __privateMethod(this, _Transaction_instances, fork_fn).call(this);\n      const result = command(fork);\n      if (!(result && typeof result === \"object\" && \"then\" in result)) {\n        __privateSet(this, _availableResults, __privateGet(fork, _availableResults));\n        __privateGet(this, _added).set(command, result);\n        return result;\n      }\n      const placeholder = __privateMethod(this, _Transaction_instances, addCommand_fn).call(this, {\n        $kind: \"$Intent\",\n        $Intent: {\n          name: \"AsyncTransactionThunk\",\n          inputs: {},\n          data: {\n            result: null\n          }\n        }\n      });\n      __privateGet(this, _pendingPromises).add(\n        Promise.resolve(result).then((result2) => {\n          placeholder.$Intent.data.result = result2;\n        })\n      );\n      const txResult = createTransactionResult(__privateGet(this, _data).commands.length - 1);\n      __privateGet(this, _added).set(command, txResult);\n      return txResult;\n    } else {\n      __privateMethod(this, _Transaction_instances, addCommand_fn).call(this, command);\n    }\n    return createTransactionResult(__privateGet(this, _data).commands.length - 1);\n  }\n  // Method shorthands:\n  splitCoins(coin, amounts) {\n    const command = Commands.SplitCoins(\n      typeof coin === \"string\" ? this.object(coin) : __privateMethod(this, _Transaction_instances, resolveArgument_fn).call(this, coin),\n      amounts.map(\n        (amount) => typeof amount === \"number\" || typeof amount === \"bigint\" || typeof amount === \"string\" ? this.pure.u64(amount) : __privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, amount)\n      )\n    );\n    __privateMethod(this, _Transaction_instances, addCommand_fn).call(this, command);\n    return createTransactionResult(__privateGet(this, _data).commands.length - 1, amounts.length);\n  }\n  mergeCoins(destination, sources) {\n    return this.add(\n      Commands.MergeCoins(\n        this.object(destination),\n        sources.map((src) => this.object(src))\n      )\n    );\n  }\n  publish({ modules, dependencies }) {\n    return this.add(\n      Commands.Publish({\n        modules,\n        dependencies\n      })\n    );\n  }\n  upgrade({\n    modules,\n    dependencies,\n    package: packageId,\n    ticket\n  }) {\n    return this.add(\n      Commands.Upgrade({\n        modules,\n        dependencies,\n        package: packageId,\n        ticket: this.object(ticket)\n      })\n    );\n  }\n  moveCall({\n    arguments: args,\n    ...input\n  }) {\n    return this.add(\n      Commands.MoveCall({\n        ...input,\n        arguments: args?.map((arg) => __privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, arg))\n      })\n    );\n  }\n  transferObjects(objects, address) {\n    return this.add(\n      Commands.TransferObjects(\n        objects.map((obj) => this.object(obj)),\n        typeof address === \"string\" ? this.pure.address(address) : __privateMethod(this, _Transaction_instances, normalizeTransactionArgument_fn).call(this, address)\n      )\n    );\n  }\n  makeMoveVec({\n    type,\n    elements\n  }) {\n    return this.add(\n      Commands.MakeMoveVec({\n        type,\n        elements: elements.map((obj) => this.object(obj))\n      })\n    );\n  }\n  /**\n   * @deprecated Use toJSON instead.\n   * For synchronous serialization, you can use `getData()`\n   * */\n  serialize() {\n    return JSON.stringify(serializeV1TransactionData(__privateGet(this, _data).snapshot()));\n  }\n  async toJSON(options = {}) {\n    await this.prepareForSerialization(options);\n    return JSON.stringify(\n      parse(SerializedTransactionDataV2, __privateGet(this, _data).snapshot()),\n      (_key, value) => typeof value === \"bigint\" ? value.toString() : value,\n      2\n    );\n  }\n  /** Build the transaction to BCS bytes, and sign it with the provided keypair. */\n  async sign(options) {\n    const { signer, ...buildOptions } = options;\n    const bytes = await this.build(buildOptions);\n    return signer.signTransaction(bytes);\n  }\n  /** Build the transaction to BCS bytes. */\n  async build(options = {}) {\n    await this.prepareForSerialization(options);\n    await __privateMethod(this, _Transaction_instances, prepareBuild_fn).call(this, options);\n    return __privateGet(this, _data).build({\n      onlyTransactionKind: options.onlyTransactionKind\n    });\n  }\n  /** Derive transaction digest */\n  async getDigest(options = {}) {\n    await __privateMethod(this, _Transaction_instances, prepareBuild_fn).call(this, options);\n    return __privateGet(this, _data).getDigest();\n  }\n  async prepareForSerialization(options) {\n    await __privateMethod(this, _Transaction_instances, waitForPendingTasks_fn).call(this);\n    __privateMethod(this, _Transaction_instances, sortCommandsAndInputs_fn).call(this);\n    const intents = /* @__PURE__ */ new Set();\n    for (const command of __privateGet(this, _data).commands) {\n      if (command.$Intent) {\n        intents.add(command.$Intent.name);\n      }\n    }\n    const steps = [...__privateGet(this, _serializationPlugins)];\n    for (const intent of intents) {\n      if (options.supportedIntents?.includes(intent)) {\n        continue;\n      }\n      if (!__privateGet(this, _intentResolvers).has(intent)) {\n        throw new Error(`Missing intent resolver for ${intent}`);\n      }\n      steps.push(__privateGet(this, _intentResolvers).get(intent));\n    }\n    await __privateMethod(this, _Transaction_instances, runPlugins_fn).call(this, steps, options);\n  }\n};\n_serializationPlugins = new WeakMap();\n_buildPlugins = new WeakMap();\n_intentResolvers = new WeakMap();\n_inputSection = new WeakMap();\n_commandSection = new WeakMap();\n_availableResults = new WeakMap();\n_pendingPromises = new WeakMap();\n_added = new WeakMap();\n_data = new WeakMap();\n_Transaction_instances = new WeakSet();\nfork_fn = function() {\n  const fork = new _Transaction();\n  __privateSet(fork, _data, __privateGet(this, _data));\n  __privateSet(fork, _serializationPlugins, __privateGet(this, _serializationPlugins));\n  __privateSet(fork, _buildPlugins, __privateGet(this, _buildPlugins));\n  __privateSet(fork, _intentResolvers, __privateGet(this, _intentResolvers));\n  __privateSet(fork, _pendingPromises, __privateGet(this, _pendingPromises));\n  __privateSet(fork, _availableResults, new Set(__privateGet(this, _availableResults)));\n  __privateSet(fork, _added, __privateGet(this, _added));\n  __privateGet(this, _inputSection).push(__privateGet(fork, _inputSection));\n  __privateGet(this, _commandSection).push(__privateGet(fork, _commandSection));\n  return fork;\n};\naddCommand_fn = function(command) {\n  const resultIndex = __privateGet(this, _data).commands.length;\n  __privateGet(this, _commandSection).push(command);\n  __privateGet(this, _availableResults).add(resultIndex);\n  __privateGet(this, _data).commands.push(command);\n  __privateGet(this, _data).mapCommandArguments(resultIndex, (arg) => {\n    if (arg.$kind === \"Result\" && !__privateGet(this, _availableResults).has(arg.Result)) {\n      throw new Error(\n        `Result { Result: ${arg.Result} } is not available to use the current transaction`\n      );\n    }\n    if (arg.$kind === \"NestedResult\" && !__privateGet(this, _availableResults).has(arg.NestedResult[0])) {\n      throw new Error(\n        `Result { NestedResult: [${arg.NestedResult[0]}, ${arg.NestedResult[1]}] } is not available to use the current transaction`\n      );\n    }\n    if (arg.$kind === \"Input\" && arg.Input >= __privateGet(this, _data).inputs.length) {\n      throw new Error(\n        `Input { Input: ${arg.Input} } references an input that does not exist in the current transaction`\n      );\n    }\n    return arg;\n  });\n  return command;\n};\naddInput_fn = function(type, input) {\n  __privateGet(this, _inputSection).push(input);\n  return __privateGet(this, _data).addInput(type, input);\n};\nnormalizeTransactionArgument_fn = function(arg) {\n  if (isSerializedBcs(arg)) {\n    return this.pure(arg);\n  }\n  return __privateMethod(this, _Transaction_instances, resolveArgument_fn).call(this, arg);\n};\nresolveArgument_fn = function(arg) {\n  if (typeof arg === \"function\") {\n    const resolved = this.add(arg);\n    if (typeof resolved === \"function\") {\n      return __privateMethod(this, _Transaction_instances, resolveArgument_fn).call(this, resolved);\n    }\n    return parse(Argument, resolved);\n  }\n  return parse(Argument, arg);\n};\nprepareBuild_fn = async function(options) {\n  if (!options.onlyTransactionKind && !__privateGet(this, _data).sender) {\n    throw new Error(\"Missing transaction sender\");\n  }\n  await __privateMethod(this, _Transaction_instances, runPlugins_fn).call(this, [...__privateGet(this, _buildPlugins), resolveTransactionPlugin], options);\n};\nrunPlugins_fn = async function(plugins, options) {\n  const createNext = (i) => {\n    if (i >= plugins.length) {\n      return () => {\n      };\n    }\n    const plugin = plugins[i];\n    return async () => {\n      const next = createNext(i + 1);\n      let calledNext = false;\n      let nextResolved = false;\n      await plugin(__privateGet(this, _data), options, async () => {\n        if (calledNext) {\n          throw new Error(`next() was call multiple times in TransactionPlugin ${i}`);\n        }\n        calledNext = true;\n        await next();\n        nextResolved = true;\n      });\n      if (!calledNext) {\n        throw new Error(`next() was not called in TransactionPlugin ${i}`);\n      }\n      if (!nextResolved) {\n        throw new Error(`next() was not awaited in TransactionPlugin ${i}`);\n      }\n    };\n  };\n  await createNext(0)();\n  __privateSet(this, _inputSection, __privateGet(this, _data).inputs.slice());\n  __privateSet(this, _commandSection, __privateGet(this, _data).commands.slice());\n};\nwaitForPendingTasks_fn = async function() {\n  while (__privateGet(this, _pendingPromises).size > 0) {\n    const newPromise = Promise.all(__privateGet(this, _pendingPromises));\n    __privateGet(this, _pendingPromises).clear();\n    __privateGet(this, _pendingPromises).add(newPromise);\n    await newPromise;\n    __privateGet(this, _pendingPromises).delete(newPromise);\n  }\n};\nsortCommandsAndInputs_fn = function() {\n  const unorderedCommands = __privateGet(this, _data).commands;\n  const unorderedInputs = __privateGet(this, _data).inputs;\n  const orderedCommands = __privateGet(this, _commandSection).flat(Infinity);\n  const orderedInputs = __privateGet(this, _inputSection).flat(Infinity);\n  if (orderedCommands.length !== unorderedCommands.length) {\n    throw new Error(\"Unexpected number of commands found in transaction data\");\n  }\n  if (orderedInputs.length !== unorderedInputs.length) {\n    throw new Error(\"Unexpected number of inputs found in transaction data\");\n  }\n  const filteredCommands = orderedCommands.filter(\n    (cmd) => cmd.$Intent?.name !== \"AsyncTransactionThunk\"\n  );\n  __privateGet(this, _data).commands = filteredCommands;\n  __privateGet(this, _data).inputs = orderedInputs;\n  __privateSet(this, _commandSection, filteredCommands);\n  __privateSet(this, _inputSection, orderedInputs);\n  function getOriginalIndex(index) {\n    const command = unorderedCommands[index];\n    if (command.$Intent?.name === \"AsyncTransactionThunk\") {\n      const result = command.$Intent.data.result;\n      if (result == null) {\n        throw new Error(\"AsyncTransactionThunk has not been resolved\");\n      }\n      return getOriginalIndex(result.Result);\n    }\n    const updated = filteredCommands.indexOf(command);\n    if (updated === -1) {\n      throw new Error(\"Unable to find original index for command\");\n    }\n    return updated;\n  }\n  __privateGet(this, _data).mapArguments((arg) => {\n    if (arg.$kind === \"Input\") {\n      const updated = orderedInputs.indexOf(unorderedInputs[arg.Input]);\n      if (updated === -1) {\n        throw new Error(\"Input has not been resolved\");\n      }\n      return { ...arg, Input: updated };\n    } else if (arg.$kind === \"Result\") {\n      const updated = getOriginalIndex(arg.Result);\n      return { ...arg, Result: updated };\n    } else if (arg.$kind === \"NestedResult\") {\n      const updated = getOriginalIndex(arg.NestedResult[0]);\n      return { ...arg, NestedResult: [updated, arg.NestedResult[1]] };\n    }\n    return arg;\n  });\n};\nlet Transaction = _Transaction;\nexport {\n  Transaction,\n  isTransaction\n};\n//# sourceMappingURL=Transaction.js.map\n","function createObjectMethods(makeObject) {\n  function object(value) {\n    return makeObject(value);\n  }\n  object.system = () => object(\"0x5\");\n  object.clock = () => object(\"0x6\");\n  object.random = () => object(\"0x8\");\n  object.denyList = () => object(\"0x403\");\n  object.option = ({ type, value }) => (tx) => tx.moveCall({\n    typeArguments: [type],\n    target: `0x1::option::${value === null ? \"none\" : \"some\"}`,\n    arguments: value === null ? [] : [tx.object(value)]\n  });\n  return object;\n}\nexport {\n  createObjectMethods\n};\n//# sourceMappingURL=object.js.map\n","import { TypeTagSerializer } from \"../bcs/type-tag-serializer.js\";\nimport { deriveDynamicFieldID } from \"../utils/dynamic-fields.js\";\nimport { normalizeStructTag, parseStructTag, SUI_ADDRESS_LENGTH } from \"../utils/sui-types.js\";\nimport { Experimental_BaseClient } from \"./client.js\";\nclass Experimental_CoreClient extends Experimental_BaseClient {\n  constructor() {\n    super(...arguments);\n    this.core = this;\n  }\n  async getObject(options) {\n    const { objectId } = options;\n    const {\n      objects: [result]\n    } = await this.getObjects({ objectIds: [objectId], signal: options.signal });\n    if (result instanceof Error) {\n      throw result;\n    }\n    return { object: result };\n  }\n  async getDynamicField(options) {\n    const fieldId = deriveDynamicFieldID(\n      options.parentId,\n      TypeTagSerializer.parseFromStr(options.name.type),\n      options.name.bcs\n    );\n    const {\n      objects: [fieldObject]\n    } = await this.getObjects({\n      objectIds: [fieldId],\n      signal: options.signal\n    });\n    if (fieldObject instanceof Error) {\n      throw fieldObject;\n    }\n    const fieldType = parseStructTag(fieldObject.type);\n    return {\n      dynamicField: {\n        id: fieldObject.id,\n        digest: fieldObject.digest,\n        version: fieldObject.version,\n        type: fieldObject.type,\n        name: {\n          type: typeof fieldType.typeParams[0] === \"string\" ? fieldType.typeParams[0] : normalizeStructTag(fieldType.typeParams[0]),\n          bcs: options.name.bcs\n        },\n        value: {\n          type: typeof fieldType.typeParams[1] === \"string\" ? fieldType.typeParams[1] : normalizeStructTag(fieldType.typeParams[1]),\n          bcs: fieldObject.content.slice(SUI_ADDRESS_LENGTH + options.name.bcs.length)\n        }\n      }\n    };\n  }\n  async waitForTransaction({\n    signal,\n    timeout = 60 * 1e3,\n    ...input\n  }) {\n    const abortSignal = signal ? AbortSignal.any([AbortSignal.timeout(timeout), signal]) : AbortSignal.timeout(timeout);\n    const abortPromise = new Promise((_, reject) => {\n      abortSignal.addEventListener(\"abort\", () => reject(abortSignal.reason));\n    });\n    abortPromise.catch(() => {\n    });\n    while (true) {\n      abortSignal.throwIfAborted();\n      try {\n        return await this.getTransaction({\n          ...input,\n          signal: abortSignal\n        });\n      } catch (e) {\n        await Promise.race([new Promise((resolve) => setTimeout(resolve, 2e3)), abortPromise]);\n      }\n    }\n  }\n}\nexport {\n  Experimental_CoreClient\n};\n//# sourceMappingURL=core.js.map\n","import { toHex } from \"@mysten/bcs\";\nimport { blake2b } from \"@noble/hashes/blake2b\";\nimport { bcs } from \"../bcs/index.js\";\nfunction deriveDynamicFieldID(parentId, typeTag, key) {\n  const address = bcs.Address.serialize(parentId).toBytes();\n  const tag = bcs.TypeTag.serialize(typeTag).toBytes();\n  const keyLength = bcs.u64().serialize(key.length).toBytes();\n  const hash = blake2b.create({\n    dkLen: 32\n  });\n  hash.update(new Uint8Array([240]));\n  hash.update(address);\n  hash.update(keyLength);\n  hash.update(key);\n  hash.update(tag);\n  return `0x${toHex(hash.digest().slice(0, 32))}`;\n}\nexport {\n  deriveDynamicFieldID\n};\n//# sourceMappingURL=dynamic-fields.js.map\n","class SuiClientError extends Error {\n}\nclass ObjectError extends SuiClientError {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n  static fromResponse(response, objectId) {\n    switch (response.code) {\n      case \"notExists\":\n        return new ObjectError(response.code, `Object ${response.object_id} does not exist`);\n      case \"dynamicFieldNotFound\":\n        return new ObjectError(\n          response.code,\n          `Dynamic field not found for object ${response.parent_object_id}`\n        );\n      case \"deleted\":\n        return new ObjectError(response.code, `Object ${response.object_id} has been deleted`);\n      case \"displayError\":\n        return new ObjectError(response.code, `Display error: ${response.error}`);\n      case \"unknown\":\n      default:\n        return new ObjectError(\n          response.code,\n          `Unknown error while loading object${objectId ? ` ${objectId}` : \"\"}`\n        );\n    }\n  }\n}\nexport {\n  ObjectError,\n  SuiClientError\n};\n//# sourceMappingURL=errors.js.map\n","import { bcs } from \"../bcs/index.js\";\nimport { MOVE_STDLIB_ADDRESS, SUI_FRAMEWORK_ADDRESS } from \"../utils/index.js\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nconst OBJECT_MODULE_NAME = \"object\";\nconst ID_STRUCT_NAME = \"ID\";\nconst STD_ASCII_MODULE_NAME = \"ascii\";\nconst STD_ASCII_STRUCT_NAME = \"String\";\nconst STD_UTF8_MODULE_NAME = \"string\";\nconst STD_UTF8_STRUCT_NAME = \"String\";\nconst STD_OPTION_MODULE_NAME = \"option\";\nconst STD_OPTION_STRUCT_NAME = \"Option\";\nfunction isTxContext(param) {\n  const struct = typeof param.body === \"object\" && \"datatype\" in param.body ? param.body.datatype : null;\n  return !!struct && normalizeSuiAddress(struct.package) === normalizeSuiAddress(\"0x2\") && struct.module === \"tx_context\" && struct.type === \"TxContext\";\n}\nfunction getPureBcsSchema(typeSignature) {\n  if (typeof typeSignature === \"string\") {\n    switch (typeSignature) {\n      case \"address\":\n        return bcs.Address;\n      case \"bool\":\n        return bcs.Bool;\n      case \"u8\":\n        return bcs.U8;\n      case \"u16\":\n        return bcs.U16;\n      case \"u32\":\n        return bcs.U32;\n      case \"u64\":\n        return bcs.U64;\n      case \"u128\":\n        return bcs.U128;\n      case \"u256\":\n        return bcs.U256;\n      default:\n        throw new Error(`Unknown type signature ${typeSignature}`);\n    }\n  }\n  if (\"vector\" in typeSignature) {\n    if (typeSignature.vector === \"u8\") {\n      return bcs.vector(bcs.U8).transform({\n        input: (val) => typeof val === \"string\" ? new TextEncoder().encode(val) : val,\n        output: (val) => val\n      });\n    }\n    const type = getPureBcsSchema(typeSignature.vector);\n    return type ? bcs.vector(type) : null;\n  }\n  if (\"datatype\" in typeSignature) {\n    const pkg = normalizeSuiAddress(typeSignature.datatype.package);\n    if (pkg === normalizeSuiAddress(MOVE_STDLIB_ADDRESS)) {\n      if (typeSignature.datatype.module === STD_ASCII_MODULE_NAME && typeSignature.datatype.type === STD_ASCII_STRUCT_NAME) {\n        return bcs.String;\n      }\n      if (typeSignature.datatype.module === STD_UTF8_MODULE_NAME && typeSignature.datatype.type === STD_UTF8_STRUCT_NAME) {\n        return bcs.String;\n      }\n      if (typeSignature.datatype.module === STD_OPTION_MODULE_NAME && typeSignature.datatype.type === STD_OPTION_STRUCT_NAME) {\n        const type = getPureBcsSchema(typeSignature.datatype.typeParameters[0]);\n        return type ? bcs.vector(type) : null;\n      }\n    }\n    if (pkg === normalizeSuiAddress(SUI_FRAMEWORK_ADDRESS) && typeSignature.datatype.module === OBJECT_MODULE_NAME && typeSignature.datatype.type === ID_STRUCT_NAME) {\n      return bcs.Address;\n    }\n  }\n  return null;\n}\nfunction normalizedTypeToMoveTypeSignature(type) {\n  if (typeof type === \"object\" && \"Reference\" in type) {\n    return {\n      ref: \"&\",\n      body: normalizedTypeToMoveTypeSignatureBody(type.Reference)\n    };\n  }\n  if (typeof type === \"object\" && \"MutableReference\" in type) {\n    return {\n      ref: \"&mut\",\n      body: normalizedTypeToMoveTypeSignatureBody(type.MutableReference)\n    };\n  }\n  return {\n    ref: null,\n    body: normalizedTypeToMoveTypeSignatureBody(type)\n  };\n}\nfunction normalizedTypeToMoveTypeSignatureBody(type) {\n  if (typeof type === \"string\") {\n    switch (type) {\n      case \"Address\":\n        return \"address\";\n      case \"Bool\":\n        return \"bool\";\n      case \"U8\":\n        return \"u8\";\n      case \"U16\":\n        return \"u16\";\n      case \"U32\":\n        return \"u32\";\n      case \"U64\":\n        return \"u64\";\n      case \"U128\":\n        return \"u128\";\n      case \"U256\":\n        return \"u256\";\n      default:\n        throw new Error(`Unexpected type ${type}`);\n    }\n  }\n  if (\"Vector\" in type) {\n    return { vector: normalizedTypeToMoveTypeSignatureBody(type.Vector) };\n  }\n  if (\"Struct\" in type) {\n    return {\n      datatype: {\n        package: type.Struct.address,\n        module: type.Struct.module,\n        type: type.Struct.name,\n        typeParameters: type.Struct.typeArguments.map(normalizedTypeToMoveTypeSignatureBody)\n      }\n    };\n  }\n  if (\"TypeParameter\" in type) {\n    return { typeParameter: type.TypeParameter };\n  }\n  throw new Error(`Unexpected type ${JSON.stringify(type)}`);\n}\nfunction pureBcsSchemaFromOpenMoveTypeSignatureBody(typeSignature) {\n  if (typeof typeSignature === \"string\") {\n    switch (typeSignature) {\n      case \"address\":\n        return bcs.Address;\n      case \"bool\":\n        return bcs.Bool;\n      case \"u8\":\n        return bcs.U8;\n      case \"u16\":\n        return bcs.U16;\n      case \"u32\":\n        return bcs.U32;\n      case \"u64\":\n        return bcs.U64;\n      case \"u128\":\n        return bcs.U128;\n      case \"u256\":\n        return bcs.U256;\n      default:\n        throw new Error(`Unknown type signature ${typeSignature}`);\n    }\n  }\n  if (\"vector\" in typeSignature) {\n    return bcs.vector(pureBcsSchemaFromOpenMoveTypeSignatureBody(typeSignature.vector));\n  }\n  throw new Error(`Expected pure typeSignature, but got ${JSON.stringify(typeSignature)}`);\n}\nexport {\n  getPureBcsSchema,\n  isTxContext,\n  normalizedTypeToMoveTypeSignature,\n  pureBcsSchemaFromOpenMoveTypeSignatureBody\n};\n//# sourceMappingURL=serializer.js.map\n","import { bcs } from \"../../bcs/index.js\";\nimport { TransactionDataBuilder } from \"../../transactions/index.js\";\nfunction parseTransactionBcs(bytes) {\n  return {\n    ...TransactionDataBuilder.fromBytes(bytes).snapshot(),\n    bcs: bytes\n  };\n}\nfunction parseTransactionEffectsBcs(effects) {\n  const parsed = bcs.TransactionEffects.parse(effects);\n  switch (parsed.$kind) {\n    case \"V1\":\n      return parseTransactionEffectsV1({ bytes: effects, effects: parsed.V1 });\n    case \"V2\":\n      return parseTransactionEffectsV2({ bytes: effects, effects: parsed.V2 });\n    default:\n      throw new Error(\n        `Unknown transaction effects version: ${parsed.$kind}`\n      );\n  }\n}\nfunction parseTransactionEffectsV1(_) {\n  throw new Error(\"V1 effects are not supported yet\");\n}\nfunction parseTransactionEffectsV2({\n  bytes,\n  effects\n}) {\n  const changedObjects = effects.changedObjects.map(\n    ([id, change]) => {\n      return {\n        id,\n        inputState: change.inputState.$kind === \"Exist\" ? \"Exists\" : \"DoesNotExist\",\n        inputVersion: change.inputState.Exist?.[0][0] ?? null,\n        inputDigest: change.inputState.Exist?.[0][1] ?? null,\n        inputOwner: change.inputState.Exist?.[1] ?? null,\n        outputState: change.outputState.$kind === \"NotExist\" ? \"DoesNotExist\" : change.outputState.$kind,\n        outputVersion: change.outputState.$kind === \"PackageWrite\" ? change.outputState.PackageWrite?.[0] : change.outputState.ObjectWrite ? effects.lamportVersion : null,\n        outputDigest: change.outputState.$kind === \"PackageWrite\" ? change.outputState.PackageWrite?.[1] : change.outputState.ObjectWrite?.[0] ?? null,\n        outputOwner: change.outputState.ObjectWrite ? change.outputState.ObjectWrite[1] : null,\n        idOperation: change.idOperation.$kind\n      };\n    }\n  );\n  return {\n    bcs: bytes,\n    digest: effects.transactionDigest,\n    version: 2,\n    status: effects.status.$kind === \"Success\" ? {\n      success: true,\n      error: null\n    } : {\n      success: false,\n      // TODO: add command\n      error: effects.status.Failed.error.$kind\n    },\n    gasUsed: effects.gasUsed,\n    transactionDigest: effects.transactionDigest,\n    gasObject: effects.gasObjectIndex === null ? null : changedObjects[effects.gasObjectIndex] ?? null,\n    eventsDigest: effects.eventsDigest,\n    dependencies: effects.dependencies,\n    lamportVersion: effects.lamportVersion,\n    changedObjects,\n    unchangedSharedObjects: effects.unchangedSharedObjects.map(\n      ([objectId, object]) => {\n        return {\n          kind: object.$kind,\n          objectId,\n          version: object.$kind === \"ReadOnlyRoot\" ? object.ReadOnlyRoot[0] : object[object.$kind],\n          digest: object.$kind === \"ReadOnlyRoot\" ? object.ReadOnlyRoot[1] : null\n        };\n      }\n    ),\n    auxiliaryDataDigest: effects.auxDataDigest\n  };\n}\nexport {\n  parseTransactionBcs,\n  parseTransactionEffectsBcs\n};\n//# sourceMappingURL=utils.js.map\n","import { parse } from \"valibot\";\nimport { normalizeSuiAddress, normalizeSuiObjectId, SUI_TYPE_ARG } from \"../../utils/index.js\";\nimport { ObjectRef } from \"../../transactions/data/internal.js\";\nimport { Inputs } from \"../../transactions/Inputs.js\";\nimport {\n  getPureBcsSchema,\n  isTxContext,\n  normalizedTypeToMoveTypeSignature\n} from \"../../transactions/serializer.js\";\nimport { chunk } from \"@mysten/utils\";\nconst MAX_OBJECTS_PER_FETCH = 50;\nconst GAS_SAFE_OVERHEAD = 1000n;\nconst MAX_GAS = 5e10;\nfunction resolveTransactionPlugin(client) {\n  return async function resolveTransactionData(transactionData, options, next) {\n    await normalizeInputs(transactionData, client);\n    await resolveObjectReferences(transactionData, client);\n    if (!options.onlyTransactionKind) {\n      await setGasPrice(transactionData, client);\n      await setGasBudget(transactionData, client);\n      await setGasPayment(transactionData, client);\n    }\n    return await next();\n  };\n}\nasync function setGasPrice(transactionData, client) {\n  if (!transactionData.gasConfig.price) {\n    transactionData.gasConfig.price = String(await client.getReferenceGasPrice());\n  }\n}\nasync function setGasBudget(transactionData, client) {\n  if (transactionData.gasConfig.budget) {\n    return;\n  }\n  const dryRunResult = await client.dryRunTransactionBlock({\n    transactionBlock: transactionData.build({\n      overrides: {\n        gasData: {\n          budget: String(MAX_GAS),\n          payment: []\n        }\n      }\n    })\n  });\n  if (dryRunResult.effects.status.status !== \"success\") {\n    throw new Error(\n      `Dry run failed, could not automatically determine a budget: ${dryRunResult.effects.status.error}`,\n      { cause: dryRunResult }\n    );\n  }\n  const safeOverhead = GAS_SAFE_OVERHEAD * BigInt(transactionData.gasConfig.price || 1n);\n  const baseComputationCostWithOverhead = BigInt(dryRunResult.effects.gasUsed.computationCost) + safeOverhead;\n  const gasBudget = baseComputationCostWithOverhead + BigInt(dryRunResult.effects.gasUsed.storageCost) - BigInt(dryRunResult.effects.gasUsed.storageRebate);\n  transactionData.gasConfig.budget = String(\n    gasBudget > baseComputationCostWithOverhead ? gasBudget : baseComputationCostWithOverhead\n  );\n}\nasync function setGasPayment(transactionData, client) {\n  if (!transactionData.gasConfig.payment) {\n    const coins = await client.getCoins({\n      owner: transactionData.gasConfig.owner || transactionData.sender,\n      coinType: SUI_TYPE_ARG\n    });\n    const paymentCoins = coins.data.filter((coin) => {\n      const matchingInput = transactionData.inputs.find((input) => {\n        if (input.Object?.ImmOrOwnedObject) {\n          return coin.coinObjectId === input.Object.ImmOrOwnedObject.objectId;\n        }\n        return false;\n      });\n      return !matchingInput;\n    }).map((coin) => ({\n      objectId: coin.coinObjectId,\n      digest: coin.digest,\n      version: coin.version\n    }));\n    if (!paymentCoins.length) {\n      throw new Error(\"No valid gas coins found for the transaction.\");\n    }\n    transactionData.gasConfig.payment = paymentCoins.map((payment) => parse(ObjectRef, payment));\n  }\n}\nasync function resolveObjectReferences(transactionData, client) {\n  const objectsToResolve = transactionData.inputs.filter((input) => {\n    return input.UnresolvedObject && !(input.UnresolvedObject.version || input.UnresolvedObject?.initialSharedVersion);\n  });\n  const dedupedIds = [\n    ...new Set(\n      objectsToResolve.map((input) => normalizeSuiObjectId(input.UnresolvedObject.objectId))\n    )\n  ];\n  const objectChunks = dedupedIds.length ? chunk(dedupedIds, MAX_OBJECTS_PER_FETCH) : [];\n  const resolved = (await Promise.all(\n    objectChunks.map(\n      (chunk2) => client.multiGetObjects({\n        ids: chunk2,\n        options: { showOwner: true }\n      })\n    )\n  )).flat();\n  const responsesById = new Map(\n    dedupedIds.map((id, index) => {\n      return [id, resolved[index]];\n    })\n  );\n  const invalidObjects = Array.from(responsesById).filter(([_, obj]) => obj.error).map(([_, obj]) => JSON.stringify(obj.error));\n  if (invalidObjects.length) {\n    throw new Error(`The following input objects are invalid: ${invalidObjects.join(\", \")}`);\n  }\n  const objects = resolved.map((object) => {\n    if (object.error || !object.data) {\n      throw new Error(`Failed to fetch object: ${object.error}`);\n    }\n    const owner = object.data.owner;\n    const initialSharedVersion = owner && typeof owner === \"object\" && \"Shared\" in owner ? owner.Shared.initial_shared_version : null;\n    return {\n      objectId: object.data.objectId,\n      digest: object.data.digest,\n      version: object.data.version,\n      initialSharedVersion\n    };\n  });\n  const objectsById = new Map(\n    dedupedIds.map((id, index) => {\n      return [id, objects[index]];\n    })\n  );\n  for (const [index, input] of transactionData.inputs.entries()) {\n    if (!input.UnresolvedObject) {\n      continue;\n    }\n    let updated;\n    const id = normalizeSuiAddress(input.UnresolvedObject.objectId);\n    const object = objectsById.get(id);\n    if (input.UnresolvedObject.initialSharedVersion ?? object?.initialSharedVersion) {\n      updated = Inputs.SharedObjectRef({\n        objectId: id,\n        initialSharedVersion: input.UnresolvedObject.initialSharedVersion || object?.initialSharedVersion,\n        mutable: isUsedAsMutable(transactionData, index)\n      });\n    } else if (isUsedAsReceiving(transactionData, index)) {\n      updated = Inputs.ReceivingRef(\n        {\n          objectId: id,\n          digest: input.UnresolvedObject.digest ?? object?.digest,\n          version: input.UnresolvedObject.version ?? object?.version\n        }\n      );\n    }\n    transactionData.inputs[transactionData.inputs.indexOf(input)] = updated ?? Inputs.ObjectRef({\n      objectId: id,\n      digest: input.UnresolvedObject.digest ?? object?.digest,\n      version: input.UnresolvedObject.version ?? object?.version\n    });\n  }\n}\nasync function normalizeInputs(transactionData, client) {\n  const { inputs, commands } = transactionData;\n  const moveCallsToResolve = [];\n  const moveFunctionsToResolve = /* @__PURE__ */ new Set();\n  commands.forEach((command) => {\n    if (command.MoveCall) {\n      if (command.MoveCall._argumentTypes) {\n        return;\n      }\n      const inputs2 = command.MoveCall.arguments.map((arg) => {\n        if (arg.$kind === \"Input\") {\n          return transactionData.inputs[arg.Input];\n        }\n        return null;\n      });\n      const needsResolution = inputs2.some(\n        (input) => input?.UnresolvedPure || input?.UnresolvedObject\n      );\n      if (needsResolution) {\n        const functionName = `${command.MoveCall.package}::${command.MoveCall.module}::${command.MoveCall.function}`;\n        moveFunctionsToResolve.add(functionName);\n        moveCallsToResolve.push(command.MoveCall);\n      }\n    }\n  });\n  const moveFunctionParameters = /* @__PURE__ */ new Map();\n  if (moveFunctionsToResolve.size > 0) {\n    await Promise.all(\n      [...moveFunctionsToResolve].map(async (functionName) => {\n        const [packageId, moduleId, functionId] = functionName.split(\"::\");\n        const def = await client.getNormalizedMoveFunction({\n          package: packageId,\n          module: moduleId,\n          function: functionId\n        });\n        moveFunctionParameters.set(\n          functionName,\n          def.parameters.map((param) => normalizedTypeToMoveTypeSignature(param))\n        );\n      })\n    );\n  }\n  if (moveCallsToResolve.length) {\n    await Promise.all(\n      moveCallsToResolve.map(async (moveCall) => {\n        const parameters = moveFunctionParameters.get(\n          `${moveCall.package}::${moveCall.module}::${moveCall.function}`\n        );\n        if (!parameters) {\n          return;\n        }\n        const hasTxContext = parameters.length > 0 && isTxContext(parameters.at(-1));\n        const params = hasTxContext ? parameters.slice(0, parameters.length - 1) : parameters;\n        moveCall._argumentTypes = params;\n      })\n    );\n  }\n  commands.forEach((command) => {\n    if (!command.MoveCall) {\n      return;\n    }\n    const moveCall = command.MoveCall;\n    const fnName = `${moveCall.package}::${moveCall.module}::${moveCall.function}`;\n    const params = moveCall._argumentTypes;\n    if (!params) {\n      return;\n    }\n    if (params.length !== command.MoveCall.arguments.length) {\n      throw new Error(`Incorrect number of arguments for ${fnName}`);\n    }\n    params.forEach((param, i) => {\n      const arg = moveCall.arguments[i];\n      if (arg.$kind !== \"Input\") return;\n      const input = inputs[arg.Input];\n      if (!input.UnresolvedPure && !input.UnresolvedObject) {\n        return;\n      }\n      const inputValue = input.UnresolvedPure?.value ?? input.UnresolvedObject?.objectId;\n      const schema = getPureBcsSchema(param.body);\n      if (schema) {\n        arg.type = \"pure\";\n        inputs[inputs.indexOf(input)] = Inputs.Pure(schema.serialize(inputValue));\n        return;\n      }\n      if (typeof inputValue !== \"string\") {\n        throw new Error(\n          `Expect the argument to be an object id string, got ${JSON.stringify(\n            inputValue,\n            null,\n            2\n          )}`\n        );\n      }\n      arg.type = \"object\";\n      const unresolvedObject = input.UnresolvedPure ? {\n        $kind: \"UnresolvedObject\",\n        UnresolvedObject: {\n          objectId: inputValue\n        }\n      } : input;\n      inputs[arg.Input] = unresolvedObject;\n    });\n  });\n}\nfunction isUsedAsMutable(transactionData, index) {\n  let usedAsMutable = false;\n  transactionData.getInputUses(index, (arg, tx) => {\n    if (tx.MoveCall && tx.MoveCall._argumentTypes) {\n      const argIndex = tx.MoveCall.arguments.indexOf(arg);\n      usedAsMutable = tx.MoveCall._argumentTypes[argIndex].ref !== \"&\" || usedAsMutable;\n    }\n    if (tx.$kind === \"MakeMoveVec\" || tx.$kind === \"MergeCoins\" || tx.$kind === \"SplitCoins\") {\n      usedAsMutable = true;\n    }\n  });\n  return usedAsMutable;\n}\nfunction isUsedAsReceiving(transactionData, index) {\n  let usedAsReceiving = false;\n  transactionData.getInputUses(index, (arg, tx) => {\n    if (tx.MoveCall && tx.MoveCall._argumentTypes) {\n      const argIndex = tx.MoveCall.arguments.indexOf(arg);\n      usedAsReceiving = isReceivingType(tx.MoveCall._argumentTypes[argIndex]) || usedAsReceiving;\n    }\n  });\n  return usedAsReceiving;\n}\nfunction isReceivingType(type) {\n  if (typeof type.body !== \"object\" || !(\"datatype\" in type.body)) {\n    return false;\n  }\n  return type.body.datatype.package === \"0x2\" && type.body.datatype.module === \"transfer\" && type.body.datatype.type === \"Receiving\";\n}\nexport {\n  resolveTransactionPlugin\n};\n//# sourceMappingURL=json-rpc-resolver.js.map\n","function chunk(array, size) {\n  return Array.from({ length: Math.ceil(array.length / size) }, (_, i) => {\n    return array.slice(i * size, (i + 1) * size);\n  });\n}\nexport {\n  chunk\n};\n//# sourceMappingURL=chunk.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _jsonRpcClient;\nimport { fromBase64 } from \"@mysten/bcs\";\nimport { bcs } from \"../../bcs/index.js\";\nimport { batch } from \"../../transactions/plugins/utils.js\";\nimport { Transaction } from \"../../transactions/Transaction.js\";\nimport { Experimental_CoreClient } from \"../core.js\";\nimport { ObjectError } from \"../errors.js\";\nimport { parseTransactionBcs, parseTransactionEffectsBcs } from \"./utils.js\";\nimport { resolveTransactionPlugin } from \"./json-rpc-resolver.js\";\nimport { TransactionDataBuilder } from \"../../transactions/TransactionData.js\";\nclass JSONRpcTransport extends Experimental_CoreClient {\n  constructor(jsonRpcClient) {\n    super({ network: jsonRpcClient.network });\n    __privateAdd(this, _jsonRpcClient);\n    __privateSet(this, _jsonRpcClient, jsonRpcClient);\n  }\n  async getObjects(options) {\n    const batches = batch(options.objectIds, 50);\n    const results = [];\n    for (const batch2 of batches) {\n      const objects = await __privateGet(this, _jsonRpcClient).multiGetObjects({\n        ids: batch2,\n        options: {\n          showOwner: true,\n          showType: true,\n          showBcs: true\n        },\n        signal: options.signal\n      });\n      for (const [idx, object] of objects.entries()) {\n        if (object.error) {\n          results.push(ObjectError.fromResponse(object.error, batch2[idx]));\n        } else {\n          results.push(parseObject(object.data));\n        }\n      }\n    }\n    return {\n      objects: results\n    };\n  }\n  async getOwnedObjects(options) {\n    const objects = await __privateGet(this, _jsonRpcClient).getOwnedObjects({\n      owner: options.address,\n      limit: options.limit,\n      cursor: options.cursor,\n      options: {\n        showOwner: true,\n        showType: true,\n        showBcs: true\n      },\n      signal: options.signal\n    });\n    return {\n      objects: objects.data.map((result) => {\n        if (result.error) {\n          throw ObjectError.fromResponse(result.error);\n        }\n        return parseObject(result.data);\n      }),\n      hasNextPage: objects.hasNextPage,\n      cursor: objects.nextCursor ?? null\n    };\n  }\n  async getCoins(options) {\n    const coins = await __privateGet(this, _jsonRpcClient).getCoins({\n      owner: options.address,\n      coinType: options.coinType,\n      limit: options.limit,\n      cursor: options.cursor,\n      signal: options.signal\n    });\n    return {\n      objects: coins.data.map((coin) => {\n        return {\n          id: coin.coinObjectId,\n          version: coin.version,\n          digest: coin.digest,\n          balance: coin.balance,\n          type: `0x2::coin::Coin<${coin.coinType}>`,\n          content: Coin.serialize({\n            id: coin.coinObjectId,\n            balance: {\n              value: coin.balance\n            }\n          }).toBytes(),\n          owner: {\n            $kind: \"ObjectOwner\",\n            ObjectOwner: options.address\n          }\n        };\n      }),\n      hasNextPage: coins.hasNextPage,\n      cursor: coins.nextCursor ?? null\n    };\n  }\n  async getBalance(options) {\n    const balance = await __privateGet(this, _jsonRpcClient).getBalance({\n      owner: options.address,\n      coinType: options.coinType,\n      signal: options.signal\n    });\n    return {\n      balance: {\n        coinType: balance.coinType,\n        balance: balance.totalBalance\n      }\n    };\n  }\n  async getAllBalances(options) {\n    const balances = await __privateGet(this, _jsonRpcClient).getAllBalances({\n      owner: options.address,\n      signal: options.signal\n    });\n    return {\n      balances: balances.map((balance) => ({\n        coinType: balance.coinType,\n        balance: balance.totalBalance\n      })),\n      hasNextPage: false,\n      cursor: null\n    };\n  }\n  async getTransaction(options) {\n    const transaction = await __privateGet(this, _jsonRpcClient).getTransactionBlock({\n      digest: options.digest,\n      options: {\n        showRawInput: true,\n        showObjectChanges: true,\n        showRawEffects: true,\n        showEvents: true\n      },\n      signal: options.signal\n    });\n    return {\n      transaction: parseTransaction(transaction)\n    };\n  }\n  async executeTransaction(options) {\n    const transaction = await __privateGet(this, _jsonRpcClient).executeTransactionBlock({\n      transactionBlock: options.transaction,\n      signature: options.signatures,\n      options: {\n        showRawEffects: true,\n        showEvents: true,\n        showObjectChanges: true,\n        showRawInput: true\n      },\n      signal: options.signal\n    });\n    return {\n      transaction: parseTransaction(transaction)\n    };\n  }\n  async dryRunTransaction(options) {\n    const tx = Transaction.from(options.transaction);\n    const result = await __privateGet(this, _jsonRpcClient).dryRunTransactionBlock({\n      transactionBlock: options.transaction,\n      signal: options.signal\n    });\n    const { effects, objectTypes } = parseTransactionEffectsJson({\n      effects: result.effects,\n      objectChanges: result.objectChanges\n    });\n    return {\n      transaction: {\n        digest: await tx.getDigest(),\n        epoch: null,\n        effects,\n        objectTypes: Promise.resolve(objectTypes),\n        signatures: [],\n        transaction: parseTransactionBcs(options.transaction)\n      }\n    };\n  }\n  async getReferenceGasPrice(options) {\n    const referenceGasPrice = await __privateGet(this, _jsonRpcClient).getReferenceGasPrice({\n      signal: options?.signal\n    });\n    return {\n      referenceGasPrice: String(referenceGasPrice)\n    };\n  }\n  async getDynamicFields(options) {\n    const dynamicFields = await __privateGet(this, _jsonRpcClient).getDynamicFields({\n      parentId: options.parentId,\n      limit: options.limit,\n      cursor: options.cursor\n    });\n    return {\n      dynamicFields: dynamicFields.data.map((dynamicField) => {\n        return {\n          id: dynamicField.objectId,\n          type: dynamicField.objectType,\n          name: {\n            type: dynamicField.name.type,\n            bcs: fromBase64(dynamicField.bcsName)\n          }\n        };\n      }),\n      hasNextPage: dynamicFields.hasNextPage,\n      cursor: dynamicFields.nextCursor\n    };\n  }\n  async verifyZkLoginSignature(options) {\n    const result = await __privateGet(this, _jsonRpcClient).verifyZkLoginSignature({\n      bytes: options.bytes,\n      signature: options.signature,\n      intentScope: options.intentScope,\n      author: options.author\n    });\n    return {\n      success: result.success,\n      errors: result.errors\n    };\n  }\n  resolveTransactionPlugin() {\n    return resolveTransactionPlugin(__privateGet(this, _jsonRpcClient));\n  }\n}\n_jsonRpcClient = new WeakMap();\nfunction parseObject(object) {\n  return {\n    id: object.objectId,\n    version: object.version,\n    digest: object.digest,\n    type: object.type,\n    content: object.bcs?.dataType === \"moveObject\" ? fromBase64(object.bcs.bcsBytes) : new Uint8Array(),\n    owner: parseOwner(object.owner)\n  };\n}\nfunction parseOwner(owner) {\n  if (owner === \"Immutable\") {\n    return {\n      $kind: \"Immutable\",\n      Immutable: true\n    };\n  }\n  if (\"ConsensusV2\" in owner) {\n    return {\n      $kind: \"ConsensusV2\",\n      ConsensusV2: {\n        authenticator: {\n          $kind: \"SingleOwner\",\n          SingleOwner: owner.ConsensusV2.authenticator.SingleOwner\n        },\n        startVersion: owner.ConsensusV2.start_version\n      }\n    };\n  }\n  if (\"AddressOwner\" in owner) {\n    return {\n      $kind: \"AddressOwner\",\n      AddressOwner: owner.AddressOwner\n    };\n  }\n  if (\"ObjectOwner\" in owner) {\n    return {\n      $kind: \"ObjectOwner\",\n      ObjectOwner: owner.ObjectOwner\n    };\n  }\n  if (\"Shared\" in owner) {\n    return {\n      $kind: \"Shared\",\n      Shared: {\n        initialSharedVersion: owner.Shared.initial_shared_version\n      }\n    };\n  }\n  throw new Error(`Unknown owner type: ${JSON.stringify(owner)}`);\n}\nfunction parseTransaction(transaction) {\n  const parsedTx = bcs.SenderSignedData.parse(fromBase64(transaction.rawTransaction))[0];\n  const objectTypes = {};\n  transaction.objectChanges?.forEach((change) => {\n    if (change.type !== \"published\") {\n      objectTypes[change.objectId] = change.objectType;\n    }\n  });\n  const bytes = bcs.TransactionData.serialize(parsedTx.intentMessage.value).toBytes();\n  const data = TransactionDataBuilder.restore({\n    version: 2,\n    sender: parsedTx.intentMessage.value.V1.sender,\n    expiration: parsedTx.intentMessage.value.V1.expiration,\n    gasData: parsedTx.intentMessage.value.V1.gasData,\n    inputs: parsedTx.intentMessage.value.V1.kind.ProgrammableTransaction.inputs,\n    commands: parsedTx.intentMessage.value.V1.kind.ProgrammableTransaction.commands\n  });\n  return {\n    digest: transaction.digest,\n    epoch: transaction.effects?.executedEpoch ?? null,\n    effects: parseTransactionEffectsBcs(new Uint8Array(transaction.rawEffects)),\n    objectTypes: Promise.resolve(objectTypes),\n    transaction: {\n      ...data,\n      bcs: bytes\n    },\n    signatures: parsedTx.txSignatures\n  };\n}\nfunction parseTransactionEffectsJson({\n  bytes,\n  effects,\n  objectChanges\n}) {\n  const changedObjects = [];\n  const unchangedSharedObjects = [];\n  const objectTypes = {};\n  objectChanges?.forEach((change) => {\n    switch (change.type) {\n      case \"published\":\n        changedObjects.push({\n          id: change.packageId,\n          inputState: \"DoesNotExist\",\n          inputVersion: null,\n          inputDigest: null,\n          inputOwner: null,\n          outputState: \"PackageWrite\",\n          outputVersion: change.version,\n          outputDigest: change.digest,\n          outputOwner: null,\n          idOperation: \"Created\"\n        });\n        break;\n      case \"transferred\":\n        changedObjects.push({\n          id: change.objectId,\n          inputState: \"Exists\",\n          inputVersion: change.version,\n          inputDigest: change.digest,\n          inputOwner: {\n            $kind: \"AddressOwner\",\n            AddressOwner: change.sender\n          },\n          outputState: \"ObjectWrite\",\n          outputVersion: change.version,\n          outputDigest: change.digest,\n          outputOwner: parseOwner(change.recipient),\n          idOperation: \"None\"\n        });\n        objectTypes[change.objectId] = change.objectType;\n        break;\n      case \"mutated\":\n        changedObjects.push({\n          id: change.objectId,\n          inputState: \"Exists\",\n          inputVersion: change.previousVersion,\n          inputDigest: null,\n          inputOwner: parseOwner(change.owner),\n          outputState: \"ObjectWrite\",\n          outputVersion: change.version,\n          outputDigest: change.digest,\n          outputOwner: parseOwner(change.owner),\n          idOperation: \"None\"\n        });\n        objectTypes[change.objectId] = change.objectType;\n        break;\n      case \"deleted\":\n        changedObjects.push({\n          id: change.objectId,\n          inputState: \"Exists\",\n          inputVersion: change.version,\n          inputDigest: effects.deleted?.find((d) => d.objectId === change.objectId)?.digest ?? null,\n          inputOwner: null,\n          outputState: \"DoesNotExist\",\n          outputVersion: null,\n          outputDigest: null,\n          outputOwner: null,\n          idOperation: \"Deleted\"\n        });\n        objectTypes[change.objectId] = change.objectType;\n        break;\n      case \"wrapped\":\n        changedObjects.push({\n          id: change.objectId,\n          inputState: \"Exists\",\n          inputVersion: change.version,\n          inputDigest: null,\n          inputOwner: {\n            $kind: \"AddressOwner\",\n            AddressOwner: change.sender\n          },\n          outputState: \"ObjectWrite\",\n          outputVersion: change.version,\n          outputDigest: effects.wrapped?.find((w) => w.objectId === change.objectId)?.digest ?? null,\n          outputOwner: {\n            $kind: \"ObjectOwner\",\n            ObjectOwner: change.sender\n          },\n          idOperation: \"None\"\n        });\n        objectTypes[change.objectId] = change.objectType;\n        break;\n      case \"created\":\n        changedObjects.push({\n          id: change.objectId,\n          inputState: \"DoesNotExist\",\n          inputVersion: null,\n          inputDigest: null,\n          inputOwner: null,\n          outputState: \"ObjectWrite\",\n          outputVersion: change.version,\n          outputDigest: change.digest,\n          outputOwner: parseOwner(change.owner),\n          idOperation: \"Created\"\n        });\n        objectTypes[change.objectId] = change.objectType;\n        break;\n    }\n  });\n  return {\n    objectTypes,\n    effects: {\n      bcs: bytes ?? null,\n      digest: effects.transactionDigest,\n      version: 2,\n      status: effects.status.status === \"success\" ? { success: true, error: null } : { success: false, error: effects.status.error },\n      gasUsed: effects.gasUsed,\n      transactionDigest: effects.transactionDigest,\n      gasObject: {\n        id: effects.gasObject?.reference.objectId,\n        inputState: \"Exists\",\n        inputVersion: null,\n        inputDigest: null,\n        inputOwner: null,\n        outputState: \"ObjectWrite\",\n        outputVersion: effects.gasObject.reference.version,\n        outputDigest: effects.gasObject.reference.digest,\n        outputOwner: parseOwner(effects.gasObject.owner),\n        idOperation: \"None\"\n      },\n      eventsDigest: effects.eventsDigest ?? null,\n      dependencies: effects.dependencies ?? [],\n      lamportVersion: effects.gasObject.reference.version,\n      changedObjects,\n      unchangedSharedObjects,\n      auxiliaryDataDigest: null\n    }\n  };\n}\nconst Balance = bcs.struct(\"Balance\", {\n  value: bcs.u64()\n});\nconst Coin = bcs.struct(\"Coin\", {\n  id: bcs.Address,\n  balance: Balance\n});\nexport {\n  JSONRpcTransport\n};\n//# sourceMappingURL=jsonRPC.js.map\n","import { isValidNamedPackage, isValidNamedType } from \"../../utils/move-registry.js\";\nimport { normalizeStructTag, parseStructTag } from \"../../utils/sui-types.js\";\nconst NAME_SEPARATOR = \"/\";\nfunction findNamesInTransaction(builder) {\n  const packages = /* @__PURE__ */ new Set();\n  const types = /* @__PURE__ */ new Set();\n  for (const command of builder.commands) {\n    if (command.MakeMoveVec?.type) {\n      getNamesFromTypeList([command.MakeMoveVec.type]).forEach((type) => {\n        types.add(type);\n      });\n      continue;\n    }\n    if (!(\"MoveCall\" in command)) continue;\n    const tx = command.MoveCall;\n    if (!tx) continue;\n    const pkg = tx.package.split(\"::\")[0];\n    if (hasMvrName(pkg)) {\n      if (!isValidNamedPackage(pkg)) throw new Error(`Invalid package name: ${pkg}`);\n      packages.add(pkg);\n    }\n    getNamesFromTypeList(tx.typeArguments ?? []).forEach((type) => {\n      types.add(type);\n    });\n  }\n  return {\n    packages: [...packages],\n    types: [...types]\n  };\n}\nfunction getFirstLevelNamedTypes(types) {\n  const results = /* @__PURE__ */ new Set();\n  for (const type of types) {\n    findMvrNames(type).forEach((name) => results.add(name));\n  }\n  return results;\n}\nfunction findMvrNames(type) {\n  const types = /* @__PURE__ */ new Set();\n  if (typeof type === \"string\" && !hasMvrName(type)) return types;\n  const tag = isStructTag(type) ? type : parseStructTag(type);\n  if (hasMvrName(tag.address)) types.add(`${tag.address}::${tag.module}::${tag.name}`);\n  for (const param of tag.typeParams) {\n    findMvrNames(param).forEach((name) => types.add(name));\n  }\n  return types;\n}\nfunction populateNamedTypesFromCache(types, typeCache) {\n  const composedTypes = {};\n  types.forEach((type) => {\n    const normalized = normalizeStructTag(findAndReplaceCachedTypes(type, typeCache));\n    composedTypes[type] = normalized;\n  });\n  return composedTypes;\n}\nfunction findAndReplaceCachedTypes(tag, typeCache) {\n  const type = isStructTag(tag) ? tag : parseStructTag(tag);\n  const typeTag = `${type.address}::${type.module}::${type.name}`;\n  const cacheHit = typeCache[typeTag];\n  return {\n    ...type,\n    address: cacheHit ? cacheHit.split(\"::\")[0] : type.address,\n    typeParams: type.typeParams.map((param) => findAndReplaceCachedTypes(param, typeCache))\n  };\n}\nfunction replaceNames(builder, cache) {\n  for (const command of builder.commands) {\n    if (command.MakeMoveVec?.type) {\n      if (!hasMvrName(command.MakeMoveVec.type)) continue;\n      if (!cache.types[command.MakeMoveVec.type])\n        throw new Error(`No resolution found for type: ${command.MakeMoveVec.type}`);\n      command.MakeMoveVec.type = cache.types[command.MakeMoveVec.type];\n    }\n    const tx = command.MoveCall;\n    if (!tx) continue;\n    const nameParts = tx.package.split(\"::\");\n    const name = nameParts[0];\n    if (hasMvrName(name) && !cache.packages[name])\n      throw new Error(`No address found for package: ${name}`);\n    if (hasMvrName(name)) {\n      nameParts[0] = cache.packages[name];\n      tx.package = nameParts.join(\"::\");\n    }\n    const types = tx.typeArguments;\n    if (!types) continue;\n    for (let i = 0; i < types.length; i++) {\n      if (!hasMvrName(types[i])) continue;\n      if (!cache.types[types[i]]) throw new Error(`No resolution found for type: ${types[i]}`);\n      types[i] = cache.types[types[i]];\n    }\n    tx.typeArguments = types;\n  }\n}\nfunction batch(arr, size) {\n  const batches = [];\n  for (let i = 0; i < arr.length; i += size) {\n    batches.push(arr.slice(i, i + size));\n  }\n  return batches;\n}\nfunction getNamesFromTypeList(types) {\n  const names = /* @__PURE__ */ new Set();\n  for (const type of types) {\n    if (hasMvrName(type)) {\n      if (!isValidNamedType(type)) throw new Error(`Invalid type with names: ${type}`);\n      names.add(type);\n    }\n  }\n  return names;\n}\nfunction hasMvrName(nameOrType) {\n  return nameOrType.includes(NAME_SEPARATOR) || nameOrType.includes(\"@\") || nameOrType.includes(\".sui\");\n}\nfunction isStructTag(type) {\n  return typeof type === \"object\" && \"address\" in type && \"module\" in type && \"name\" in type && \"typeParams\" in type;\n}\nexport {\n  batch,\n  findNamesInTransaction,\n  getFirstLevelNamedTypes,\n  populateNamedTypesFromCache,\n  replaceNames\n};\n//# sourceMappingURL=utils.js.map\n","import { fromBase58, toBase64, toHex } from \"@mysten/bcs\";\nimport { Experimental_BaseClient } from \"../experimental/client.js\";\nimport { JSONRpcTransport } from \"../experimental/transports/jsonRPC.js\";\nimport { isTransaction } from \"../transactions/index.js\";\nimport {\n  isValidSuiAddress,\n  isValidSuiObjectId,\n  isValidTransactionDigest,\n  normalizeSuiAddress,\n  normalizeSuiObjectId\n} from \"../utils/sui-types.js\";\nimport { normalizeSuiNSName } from \"../utils/suins.js\";\nimport { SuiHTTPTransport } from \"./http-transport.js\";\nconst SUI_CLIENT_BRAND = Symbol.for(\"@mysten/SuiClient\");\nfunction isSuiClient(client) {\n  return typeof client === \"object\" && client !== null && client[SUI_CLIENT_BRAND] === true;\n}\nclass SuiClient extends Experimental_BaseClient {\n  /**\n   * Establish a connection to a Sui RPC endpoint\n   *\n   * @param options configuration options for the API Client\n   */\n  constructor(options) {\n    super({ network: options.network ?? \"unknown\" });\n    this.core = new JSONRpcTransport(this);\n    this.jsonRpc = this;\n    this.transport = options.transport ?? new SuiHTTPTransport({ url: options.url });\n  }\n  get [SUI_CLIENT_BRAND]() {\n    return true;\n  }\n  async getRpcApiVersion({ signal } = {}) {\n    const resp = await this.transport.request({\n      method: \"rpc.discover\",\n      params: [],\n      signal\n    });\n    return resp.info.version;\n  }\n  /**\n   * Get all Coin<`coin_type`> objects owned by an address.\n   */\n  async getCoins(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getCoins\",\n      params: [input.owner, input.coinType, input.cursor, input.limit],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get all Coin objects owned by an address.\n   */\n  async getAllCoins(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getAllCoins\",\n      params: [input.owner, input.cursor, input.limit],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get the total coin balance for one coin type, owned by the address owner.\n   */\n  async getBalance(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getBalance\",\n      params: [input.owner, input.coinType],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get the total coin balance for all coin types, owned by the address owner.\n   */\n  async getAllBalances(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getAllBalances\",\n      params: [input.owner],\n      signal: input.signal\n    });\n  }\n  /**\n   * Fetch CoinMetadata for a given coin type\n   */\n  async getCoinMetadata(input) {\n    return await this.transport.request({\n      method: \"suix_getCoinMetadata\",\n      params: [input.coinType],\n      signal: input.signal\n    });\n  }\n  /**\n   *  Fetch total supply for a coin\n   */\n  async getTotalSupply(input) {\n    return await this.transport.request({\n      method: \"suix_getTotalSupply\",\n      params: [input.coinType],\n      signal: input.signal\n    });\n  }\n  /**\n   * Invoke any RPC method\n   * @param method the method to be invoked\n   * @param args the arguments to be passed to the RPC request\n   */\n  async call(method, params, { signal } = {}) {\n    return await this.transport.request({ method, params, signal });\n  }\n  /**\n   * Get Move function argument types like read, write and full access\n   */\n  async getMoveFunctionArgTypes(input) {\n    return await this.transport.request({\n      method: \"sui_getMoveFunctionArgTypes\",\n      params: [input.package, input.module, input.function],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get a map from module name to\n   * structured representations of Move modules\n   */\n  async getNormalizedMoveModulesByPackage(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveModulesByPackage\",\n      params: [input.package],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get a structured representation of Move module\n   */\n  async getNormalizedMoveModule(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveModule\",\n      params: [input.package, input.module],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get a structured representation of Move function\n   */\n  async getNormalizedMoveFunction(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveFunction\",\n      params: [input.package, input.module, input.function],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get a structured representation of Move struct\n   */\n  async getNormalizedMoveStruct(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveStruct\",\n      params: [input.package, input.module, input.struct],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get all objects owned by an address\n   */\n  async getOwnedObjects(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getOwnedObjects\",\n      params: [\n        input.owner,\n        {\n          filter: input.filter,\n          options: input.options\n        },\n        input.cursor,\n        input.limit\n      ],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get details about an object\n   */\n  async getObject(input) {\n    if (!input.id || !isValidSuiObjectId(normalizeSuiObjectId(input.id))) {\n      throw new Error(\"Invalid Sui Object id\");\n    }\n    return await this.transport.request({\n      method: \"sui_getObject\",\n      params: [input.id, input.options],\n      signal: input.signal\n    });\n  }\n  async tryGetPastObject(input) {\n    return await this.transport.request({\n      method: \"sui_tryGetPastObject\",\n      params: [input.id, input.version, input.options],\n      signal: input.signal\n    });\n  }\n  /**\n   * Batch get details about a list of objects. If any of the object ids are duplicates the call will fail\n   */\n  async multiGetObjects(input) {\n    input.ids.forEach((id) => {\n      if (!id || !isValidSuiObjectId(normalizeSuiObjectId(id))) {\n        throw new Error(`Invalid Sui Object id ${id}`);\n      }\n    });\n    const hasDuplicates = input.ids.length !== new Set(input.ids).size;\n    if (hasDuplicates) {\n      throw new Error(`Duplicate object ids in batch call ${input.ids}`);\n    }\n    return await this.transport.request({\n      method: \"sui_multiGetObjects\",\n      params: [input.ids, input.options],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get transaction blocks for a given query criteria\n   */\n  async queryTransactionBlocks(input) {\n    return await this.transport.request({\n      method: \"suix_queryTransactionBlocks\",\n      params: [\n        {\n          filter: input.filter,\n          options: input.options\n        },\n        input.cursor,\n        input.limit,\n        (input.order || \"descending\") === \"descending\"\n      ],\n      signal: input.signal\n    });\n  }\n  async getTransactionBlock(input) {\n    if (!isValidTransactionDigest(input.digest)) {\n      throw new Error(\"Invalid Transaction digest\");\n    }\n    return await this.transport.request({\n      method: \"sui_getTransactionBlock\",\n      params: [input.digest, input.options],\n      signal: input.signal\n    });\n  }\n  async multiGetTransactionBlocks(input) {\n    input.digests.forEach((d) => {\n      if (!isValidTransactionDigest(d)) {\n        throw new Error(`Invalid Transaction digest ${d}`);\n      }\n    });\n    const hasDuplicates = input.digests.length !== new Set(input.digests).size;\n    if (hasDuplicates) {\n      throw new Error(`Duplicate digests in batch call ${input.digests}`);\n    }\n    return await this.transport.request({\n      method: \"sui_multiGetTransactionBlocks\",\n      params: [input.digests, input.options],\n      signal: input.signal\n    });\n  }\n  async executeTransactionBlock({\n    transactionBlock,\n    signature,\n    options,\n    requestType,\n    signal\n  }) {\n    const result = await this.transport.request({\n      method: \"sui_executeTransactionBlock\",\n      params: [\n        typeof transactionBlock === \"string\" ? transactionBlock : toBase64(transactionBlock),\n        Array.isArray(signature) ? signature : [signature],\n        options\n      ],\n      signal\n    });\n    if (requestType === \"WaitForLocalExecution\") {\n      try {\n        await this.waitForTransaction({\n          digest: result.digest\n        });\n      } catch (_) {\n      }\n    }\n    return result;\n  }\n  async signAndExecuteTransaction({\n    transaction,\n    signer,\n    ...input\n  }) {\n    let transactionBytes;\n    if (transaction instanceof Uint8Array) {\n      transactionBytes = transaction;\n    } else {\n      transaction.setSenderIfNotSet(signer.toSuiAddress());\n      transactionBytes = await transaction.build({ client: this });\n    }\n    const { signature, bytes } = await signer.signTransaction(transactionBytes);\n    return this.executeTransactionBlock({\n      transactionBlock: bytes,\n      signature,\n      ...input\n    });\n  }\n  /**\n   * Get total number of transactions\n   */\n  async getTotalTransactionBlocks({ signal } = {}) {\n    const resp = await this.transport.request({\n      method: \"sui_getTotalTransactionBlocks\",\n      params: [],\n      signal\n    });\n    return BigInt(resp);\n  }\n  /**\n   * Getting the reference gas price for the network\n   */\n  async getReferenceGasPrice({ signal } = {}) {\n    const resp = await this.transport.request({\n      method: \"suix_getReferenceGasPrice\",\n      params: [],\n      signal\n    });\n    return BigInt(resp);\n  }\n  /**\n   * Return the delegated stakes for an address\n   */\n  async getStakes(input) {\n    if (!input.owner || !isValidSuiAddress(normalizeSuiAddress(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getStakes\",\n      params: [input.owner],\n      signal: input.signal\n    });\n  }\n  /**\n   * Return the delegated stakes queried by id.\n   */\n  async getStakesByIds(input) {\n    input.stakedSuiIds.forEach((id) => {\n      if (!id || !isValidSuiObjectId(normalizeSuiObjectId(id))) {\n        throw new Error(`Invalid Sui Stake id ${id}`);\n      }\n    });\n    return await this.transport.request({\n      method: \"suix_getStakesByIds\",\n      params: [input.stakedSuiIds],\n      signal: input.signal\n    });\n  }\n  /**\n   * Return the latest system state content.\n   */\n  async getLatestSuiSystemState({\n    signal\n  } = {}) {\n    return await this.transport.request({\n      method: \"suix_getLatestSuiSystemState\",\n      params: [],\n      signal\n    });\n  }\n  /**\n   * Get events for a given query criteria\n   */\n  async queryEvents(input) {\n    return await this.transport.request({\n      method: \"suix_queryEvents\",\n      params: [\n        input.query,\n        input.cursor,\n        input.limit,\n        (input.order || \"descending\") === \"descending\"\n      ],\n      signal: input.signal\n    });\n  }\n  /**\n   * Subscribe to get notifications whenever an event matching the filter occurs\n   *\n   * @deprecated\n   */\n  async subscribeEvent(input) {\n    return this.transport.subscribe({\n      method: \"suix_subscribeEvent\",\n      unsubscribe: \"suix_unsubscribeEvent\",\n      params: [input.filter],\n      onMessage: input.onMessage,\n      signal: input.signal\n    });\n  }\n  /**\n   * @deprecated\n   */\n  async subscribeTransaction(input) {\n    return this.transport.subscribe({\n      method: \"suix_subscribeTransaction\",\n      unsubscribe: \"suix_unsubscribeTransaction\",\n      params: [input.filter],\n      onMessage: input.onMessage,\n      signal: input.signal\n    });\n  }\n  /**\n   * Runs the transaction block in dev-inspect mode. Which allows for nearly any\n   * transaction (or Move call) with any arguments. Detailed results are\n   * provided, including both the transaction effects and any return values.\n   */\n  async devInspectTransactionBlock(input) {\n    let devInspectTxBytes;\n    if (isTransaction(input.transactionBlock)) {\n      input.transactionBlock.setSenderIfNotSet(input.sender);\n      devInspectTxBytes = toBase64(\n        await input.transactionBlock.build({\n          client: this,\n          onlyTransactionKind: true\n        })\n      );\n    } else if (typeof input.transactionBlock === \"string\") {\n      devInspectTxBytes = input.transactionBlock;\n    } else if (input.transactionBlock instanceof Uint8Array) {\n      devInspectTxBytes = toBase64(input.transactionBlock);\n    } else {\n      throw new Error(\"Unknown transaction block format.\");\n    }\n    input.signal?.throwIfAborted();\n    return await this.transport.request({\n      method: \"sui_devInspectTransactionBlock\",\n      params: [input.sender, devInspectTxBytes, input.gasPrice?.toString(), input.epoch],\n      signal: input.signal\n    });\n  }\n  /**\n   * Dry run a transaction block and return the result.\n   */\n  async dryRunTransactionBlock(input) {\n    return await this.transport.request({\n      method: \"sui_dryRunTransactionBlock\",\n      params: [\n        typeof input.transactionBlock === \"string\" ? input.transactionBlock : toBase64(input.transactionBlock)\n      ]\n    });\n  }\n  /**\n   * Return the list of dynamic field objects owned by an object\n   */\n  async getDynamicFields(input) {\n    if (!input.parentId || !isValidSuiObjectId(normalizeSuiObjectId(input.parentId))) {\n      throw new Error(\"Invalid Sui Object id\");\n    }\n    return await this.transport.request({\n      method: \"suix_getDynamicFields\",\n      params: [input.parentId, input.cursor, input.limit],\n      signal: input.signal\n    });\n  }\n  /**\n   * Return the dynamic field object information for a specified object\n   */\n  async getDynamicFieldObject(input) {\n    return await this.transport.request({\n      method: \"suix_getDynamicFieldObject\",\n      params: [input.parentId, input.name],\n      signal: input.signal\n    });\n  }\n  /**\n   * Get the sequence number of the latest checkpoint that has been executed\n   */\n  async getLatestCheckpointSequenceNumber({\n    signal\n  } = {}) {\n    const resp = await this.transport.request({\n      method: \"sui_getLatestCheckpointSequenceNumber\",\n      params: [],\n      signal\n    });\n    return String(resp);\n  }\n  /**\n   * Returns information about a given checkpoint\n   */\n  async getCheckpoint(input) {\n    return await this.transport.request({\n      method: \"sui_getCheckpoint\",\n      params: [input.id],\n      signal: input.signal\n    });\n  }\n  /**\n   * Returns historical checkpoints paginated\n   */\n  async getCheckpoints(input) {\n    return await this.transport.request({\n      method: \"sui_getCheckpoints\",\n      params: [input.cursor, input?.limit, input.descendingOrder],\n      signal: input.signal\n    });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getCommitteeInfo(input) {\n    return await this.transport.request({\n      method: \"suix_getCommitteeInfo\",\n      params: [input?.epoch],\n      signal: input?.signal\n    });\n  }\n  async getNetworkMetrics({ signal } = {}) {\n    return await this.transport.request({\n      method: \"suix_getNetworkMetrics\",\n      params: [],\n      signal\n    });\n  }\n  async getAddressMetrics({ signal } = {}) {\n    return await this.transport.request({\n      method: \"suix_getLatestAddressMetrics\",\n      params: [],\n      signal\n    });\n  }\n  async getEpochMetrics(input) {\n    return await this.transport.request({\n      method: \"suix_getEpochMetrics\",\n      params: [input?.cursor, input?.limit, input?.descendingOrder],\n      signal: input?.signal\n    });\n  }\n  async getAllEpochAddressMetrics(input) {\n    return await this.transport.request({\n      method: \"suix_getAllEpochAddressMetrics\",\n      params: [input?.descendingOrder],\n      signal: input?.signal\n    });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getEpochs(input) {\n    return await this.transport.request({\n      method: \"suix_getEpochs\",\n      params: [input?.cursor, input?.limit, input?.descendingOrder],\n      signal: input?.signal\n    });\n  }\n  /**\n   * Returns list of top move calls by usage\n   */\n  async getMoveCallMetrics({ signal } = {}) {\n    return await this.transport.request({\n      method: \"suix_getMoveCallMetrics\",\n      params: [],\n      signal\n    });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getCurrentEpoch({ signal } = {}) {\n    return await this.transport.request({\n      method: \"suix_getCurrentEpoch\",\n      params: [],\n      signal\n    });\n  }\n  /**\n   * Return the Validators APYs\n   */\n  async getValidatorsApy({ signal } = {}) {\n    return await this.transport.request({\n      method: \"suix_getValidatorsApy\",\n      params: [],\n      signal\n    });\n  }\n  // TODO: Migrate this to `sui_getChainIdentifier` once it is widely available.\n  async getChainIdentifier({ signal } = {}) {\n    const checkpoint = await this.getCheckpoint({ id: \"0\", signal });\n    const bytes = fromBase58(checkpoint.digest);\n    return toHex(bytes.slice(0, 4));\n  }\n  async resolveNameServiceAddress(input) {\n    return await this.transport.request({\n      method: \"suix_resolveNameServiceAddress\",\n      params: [input.name],\n      signal: input.signal\n    });\n  }\n  async resolveNameServiceNames({\n    format = \"dot\",\n    ...input\n  }) {\n    const { nextCursor, hasNextPage, data } = await this.transport.request({\n      method: \"suix_resolveNameServiceNames\",\n      params: [input.address, input.cursor, input.limit],\n      signal: input.signal\n    });\n    return {\n      hasNextPage,\n      nextCursor,\n      data: data.map((name) => normalizeSuiNSName(name, format))\n    };\n  }\n  async getProtocolConfig(input) {\n    return await this.transport.request({\n      method: \"sui_getProtocolConfig\",\n      params: [input?.version],\n      signal: input?.signal\n    });\n  }\n  async verifyZkLoginSignature(input) {\n    return await this.transport.request({\n      method: \"sui_verifyZkLoginSignature\",\n      params: [input.bytes, input.signature, input.intentScope, input.author],\n      signal: input.signal\n    });\n  }\n  /**\n   * Wait for a transaction block result to be available over the API.\n   * This can be used in conjunction with `executeTransactionBlock` to wait for the transaction to\n   * be available via the API.\n   * This currently polls the `getTransactionBlock` API to check for the transaction.\n   */\n  async waitForTransaction({\n    signal,\n    timeout = 60 * 1e3,\n    pollInterval = 2 * 1e3,\n    ...input\n  }) {\n    const timeoutSignal = AbortSignal.timeout(timeout);\n    const timeoutPromise = new Promise((_, reject) => {\n      timeoutSignal.addEventListener(\"abort\", () => reject(timeoutSignal.reason));\n    });\n    timeoutPromise.catch(() => {\n    });\n    while (!timeoutSignal.aborted) {\n      signal?.throwIfAborted();\n      try {\n        return await this.getTransactionBlock(input);\n      } catch (e) {\n        await Promise.race([\n          new Promise((resolve) => setTimeout(resolve, pollInterval)),\n          timeoutPromise\n        ]);\n      }\n    }\n    timeoutSignal.throwIfAborted();\n    throw new Error(\"Unexpected error while waiting for transaction block.\");\n  }\n  experimental_asClientExtension() {\n    return {\n      name: \"jsonRPC\",\n      register: () => {\n        return this;\n      }\n    };\n  }\n}\nexport {\n  SuiClient,\n  isSuiClient\n};\n//# sourceMappingURL=client.js.map\n"],"names":["defineChain","chain","formatters","undefined","fees","serializers","version","errorConfig","docsBaseUrl","docsPath","docsSlug","BaseError","Error","constructor","shortMessage","args","details","cause","message","docsUrl","super","metaMessages","join","Object","defineProperty","this","enumerable","configurable","writable","value","name","walk","fn","err","IntegerOutOfRangeError","max","min","signed","size","SizeOverflowError","givenSize","maxSize","isHex","strict","test","startsWith","Math","ceil","length","trim","hexOrBytes","dir","data","replace","sliceLength","i","slice","SliceOffsetOutOfBoundsError","offset","position","SizeExceedsPaddingSizeError","targetSize","type","charAt","toUpperCase","toLowerCase","pad","hex_","hex","padHex","bytes","paddedBytes","Uint8Array","padEnd","padBytes","hexes","Array","from","_v","toString","padStart","toHex","opts","numberToHex","value_","encoder","encode","bytesToHex","stringToHex","Number","assertSize","boolToHex","string","BigInt","maxValue","MAX_SAFE_INTEGER","minValue","suffix","TextEncoder","toBytes","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","size_","hexToBigInt","hexToNumber","defineFormatter","format","exclude","overrides","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","chainId","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","typeHex","v","authorizationList","map","authorization","address","r","s","yParity","accessList","defineTransaction","formatBlock","block","transactions","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","timestamp","totalDifficulty","defineBlock","formatLog","log","eventName","logIndex","transactionHash","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","request","rpcRequest","blobVersionedHashes","blobs","x","defineTransactionRequest","maxUint256","gasPerPubdataDefault","maxBytecodeSize","maxUint16","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","sender","transactionRequest","gasPerPubdata","paymaster","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","concatHex","values","reduce","acc","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","assertReadLimit","assertPosition","decrementPosition","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","set","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","toRlp","encodable","getEncodable","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatEther","unit","formatGwei","prettyPrint","entries","filter","Boolean","maxLength","FeeConflictError","InvalidLegacyVError","InvalidSerializableTransactionError","InvalidStorageKeySizeError","storageKey","floor","blobsToCommitments","parameters","kzg","commitments","blob","push","blobToKzgCommitment","blobsToProofs","proofs","computeBlobKzgProof","anumber","n","isSafeInteger","abytes","b","lengths","isView","includes","aexists","instance","checkFinished","destroyed","finished","aoutput","out","outputLen","u32","arr","Uint32Array","clean","arrays","fill","createView","rotr","word","shift","isLE","byteSwap","swap8IfBE","swap32IfBE","u","str","utf8ToBytes","Hash","createHasher","hashCons","hashC","msg","update","digest","tmp","blockLen","createOptHasher","Maj","c","HashMD","padOffset","pos","view","len","take","process","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","l","oview","outLen","state","res","destroy","_cloneInto","clone","SHA256_IV","U32_MASK64","fromBig","le","h","rotrSH","rotrSL","rotrBL","add","Ah","Al","Bh","Bl","add3L","Cl","add3H","low","Ch","SHA256_K","SHA256_W","SHA256","B","C","D","E","G","H","W15","W2","s0","s1","T1","T2","sha256","to_","noble_sha256","commitmentToVersionedHash","commitment","versionedHash","fieldElementsPerBlob","bytesPerBlob","bytesPerFieldElement","maxBytesPerTransaction","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","active","toBlobs","sidecars","proof","InvalidAddressError","InvalidChainIdError","ExecutionRevertedError","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","LruMap","has","delete","firstKey","keys","next","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","y","t","IOTAS","lst","split","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","finish","writeInto","bufferOut","xofInto","xof","keccak_256","gen","checksumAddressCache","checksumAddress","address_","hexAddress","substring","result","addressRegex","isAddressCache","isAddress","options","cacheKey","start","end","assertEndOffset","sliceHex","sliceBytes","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","serializeTransaction","signature","getTransactionType","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionEIP7702","serializedAuthorizationList","serializeAuthorizationList","serializeTransactionEIP7702","assertTransactionLegacy","serializeTransactionLegacy","signature_","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","serializeTransaction_","BytecodeLengthExceedsMaxSizeError","givenLength","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","chainConfig","custom","getEip712Domain","txType","gasPerPubdataByteLimit","bytecode","bytecodeBytes","bytecodeLengthInWords","bytecodeLengthPadded","codeHashVersion","hashBytecode","transactionToMessage","domain","types","Transaction","primaryType","contracts","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","arbitrum","id","nativeCurrency","symbol","rpcUrls","default","http","blockExplorers","url","apiUrl","multicall3","blockCreated","aurora","avalanche","sourceId","base","disputeGameFactory","sourceId$7","l2OutputOracle","portal","l1StandardBridge","baseSepolia","network","sourceId$6","testnet","berachainTestnetbArtio","ensRegistry","ensUniversalResolver","ensTlds","bevmMainnet","blast","bob","webSocket","sourceId$4","bsc","bscTestnet","chiliz","cronos","fantom","gnosis","parseAccount","account","AccountNotFoundError","prettyStateMapping","stateMapping","pretty","slot","CallExecutionError","account_","stateOverride","prettyArgs","val","balance","code","stateDiff","prettyStateOverride","getCallError","executionRevertedError","e","nodeMessage","getNodeError","extract","extract_","async","estimateGas","client","blockTag","rest","assertRequest","chainFormat","priorityFeePerGas","method","params","estimateFeesPerGas","multiply","response","linea","mainnet","manta","mantaTestnet","mantle","merlin","mode","sourceId$3","opBNB","sourceId$2","optimism","sourceId$1","palm","polygon","polygonZkEvm","satoshiVM","scroll","sei","sepolia","storyAeneid","taiko","xLayer","zetachain","zkLinkNova","zksync","native","universalSignatureVerifier","zora","relayOrigin","redirectUriForX","xLoaderUrl","kakaoJsKey","kakaoRedirectUri","redirectUri","relayMessageTypes","googleAuth","xAuth","signReq","normalReq","mfaCreate","kakaoAuth","telegramAuth","EventNames","RequestTypes","xEvents","tomoLog","getLogger","LOCAL_EMAIL_LOGIN_REQ","TOMO_CACHE","getTomoCache","cache","localStorage","getItem","JSON","parse","setCacheField","clientId","setItem","stringify","error","setTomoCache","globalTokenStore","getLocalToken","setLocalToken","token","getLocalUserId","cacheObj","userId","setLocalUserId","getLocalLoginType","loginType","setLocalLoginType","setLocalPasskey","evmAddress","localPasskey","getEmailReq","req","setEmailReq","removeEmailReq","removeItem","userInfo","getUserInfoFromLocalFirst","debug","getUserInfoFromRemote","clearUserInfo","strToBase64","binString","String","fromCodePoint","btoa","constructSignReq","reqType","chainType","addressType","signMessageType","eventId","uuidv4","origin","window","location","accessToken","signInfo","constructBtcTxReq","txMeta","txParams","constructSolTxReq","relayWindowList","openWindow","width","height","top","innerHeight","screenY","left","innerWidth","screenX","currentWindow","href","relyWindow","open","createModalIframe","modalIframe","closed","existed","document","getElementById","remove","originalMeta","querySelector","originalMetaContent","getAttribute","originalBodyStyle","overflow","body","style","isMobileDevice","navigator","userAgent","overlay","createElement","cssText","container","iframe","setAttribute","allow","src","onload","opacity","meta","content","head","appendChild","cleanup","currentMeta","messageHandler","event","removeEventListener","addEventListener","target","checkPopupClosed","popupPromise_ish","events","popup","checkInterval","setInterval","currentClosedWindowIndex","findIndex","win","splice","find","emit","eventNames","clearInterval","signRequest","core","reqString","JSONBig","setTemporaryData","Promise","resolve","reject","relayBase","once","handleMessage","isSuccess","onSuccess","isError","onError","isReject","onReject","setAuth","jwt","auth","postMessage","normalRequest","msgHandler","bind","walletRequest","walletDomain","BASE_TEST_URL","BASE_PROD_URL","api","baseUrl","setApi","connectUrl","baseURL","axios","interceptors","use","config","contentWindow","isFail","removeChild","getAuth","headers","Authorization","setHeaders","forEach","linkSocialAccount","post","getUserInfo","getCustomization","catch","btcChains","ticker","apiBlockstream","signet","AddressType","AddressTypeMap","P2PKH","P2WPKH","P2TR","P2SH","networkMap","addressInfos","label","displayName","hdPath","P2SH_P2WPKH","BitcoinProvider","EventEmitter","pubKey","setCore","getAccounts","getAddress","btcMainnetAddressInfo","btcTestnetAddressInfo","getPublicKey","getPublicKeyHex","getAllAddresses","info","addressInfo","sendBitcoin","satAmount","feeRate","amount","fromAddress","signPsbt","psbtHex","signPsbts","psbtHexs","signMessageBIP322","signMessageEcdsa","signMessage","_type","getNetwork","getAddressType","switchNetwork","changeAddressType","on","callBack","off","getBalance","btcAddress","btcRes","maxRedirects","getBalanceFromNode","chain_stats","mempool_stats","funded_txo_sum","spent_txo_sum","getFeeRate","networkType","getBtcFeeRate","pushTx","txHex","rawTransaction","pushBtcTx","getInscriptionData","getBtcInscriptionData","getInscriptionInfo","insId","getBtcInscriptionInfo","allChains","zkSync","logo","chainName","nativeCurrencyName","nativeCurrencySymbol","nativeCurrencyDecimals","blockExplorerUrl","platformType","icon","supportSwap","supportGift","supportHistory","walletActions","eth_requestAccounts","eth_accounts","wallet_watchAsset","eth_addEthereumChain","eth_switchEthereumChain","wallet_switchEthereumChain","personal_sign","eth_signTypedData_v4","wallet_getPermissions","wallet_requestPermissions","eth_sendTransaction","eth_sendRawTransaction","personal_ecRecover","eth_swapTransaction","eth_approveTransaction","eth_chainId","LsChainIdKey","EthereumProvider","jsonRpcProvider","chainList","chainListFromCDN","instanceId","initialPromise","Date","now","initial","chainIdDecimal","getChainConfig","JsonRpcProvider","HttpConnection","rpcUrl","connect","getChain","getChainListFromCDN","chainObj","getTomoChains","item","connection","context","processWalletAction","isNaN","chainIdHex","requestAddresses","getAddresses","signTypedData","sendTransaction","sendRawTransaction","switchChain","recoverMessageAddress","swapTransaction","approveTransaction","sendAsync","payload","callback","then","getChainId","chainIdNum","setChainConfig","getEthAddress","constructTxReq","SolanaProvider","publicKey","connected","isConnected","endpoint","solAddress","PublicKey","toBase58","signTransaction","getTransactionHex","messageStr","TextDecoder","decode","Connection","disconnect","serializeMessage","tx","feePayer","conn","recentBlockhash","getLatestBlockhash","blockhash","getRecentBlockhash","serialize","requireAllSignatures","verifySignatures","isArrayOf","isString","every","astr","input","aArr","astrArr","convertRadix","digits","d","dlen","carry","done","digit","fromCarry","digitBase","rounded","reverse","radix","num","anumArr","base58","abc","wrap","reduceRight","letters","lettersA","indexes","letter","alphabet","separator","fromBase58","fromBase64","base64String","atob","CHUNK_SIZE","toBase64","fromCharCode","output","chunk","fromHex","hexStr","normalized","padded","intArr","match","parseInt","ulebEncode","BcsReader","bytePosition","read8","read16","read32","read64","value1","read128","read256","readULEB","total","ulebDecode","readVec","cb","splitGenericParameters","genericSeparators","right","tok","nestedAngleBrackets","BcsWriter","initialSize","Infinity","allocateSize","ensureSizeOrGrow","requiredSize","nextSize","nextBuffer","write8","write16","write32","write64","toLittleEndian","el","write128","write256","writeULEB","writeVec","vector","Symbol","iterator","encoding","encodeStr","bigint","_write","_serialize","_schema","_bytes","__typeError","TypeError","__accessCheck","obj","member","__privateGet","getter","call","__privateAdd","WeakSet","__privateSet","setter","WeakMap","BcsType","_BcsType","read","serializedSize","write","options2","writer","validate","SerializedBcs","reader","b64","transform","SERIALIZED_BCS_BRAND","for","isSerializedBcs","schema","fixedSizeBcsType","uIntBcsType","readMethod","writeMethod","bigUIntBcsType","bcs","u8","u16","u64","u128","u256","bool","uleb128","dynamicSizeBcsType","array","byteVector","fromBytes","stringLikeBcsType","fixedArray","option","enum","None","Some","$kind","tuple","struct","fields","canonicalOrder","field","enumEntry","kind","name2","name3","hasOwn","optionName","optionType","k","variant","keyType","valueType","lazy","lazyType","getType","lazyBcsType","SUI_NS_NAME_REGEX","SUI_NS_DOMAIN_REGEX","NAME_PATTERN","VERSION_REGEX","isValidNamedPackage","parts","org","app","isValidSuiNSName","isValidTransactionDigest","isValidSuiAddress","getHexByteLength","isValidSuiObjectId","parseStructTag","module","isMvrPackage","indexOf","typeParams","lastIndexOf","typeParam","parseTypeTag","normalizeSuiAddress","normalizeStructTag","forceAdd0x","SUI_ADDRESS_LENGTH","normalizeSuiObjectId","SUI_TYPE_ARG","BSIGMA","B2B_IV","BBUF","G1b","Xh","Dl","Dh","ll","u64.add3L","u64.add3H","u64.add","u64.rotrSH","u64.rotrSL","G2b","u64.rotrBL","BLAKE2","buffer32","buf","compress","dataOffset","data32","pos32","out32","dkLen","BLAKE2b","olen","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLen","saltLen","persLen","salt","personalization","checkBlake2Opts","keyLength","slt","pers","isLast","u64.fromBig","blake2b","VECTOR_REGEX","STRUCT_REGEX","TypeTagSerializer","parseFromStr","normalizeAddress","signer","vectorMatch","structMatch","parseStructTypeArgs","tagToString","tag","Address","ObjectDigest","SuiObjectRef","objectId","SharedObjectRef","initialSharedVersion","mutable","ObjectArg","ImmOrOwnedObject","SharedObject","Receiving","Owner","AddressOwner","ObjectOwner","Shared","Immutable","ConsensusV2","authenticator","SingleOwner","startVersion","CallArg","Pure","InnerTypeTag","StructTag","TypeTag","typeTag","Argument","GasCoin","Input","Result","NestedResult","ProgrammableMoveCall","package","function","typeArguments","arguments","Command","MoveCall","TransferObjects","objects","SplitCoins","coin","amounts","MergeCoins","destination","sources","Publish","modules","dependencies","MakeMoveVec","elements","Upgrade","ticket","ProgrammableTransaction","inputs","commands","TransactionKind","ChangeEpoch","Genesis","ConsensusCommitPrologue","TransactionExpiration","Epoch","GasData","payment","owner","price","budget","TransactionDataV1","gasData","expiration","TransactionData","V1","IntentScope","TransactionEffects","CheckpointSummary","PersonalMessage","IntentVersion","V0","AppId","Sui","Intent","scope","appId","IntentMessage","T","intent","CompressedSignature","ED25519","Secp256k1","Secp256r1","ZkLogin","MultiSigPkMap","weight","MultiSigPublicKey","pk_map","threshold","MultiSig","sigs","bitmap","multisig_pk","SenderSignedTransaction","intentMessage","txSignatures","SenderSignedData","PasskeyAuthenticator","authenticatorData","clientDataJson","userSignature","PackageUpgradeError","UnableToFetchPackage","packageId","NotAPackage","IncompatibleUpgrade","DigestDoesNotMatch","UnknownUpgradePolicy","policy","PackageIDDoesNotMatch","ticketId","ModuleId","MoveLocation","instruction","functionName","CommandArgumentError","TypeMismatch","InvalidBCSBytes","InvalidUsageOfPureArg","InvalidArgumentToPrivateEntryFunction","IndexOutOfBounds","idx","SecondaryIndexOutOfBounds","resultIdx","secondaryIdx","InvalidResultArity","InvalidGasCoinUsage","InvalidValueUsage","InvalidObjectByValue","InvalidObjectByMutRef","SharedObjectOperationNotAllowed","TypeArgumentError","TypeNotFound","ConstraintNotSatisfied","ExecutionFailureStatus","InsufficientGas","InvalidGasObject","InvariantViolation","FeatureNotYetSupported","MoveObjectTooBig","objectSize","maxObjectSize","MovePackageTooBig","CircularObjectOwnership","object","InsufficientCoinBalance","CoinBalanceOverflow","PublishErrorNonZeroAddress","SuiMoveVerificationError","MovePrimitiveRuntimeError","MoveAbort","VMVerificationOrDeserializationError","VMInvariantViolation","FunctionNotFound","ArityMismatch","TypeArityMismatch","NonEntryFunctionInvoked","argIdx","argumentIdx","UnusedValueWithoutDrop","InvalidPublicFunctionReturnType","InvalidTransferObject","EffectsTooLarge","currentSize","PublishUpgradeMissingDependency","PublishUpgradeDependencyDowngrade","upgradeError","WrittenObjectsTooLarge","CertificateDenied","SuiMoveVerificationTimedout","InputObjectDeleted","ExecutionCancelledDueToSharedObjectCongestion","congestedObjects","AddressDeniedForCoin","coinType","CoinTypeGlobalPause","ExecutionCancelledDueToRandomnessUnavailable","ExecutionStatus","Success","Failed","command","GasCostSummary","computationCost","storageCost","storageRebate","nonRefundableStorageFee","TransactionEffectsV1","executedEpoch","modifiedAtVersions","sharedObjects","transactionDigest","created","mutated","unwrapped","deleted","unwrappedThenDeleted","wrapped","gasObject","eventsDigest","VersionDigest","ObjectIn","NotExist","Exist","ObjectOut","ObjectWrite","PackageWrite","IDOperation","Created","Deleted","EffectsObjectChange","inputState","outputState","idOperation","UnchangedSharedKind","ReadOnlyRoot","MutateDeleted","ReadDeleted","Cancelled","PerEpochConfig","TransactionEffectsV2","gasObjectIndex","lamportVersion","changedObjects","unchangedSharedObjects","auxDataDigest","V2","pureBcsSchemaFromTypeName","generic","inner","suiBcs","U8","U16","U32","U64","U128","U256","ULEB128","Bool","suiClient","getSuiClient","SuiClient","getTransactionBlockBytes","txRaw","transactionBlockBytes","setSender","build","setSenderIfNotSet","SuiProvider","suiAddress","toJSON","txb","constructSuiTxReq","signRes","mfa","suiSignTransaction","signAndExecuteTransaction","sendParam","sendRes","executeTransactionBlock","transactionBlock","sendSuiTx","json","effects","effectsBytes","_input","signPersonalMessage","signMsgRes","suiSignPersonalMessage","TronProvider","tronWeb","tronWebPromise","sdk","tronAddress","privateKey","constructTronTxReq","getAptos","AccountAddress","Aptos","APTOS_COIN","AptosConfig","Serializer","SimpleTransaction","Ed25519Signature","Ed25519PublicKey","AccountAuthenticatorEd25519","Network","AccountAuthenticator","import","getAptosClient","isTestnet","fullnode","faucet","CUSTOM","UserResponseStatus","LoginAction","MovementProvider","asFeePayer","txn","serializer","serializedData","toUint8Array","Buffer","getRawTransactionFromTxn","constructMovementTxReq","signMovementTx","signedTransaction","signResObj","publicKeyStr","sig","buildAptosSignTransactionOutput","APPROVED","fullMessage","REJECTED","movementSignMessage","prefix","signAndSubmitTransaction","simple","fromString","senderAuthenticator","sendTx","submit","sendMovementTx","waitForTransaction","getMovementTransactionStatus","movementAddress","shouldHandle","removeEvent","removeEventId","handlerMap","action","telegramAuthEventId","Link","linkTelegram","loginByTelegram","googleAuthEventId","linkGoogle","loginByGoogle","linkTwitter","loginByTwitter","kakaoAuthEventId","postData","querystring","grant_type","client_id","redirect_uri","resp","access_token","loginByKakao","getConnection","createSolTx","toAddress","mintAddress","fromPublicKey","toPublicKey","tokenPublicKey","fromTokenPubKey","getAssociatedTokenAddress","toTokenPubKey","getAccount","TokenAccountNotFoundError","TokenInvalidAccountOwnerError","createAssociatedTokenAccountInstruction","createTransferInstruction","TOKEN_PROGRAM_ID","SystemProgram","transfer","fromPubkey","toPubkey","lamports","parseSolTx","instructions","programId","equals","amountData","BN","fromTokenAccount","pubkey","toTokenAccount","toAccount","fromAccount","ASSOCIATED_TOKEN_PROGRAM_ID","mintKey","ownerKey","lamportsData","BASE_RELAY_TEST_URL","BASE_RELAY_PROD_URL","loginTypes","TomoSDK","ethereumProvider","bitcoinProvider","solanaProvider","tronProvider","movementProvider","suiProvider","_initialize","onmessage","msgProcessor","setLevel","handler","messageProcessor","login","Login","stateParam","encodeURIComponent","listenerFn","linkSocial","getLinkSocialInfo","loginByGmail","userInfoDTO","googleCode","authData","telegramAuthData","loginByX","twitterCode","twitterRedirectUri","sendCode","email","checkResp","emailCheck","sendRegister","loginCode","verifyCode","verifyRegister","loginVerify","handleLoginByEmailSuccess","getPrices","tokenSymbols","getPrice","logout","removeLocalUserId","removeLocalLoginType","tradePaswordStatus","requestAccounts","dashboardConfig","projectName","theme","links","getElementsByTagName","rel","getFaviconUrl","setIframeToken","setTokenSuccess","verifyLoginEmail","sendReq","setPayPinAndEmail","setPayPin","changePayPin","bindEmail","addRecoveryEmail","hasEmail","bindEmailCode","bindEmailCodeVerify","getDefaultTokens","defaultTokens","getDashboardTokens","dashboardTokens","searchToken","tokenSearch","getHoldEvmTokens","holdEvmTokens","getHoldSolTokens","holdSolTokens","getUserWalletTokens","userWalletTokens","userWalletTokensUpdate","tokens","updateUserWalletTokens","userWalletTokenAdd","walletAddress","addUserWalletToken","userWalletTokenRemove","removeUserWalletToken","createPasskey","mfaRequest","getPasskeyStatus","localPasskeyStatus","getLocalPasskey","localCreated","remoteExised","mfaPKExisted","getJwtToken","getUserSocialInfo","ret","getSocialInfo","inviterBound","currentTime","createTime","ownerUid","getUserIdWithClientId","inviter","bindInviter","getSwapTokens","getSwapTokenList","onboarding","WebWalletInvokeType","ONBOARDING","openSwap","SWAP","openChangePayPin","CHANGE_PAY_PIN","openOnramp","ONRAMP","openSend","SEND","openReceive","RECEIVE","closeAllRelayWindow","close","handleWebWalletInvoke","CODE_TO_ERROR_TYPE","SuiHTTPTransportError","JsonRpcError","SuiHTTPStatusError","statusText","_requestId","_disconnects","_webSocket","_connectionPromise","_subscriptions","_pendingRequests","_WebsocketClient_instances","setupWebSocket_fn","reconnect_fn","__privateMethod","DEFAULT_CLIENT_OPTIONS","WebSocketConstructor","WebSocket","callTimeout","reconnectTimeout","maxReconnects","WebsocketClient","Set","httpUrl","URL","protocol","getWebsocketUrl","makeRequest","signal","timeout","setTimeout","send","jsonrpc","subscribe","subscription","RpcSubscription","unsubscribe","_","resolve2","clearTimeout","subscriptionId","onMessage","allSettled","subscribed","newSubscriptionId","_options","_websocketClient","_SuiHTTPTransport_instances","getWebsocketClient_fn","SuiHTTPTransport","fetch","init","fetchFn","rpc","ok","throwIfAborted","websocket","_prefix","_cache","ClientCache","_ClientCache","load","clear","prefixKey","Experimental_BaseClient","$extend","registrations","fromEntries","registration","register","experimental_asClientExtension","_stringify","getPrototypeOf","_addIssue","dataset","config2","other","expected","expects","received","issue","requirement","path","issues","lang","abortEarly","abortPipeEarly","isSchema","getSpecificMessage","getSchemaMessage","getGlobalMessage","typed","_isValidObjectKey","object2","ValiError","check","reference","_run","isInteger","operation","getDefault","is","value2","itemDataset","pathItem","unshift","boolean","literal","literal_","nullable","nullish","valueDataset","optional","record","entryKey","entryValue","keyDataset","items","_subIssues","datasets","union","validDataset","typedDatasets","untypedDatasets","optionDataset","unknown","store","getGlobalConfig","pipe","pipe2","safeEnum","SuiAddress","ObjectID","BCSBytes","JsonU64","ObjectRef","OpenMoveTypeSignatureBody","datatype","typeParameters","typeParameter","OpenMoveTypeSignature","ref","_argumentTypes","$Intent","UnresolvedPure","UnresolvedObject","NormalizedCallArg","Commands","pkg","mod","o","ImmOrOwned","TransactionInput","StringEncodedBigint","GasConfig","TransactionArgument","resultIndex","MoveCallTransaction","TransferObjectsTransaction","SplitCoinsTransaction","MergeCoinsTransaction","MakeMoveVecTransaction","TransactionType","serializeV1TransactionData","transactionData","gasConfig","arg","convertTransactionArgument","parseV1TransactionArgument","enumUnion","SerializedTransactionDataV2","Inputs","ReceivingRef","resolveTransactionPlugin","normalizeRawArgument","normalizeRawArguments","some","onlyTransactionKind","needsTransactionResolution","getClient","plugin","createPure","makePure","pure","typeOrSerializedValue","prepareSuiAddress","TransactionDataBuilder","fromKindBytes","programmableTx","restore","rawData","transactionDataFromV1","getDigestFromBytes","typeTagBytes","dataWithTag","hashTypedData","maxSizeBytes","addInput","getInputUses","mapArguments","mapCommandArguments","commandIndex","replaceCommand","replacement","sizeDiff","_command","getDigest","snapshot","shallowClone","getIdFromCallArg","_serializationPlugins","_buildPlugins","_intentResolvers","_inputSection","_commandSection","_availableResults","_pendingPromises","_added","_data","_Transaction_instances","fork_fn","addCommand_fn","addInput_fn","normalizeTransactionArgument_fn","resolveArgument_fn","prepareBuild_fn","runPlugins_fn","waitForPendingTasks_fn","sortCommandsAndInputs_fn","createTransactionResult","nestedResults","nestedResultFor","Proxy","property","Reflect","TRANSACTION_BRAND","isTransaction","modulePluginRegistry","buildPlugins","serializationPlugins","TRANSACTION_REGISTRY_KEY","getGlobalPluginRegistry","globalThis","_Transaction","makeObject","system","clock","random","denyList","moveCall","createObjectMethods","inserted","globalPlugins","fromKind","serialized","newTransaction","getData","registerGlobalSerializationPlugin","stepOrStep","step","unregisterGlobalSerializationPlugin","registerGlobalBuildPlugin","unregisterGlobalBuildPlugin","addSerializationPlugin","addBuildPlugin","addIntentResolver","resolver","setExpiration","setGasPrice","setGasBudget","setGasBudgetIfNotSet","setGasOwner","setGasPayment","payments","blockData","objectRef","receivingRef","sharedObjectRef","fork","placeholder","result2","txResult","splitCoins","mergeCoins","publish","upgrade","transferObjects","makeMoveVec","prepareForSerialization","_key","sign","buildOptions","intents","steps","supportedIntents","resolved","plugins","createNext","calledNext","nextResolved","newPromise","all","unorderedCommands","unorderedInputs","orderedCommands","flat","orderedInputs","filteredCommands","cmd","getOriginalIndex","updated","Experimental_CoreClient","getObject","getObjects","objectIds","getDynamicField","fieldId","parentId","deriveDynamicFieldID","fieldObject","fieldType","dynamicField","abortSignal","AbortSignal","any","abortPromise","getTransaction","race","SuiClientError","ObjectError","fromResponse","object_id","parent_object_id","getPureBcsSchema","typeSignature","normalizedTypeToMoveTypeSignatureBody","Vector","Struct","TypeParameter","parseTransactionEffectsBcs","parsed","parseTransactionEffectsV1","change","inputVersion","inputDigest","inputOwner","outputVersion","outputDigest","outputOwner","success","auxiliaryDataDigest","parseTransactionEffectsV2","MAX_GAS","moveCallsToResolve","moveFunctionsToResolve","moveFunctionParameters","moduleId","functionId","def","getNormalizedMoveFunction","param","Reference","MutableReference","normalizedTypeToMoveTypeSignature","isTxContext","at","inputValue","normalizeInputs","objectsToResolve","dedupedIds","objectChunks","chunk2","multiGetObjects","ids","showOwner","responsesById","invalidObjects","initial_shared_version","objectsById","isUsedAsMutable","isUsedAsReceiving","resolveObjectReferences","getReferenceGasPrice","dryRunResult","dryRunTransactionBlock","safeOverhead","baseComputationCostWithOverhead","gasBudget","paymentCoins","getCoins","coinObjectId","usedAsMutable","argIndex","usedAsReceiving","isReceivingType","_jsonRpcClient","JSONRpcTransport","jsonRpcClient","batches","batch","results","batch2","showType","showBcs","parseObject","getOwnedObjects","hasNextPage","nextCursor","coins","Coin","totalBalance","getAllBalances","balances","parseTransaction","getTransactionBlock","showRawInput","showObjectChanges","showRawEffects","showEvents","executeTransaction","signatures","dryRunTransaction","objectTypes","objectChanges","parseOwner","recipient","objectType","previousVersion","w","parseTransactionEffectsJson","epoch","referenceGasPrice","getDynamicFields","dynamicFields","bcsName","verifyZkLoginSignature","intentScope","author","errors","dataType","bcsBytes","start_version","parsedTx","rawEffects","Balance","SUI_CLIENT_BRAND","jsonRpc","transport","getRpcApiVersion","getAllCoins","getCoinMetadata","getTotalSupply","getMoveFunctionArgTypes","getNormalizedMoveModulesByPackage","getNormalizedMoveModule","getNormalizedMoveStruct","tryGetPastObject","queryTransactionBlocks","order","multiGetTransactionBlocks","digests","requestType","transactionBytes","toSuiAddress","getTotalTransactionBlocks","getStakes","getStakesByIds","stakedSuiIds","getLatestSuiSystemState","queryEvents","query","subscribeEvent","subscribeTransaction","devInspectTransactionBlock","devInspectTxBytes","getDynamicFieldObject","getLatestCheckpointSequenceNumber","getCheckpoint","getCheckpoints","descendingOrder","getCommitteeInfo","getNetworkMetrics","getAddressMetrics","getEpochMetrics","getAllEpochAddressMetrics","getEpochs","getMoveCallMetrics","getCurrentEpoch","getValidatorsApy","getChainIdentifier","checkpoint","resolveNameServiceAddress","resolveNameServiceNames","lowerCase","labels","normalizeSuiNSName","getProtocolConfig","pollInterval","timeoutSignal","timeoutPromise","aborted"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195]}